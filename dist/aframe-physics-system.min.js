/*! For license information please see aframe-physics-system.min.js.LICENSE.txt */
(()=>{var t={10:(t,e,i)=>{var n=i(687);i(421),i(854),i(344),i(775),i(838),i(404),i(938),i(592),i(696),i(890),i(855),t.exports={registerAll:function(){console.warn("registerAll() is deprecated. Components are automatically registered.")}},window.CANNON=window.CANNON||n},503:(t,e,i)=>{var n=i(687);n.shape2mesh=function(t){var e=new THREE.Object3D;function i(t,e){var i=new THREE.BufferGeometry;return i.setAttribute("position",new THREE.Float32BufferAttribute(t,3)),i.setIndex(e),i.computeBoundingSphere(),i}for(var s=0;s<t.shapes.length;s++){var r,o=t.shapes[s];switch(o.type){case n.Shape.types.SPHERE:var a=new THREE.SphereGeometry(o.radius,8,8);r=new THREE.Mesh(a,this.currentMaterial);break;case n.Shape.types.PARTICLE:r=new THREE.Mesh(this.particleGeo,this.particleMaterial);var l=this.settings;r.scale.set(l.particleSize,l.particleSize,l.particleSize);break;case n.Shape.types.PLANE:var c=new THREE.PlaneGeometry(10,10,4,4);r=new THREE.Object3D;var h=new THREE.Object3D,u=new THREE.Mesh(c,this.currentMaterial);u.scale.set(100,100,100),h.add(u),u.castShadow=!0,u.receiveShadow=!0,r.add(h);break;case n.Shape.types.BOX:var d=new THREE.BoxGeometry(2*o.halfExtents.x,2*o.halfExtents.y,2*o.halfExtents.z);r=new THREE.Mesh(d,this.currentMaterial);break;case n.Shape.types.CONVEXPOLYHEDRON:for(var p=[],m=0;m<o.vertices.length;m++){var f=o.vertices[m];p.push(f.x,f.y,f.z)}var g=[];for(m=0;m<o.faces.length;m++)for(var y=o.faces[m],v=y[0],x=1;x<y.length-1;x++){var _=y[x],b=y[x+1];g.push(v,_,b)}var w=i(p,g);r=new THREE.Mesh(w,this.currentMaterial);break;case n.Shape.types.HEIGHTFIELD:for(var M=new n.Vec3,S=new n.Vec3,E=new n.Vec3,T=(p=[],g=[],0);T<o.data.length-1;T++)for(var A=0;A<o.data[T].length-1;A++)for(var C=0;C<2;C++)o.getConvexTrianglePillar(T,A,0===C),M.copy(o.pillarConvex.vertices[0]),S.copy(o.pillarConvex.vertices[1]),E.copy(o.pillarConvex.vertices[2]),M.vadd(o.pillarOffset,M),S.vadd(o.pillarOffset,S),E.vadd(o.pillarOffset,E),p.push(M.x,M.y,M.z,S.x,S.y,S.z,E.x,E.y,E.z),m=p.length/3-3,g.push(m,m+1,m+2);c=i(p,g),r=new THREE.Mesh(c,this.currentMaterial);break;case n.Shape.types.TRIMESH:for(c=new THREE.BufferGeometry,M=new n.Vec3,S=new n.Vec3,E=new n.Vec3,p=[],g=[],m=0;m<o.indices.length/3;m++)o.getTriangleVertices(m,M,S,E),p.push(M.x,M.y,M.z,S.x,S.y,S.z,E.x,E.y,E.z),x=p.length/3-3,g.push(x,x+1,x+2);c=i(p,g),r=new THREE.Mesh(c,this.currentMaterial);break;default:throw"Visual type not recognized: "+o.type}if(r.receiveShadow=!0,r.castShadow=!0,r.children)for(m=0;m<r.children.length;m++)if(r.children[m].castShadow=!0,r.children[m].receiveShadow=!0,r.children[m])for(x=0;x<r.children[m].length;x++)r.children[m].children[x].castShadow=!0,r.children[m].children[x].receiveShadow=!0;var R=t.shapeOffsets[s],L=t.shapeOrientations[s];r.position.set(R.x,R.y,R.z),r.quaternion.set(L.x,L.y,L.z,L.w),e.add(r)}return e},t.exports=n.shape2mesh},261:()=>{AFRAME.registerComponent("stats-panel",{schema:{merge:{type:"boolean",default:!0}},init(){const t=document.querySelector(".rs-container");if(t&&this.data.merge)return void(this.container=t);this.base=document.createElement("div"),this.base.classList.add("rs-base");const e=document.body||document.getElementsByTagName("body")[0];t&&!this.data.merge&&(this.base.style.top="auto",this.base.style.bottom="20px"),e.appendChild(this.base),this.container=document.createElement("div"),this.container.classList.add("rs-container"),this.base.appendChild(this.container)}}),AFRAME.registerComponent("stats-group",{multiple:!0,schema:{label:{type:"string"}},init(){let t;const e=this.el.components["stats-panel"];t=e?e.container:document.querySelector(".rs-container"),t?(this.groupHeader=document.createElement("h1"),this.groupHeader.innerHTML=this.data.label,t.appendChild(this.groupHeader),this.group=document.createElement("div"),this.group.classList.add("rs-group"),this.group.style.flexDirection="column",this.group.style.webKitFlexDirection="column",t.appendChild(this.group)):console.warn("Couldn't find stats container to add stats to.\n                    Add either stats or stats-panel component to a-scene")}}),AFRAME.registerComponent("stats-row",{multiple:!0,schema:{group:{type:"string"},event:{type:"string"},properties:{type:"array"},label:{type:"string"}},init(){const t="stats-group__"+this.data.group,e=this.el.components[t]||this.el.sceneEl.components[t]||this.el.components["stats-group"]||this.el.sceneEl.components["stats-group"];e?(this.counter=document.createElement("div"),this.counter.classList.add("rs-counter-base"),e.group.appendChild(this.counter),this.counterId=document.createElement("div"),this.counterId.classList.add("rs-counter-id"),this.counterId.innerHTML=this.data.label,this.counter.appendChild(this.counterId),this.counterValues={},this.data.properties.forEach((t=>{const e=document.createElement("div");e.classList.add("rs-counter-value"),e.innerHTML="...",this.counter.appendChild(e),this.counterValues[t]=e})),this.updateData=this.updateData.bind(this),this.el.addEventListener(this.data.event,this.updateData),this.splitCache={}):console.warn(`Couldn't find stats group ${t}`)},updateData(t){this.data.properties.forEach((e=>{const n=this.splitDot(e);let s=t.detail;for(i=0;i<n.length;i++)s=s[n[i]];this.counterValues[e].innerHTML=s}))},splitDot(t){return t in this.splitCache||(this.splitCache[t]=t.split(".")),this.splitCache[t]}}),AFRAME.registerComponent("stats-collector",{multiple:!0,schema:{inEvent:{type:"string"},properties:{type:"array"},outputFrequency:{type:"number",default:100},outEvent:{type:"string"},outputs:{type:"array"},outputToConsole:{type:"string"}},init(){this.statsData={},this.resetData(),this.outputDetail={},this.data.properties.forEach((t=>{this.outputDetail[t]={}})),this.statsReceived=this.statsReceived.bind(this),this.el.addEventListener(this.data.inEvent,this.statsReceived)},resetData(){this.counter=0,this.data.properties.forEach((t=>{this.statsData[t]=[]}))},statsReceived(t){this.updateData(t.detail),this.counter++,this.counter===this.data.outputFrequency&&(this.outputData(),this.resetData())},updateData(t){this.data.properties.forEach((e=>{let i=t;i=i[e],this.statsData[e].push(i)}))},outputData(){this.data.properties.forEach((t=>{this.data.outputs.forEach((e=>{this.outputDetail[t][e]=this.computeOutput(e,this.statsData[t])}))})),this.data.outEvent&&this.el.emit(this.data.outEvent,this.outputDetail),this.data.outputToConsole&&console.log(this.data.outputToConsole,this.outputDetail)},computeOutput(t,e){const i=t.split("__");let n;switch(i[0]){case"mean":n=e.reduce(((t,e)=>t+e),0)/e.length;break;case"max":n=Math.max(...e);break;case"min":n=Math.min(...e);break;case"percentile":const t=e.sort(((t,e)=>t-e)),s=+i[1].replace("_",".")/100,r=(e.length-1)*s,o=Math.floor(r),a=r-o;n=void 0!==t[o+1]?t[o]+a*(t[o+1]-t[o]):t[o]}return n.toFixed(2)}})},694:()=>{THREE.AmmoDebugConstants={NoDebug:0,DrawWireframe:1,DrawAabb:2,DrawFeaturesText:4,DrawContactPoints:8,NoDeactivation:16,NoHelpText:32,DrawText:64,ProfileTimings:128,EnableSatComparison:256,DisableBulletLCP:512,EnableCCD:1024,DrawConstraints:2048,DrawConstraintLimits:4096,FastWireframe:8192,DrawNormals:16384,DrawOnTop:32768,MAX_DEBUG_DRAW_MODE:4294967295},THREE.AmmoDebugDrawer=function(t,e,i){this.scene=t,this.world=e,i=i||{},this.debugDrawMode=i.debugDrawMode||THREE.AmmoDebugConstants.DrawWireframe;var n=this.debugDrawMode&THREE.AmmoDebugConstants.DrawOnTop||!1,s=i.maxBufferSize||1e6;this.geometry=new THREE.BufferGeometry;var r=new Float32Array(3*s),o=new Float32Array(3*s);this.geometry.addAttribute("position",new THREE.BufferAttribute(r,3).setDynamic(!0)),this.geometry.addAttribute("color",new THREE.BufferAttribute(o,3).setDynamic(!0)),this.index=0;var a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!n});this.mesh=new THREE.LineSegments(this.geometry,a),n&&(this.mesh.renderOrder=999),this.mesh.frustumCulled=!1,this.enabled=!1,this.debugDrawer=new Ammo.DebugDrawer,this.debugDrawer.drawLine=this.drawLine.bind(this),this.debugDrawer.drawContactPoint=this.drawContactPoint.bind(this),this.debugDrawer.reportErrorWarning=this.reportErrorWarning.bind(this),this.debugDrawer.draw3dText=this.draw3dText.bind(this),this.debugDrawer.setDebugMode=this.setDebugMode.bind(this),this.debugDrawer.getDebugMode=this.getDebugMode.bind(this),this.debugDrawer.enable=this.enable.bind(this),this.debugDrawer.disable=this.disable.bind(this),this.debugDrawer.update=this.update.bind(this),this.world.setDebugDrawer(this.debugDrawer)},THREE.AmmoDebugDrawer.prototype=function(){return this.debugDrawer},THREE.AmmoDebugDrawer.prototype.enable=function(){this.enabled=!0,this.scene.add(this.mesh)},THREE.AmmoDebugDrawer.prototype.disable=function(){this.enabled=!1,this.scene.remove(this.mesh)},THREE.AmmoDebugDrawer.prototype.update=function(){this.enabled&&(0!=this.index&&(this.geometry.attributes.position.needsUpdate=!0,this.geometry.attributes.color.needsUpdate=!0),this.index=0,this.world.debugDrawWorld(),this.geometry.setDrawRange(0,this.index))},THREE.AmmoDebugDrawer.prototype.drawLine=function(t,e,i){const n=Ammo.HEAPF32,s=n[(i+0)/4],r=n[(i+4)/4],o=n[(i+8)/4],a=n[(t+0)/4],l=n[(t+4)/4],c=n[(t+8)/4];this.geometry.attributes.position.setXYZ(this.index,a,l,c),this.geometry.attributes.color.setXYZ(this.index++,s,r,o);const h=n[(e+0)/4],u=n[(e+4)/4],d=n[(e+8)/4];this.geometry.attributes.position.setXYZ(this.index,h,u,d),this.geometry.attributes.color.setXYZ(this.index++,s,r,o)},THREE.AmmoDebugDrawer.prototype.drawContactPoint=function(t,e,i,n,s){const r=Ammo.HEAPF32,o=r[(s+0)/4],a=r[(s+4)/4],l=r[(s+8)/4],c=r[(t+0)/4],h=r[(t+4)/4],u=r[(t+8)/4];this.geometry.attributes.position.setXYZ(this.index,c,h,u),this.geometry.attributes.color.setXYZ(this.index++,o,a,l);const d=r[(e+0)/4]*i,p=r[(e+4)/4]*i,m=r[(e+8)/4]*i;this.geometry.attributes.position.setXYZ(this.index,c+d,h+p,u+m),this.geometry.attributes.color.setXYZ(this.index++,o,a,l)},THREE.AmmoDebugDrawer.prototype.reportErrorWarning=function(t){Ammo.hasOwnProperty("Pointer_stringify")?console.warn(Ammo.Pointer_stringify(t)):this.warnedOnce||(this.warnedOnce=!0,console.warn("Cannot print warningString, please rebuild Ammo.js using 'debug' flag"))},THREE.AmmoDebugDrawer.prototype.draw3dText=function(t,e){console.warn("TODO: draw3dText")},THREE.AmmoDebugDrawer.prototype.setDebugMode=function(t){this.debugDrawMode=t},THREE.AmmoDebugDrawer.prototype.getDebugMode=function(){return this.debugDrawMode}},687:(t,e,i)=>{"use strict";i.r(e),i.d(e,{AABB:()=>c,ArrayCollisionMatrix:()=>d,BODY_SLEEP_STATES:()=>C,BODY_TYPES:()=>A,Body:()=>R,Box:()=>S,Broadphase:()=>G,COLLISION_TYPES:()=>ln,ConeTwistConstraint:()=>ie,Constraint:()=>Pt,ContactEquation:()=>Ht,ContactMaterial:()=>de,ConvexPolyhedron:()=>b,Cylinder:()=>ui,DistanceConstraint:()=>ne,Equation:()=>Dt,EventTarget:()=>p,FrictionEquation:()=>ce,GSSolver:()=>qi,GridBroadphase:()=>Y,Heightfield:()=>fi,HingeConstraint:()=>oe,JacobianElement:()=>It,LockConstraint:()=>se,Mat3:()=>s,Material:()=>pe,NaiveBroadphase:()=>J,Narrowphase:()=>cn,ObjectCollisionMatrix:()=>n,Particle:()=>di,Plane:()=>pi,PointToPointConstraint:()=>Zt,Pool:()=>on,Quaternion:()=>m,RAY_MODES:()=>Q,Ray:()=>$,RaycastResult:()=>K,RaycastVehicle:()=>Re,RigidVehicle:()=>ti,RotationalEquation:()=>$t,RotationalMotorEquation:()=>re,SAPBroadphase:()=>Rt,SHAPE_TYPES:()=>y,SPHSystem:()=>ni,Shape:()=>v,Solver:()=>Wi,Sphere:()=>$e,SplitSolver:()=>Zi,Spring:()=>me,Transform:()=>x,Trimesh:()=>Li,Vec3:()=>r,Vec3Pool:()=>an,World:()=>Rs});class n{constructor(){this.matrix={}}get(t,e){let{id:i}=t,{id:n}=e;if(n>i){const t=n;n=i,i=t}return i+"-"+n in this.matrix}set(t,e,i){let{id:n}=t,{id:s}=e;if(s>n){const t=s;s=n,n=t}i?this.matrix[n+"-"+s]=!0:delete this.matrix[n+"-"+s]}reset(){this.matrix={}}setNumObjects(t){}}class s{constructor(t=[0,0,0,0,0,0,0,0,0]){this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t=new r){const e=this.elements;t.x=e[0],t.y=e[4],t.z=e[8]}vmult(t,e=new r){const i=this.elements,n=t.x,s=t.y,o=t.z;return e.x=i[0]*n+i[1]*s+i[2]*o,e.y=i[3]*n+i[4]*s+i[5]*o,e.z=i[6]*n+i[7]*s+i[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e=new s){const{elements:i}=t;for(let t=0;t<3;t++)for(let n=0;n<3;n++){let s=0;for(let e=0;e<3;e++)s+=i[t+3*e]*this.elements[e+3*n];e.elements[t+3*n]=s}return e}scale(t,e=new s){const i=this.elements,n=e.elements;for(let e=0;3!==e;e++)n[3*e+0]=t.x*i[3*e+0],n[3*e+1]=t.y*i[3*e+1],n[3*e+2]=t.z*i[3*e+2];return e}solve(t,e=new r){const i=[];let n,s;for(n=0;n<12;n++)i.push(0);for(n=0;n<3;n++)for(s=0;s<3;s++)i[n+4*s]=this.elements[n+3*s];i[3]=t.x,i[7]=t.y,i[11]=t.z;let o=3;const a=o;let l,c;do{if(n=a-o,0===i[n+4*n])for(s=n+1;s<a;s++)if(0!==i[n+4*s]){l=4;do{c=4-l,i[c+4*n]+=i[c+4*s]}while(--l);break}if(0!==i[n+4*n])for(s=n+1;s<a;s++){const t=i[n+4*s]/i[n+4*n];l=4;do{c=4-l,i[c+4*s]=c<=n?0:i[c+4*s]-i[c+4*n]*t}while(--l)}}while(--o);if(e.z=i[11]/i[10],e.y=(i[7]-i[6]*e.z)/i[5],e.x=(i[3]-i[2]*e.z-i[1]*e.y)/i[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw"Could not solve equation! Got x=["+e.toString()+"], b=["+t.toString()+"], A=["+this.toString()+"]";return e}e(t,e,i){if(void 0===i)return this.elements[e+3*t];this.elements[e+3*t]=i}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";for(let e=0;e<9;e++)t+=this.elements[e]+",";return t}reverse(t=new s){const e=[];let i,n;for(i=0;i<18;i++)e.push(0);for(i=0;i<3;i++)for(n=0;n<3;n++)e[i+6*n]=this.elements[i+3*n];e[3]=1,e[9]=0,e[15]=0,e[4]=0,e[10]=1,e[16]=0,e[5]=0,e[11]=0,e[17]=1;let r=3;const o=r;let a,l;do{if(i=o-r,0===e[i+6*i])for(n=i+1;n<o;n++)if(0!==e[i+6*n]){a=6;do{l=6-a,e[l+6*i]+=e[l+6*n]}while(--a);break}if(0!==e[i+6*i])for(n=i+1;n<o;n++){const t=e[i+6*n]/e[i+6*i];a=6;do{l=6-a,e[l+6*n]=l<=i?0:e[l+6*n]-e[l+6*i]*t}while(--a)}}while(--r);i=2;do{n=i-1;do{const t=e[i+6*n]/e[i+6*i];a=6;do{l=6-a,e[l+6*n]=e[l+6*n]-e[l+6*i]*t}while(--a)}while(n--)}while(--i);i=2;do{const t=1/e[i+6*i];a=6;do{l=6-a,e[l+6*i]=e[l+6*i]*t}while(--a)}while(i--);i=2;do{n=2;do{if(l=e[3+n+6*i],isNaN(l)||l===1/0)throw"Could not reverse! A=["+this.toString()+"]";t.e(i,n,l)}while(n--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,i=t.y,n=t.z,s=t.w,r=e+e,o=i+i,a=n+n,l=e*r,c=e*o,h=e*a,u=i*o,d=i*a,p=n*a,m=s*r,f=s*o,g=s*a,y=this.elements;return y[0]=1-(u+p),y[1]=c-g,y[2]=h+f,y[3]=c+g,y[4]=1-(l+p),y[5]=d-m,y[6]=h-f,y[7]=d+m,y[8]=1-(l+u),this}transpose(t=new s){const e=t.elements,i=this.elements;for(let t=0;3!==t;t++)for(let n=0;3!==n;n++)e[3*t+n]=i[3*n+t];return t}}class r{constructor(t=0,e=0,i=0){this.x=t,this.y=e,this.z=i}cross(t,e=new r){const i=t.x,n=t.y,s=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*s-l*n,e.y=l*i-o*s,e.z=o*n-a*i,e}set(t,e,i){return this.x=t,this.y=e,this.z=i,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(!e)return new r(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z}vsub(t,e){if(!e)return new r(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z}crossmat(){return new s([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,i=this.z,n=Math.sqrt(t*t+e*e+i*i);if(n>0){const t=1/n;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return n}unit(t=new r){const e=this.x,i=this.y,n=this.z;let s=Math.sqrt(e*e+i*i+n*n);return s>0?(s=1/s,t.x=e*s,t.y=i*s,t.z=n*s):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,i=this.z;return Math.sqrt(t*t+e*e+i*i)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,i=this.y,n=this.z,s=t.x,r=t.y,o=t.z;return Math.sqrt((s-e)*(s-e)+(r-i)*(r-i)+(o-n)*(o-n))}distanceSquared(t){const e=this.x,i=this.y,n=this.z,s=t.x,r=t.y,o=t.z;return(s-e)*(s-e)+(r-i)*(r-i)+(o-n)*(o-n)}scale(t,e=new r){const i=this.x,n=this.y,s=this.z;return e.x=t*i,e.y=t*n,e.z=t*s,e}vmul(t,e=new r){return e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,i=new r){return i.x=this.x+t*e.x,i.y=this.y+t*e.y,i.z=this.z+t*e.z,i}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return 0===this.x&&0===this.y&&0===this.z}negate(t=new r){return t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const i=this.length();if(i>0){const n=o,s=1/i;n.set(this.x*s,this.y*s,this.z*s);const r=a;Math.abs(n.x)<.9?(r.set(1,0,0),n.cross(r,t)):(r.set(0,1,0),n.cross(r,t)),n.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return this.x+","+this.y+","+this.z}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,i){const n=this.x,s=this.y,r=this.z;i.x=n+(t.x-n)*e,i.y=s+(t.y-s)*e,i.z=r+(t.z-r)*e}almostEquals(t,e=1e-6){return!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t=1e-6){return!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(l),l.almostEquals(t,e)}clone(){return new r(this.x,this.y,this.z)}}r.ZERO=new r(0,0,0),r.UNIT_X=new r(1,0,0),r.UNIT_Y=new r(0,1,0),r.UNIT_Z=new r(0,0,1);const o=new r,a=new r,l=new r;class c{constructor(t={}){this.lowerBound=new r,this.upperBound=new r,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,i,n){const s=this.lowerBound,r=this.upperBound,o=i;s.copy(t[0]),o&&o.vmult(s,s),r.copy(s);for(let e=1;e<t.length;e++){let i=t[e];o&&(o.vmult(i,h),i=h),i.x>r.x&&(r.x=i.x),i.x<s.x&&(s.x=i.x),i.y>r.y&&(r.y=i.y),i.y<s.y&&(s.y=i.y),i.z>r.z&&(r.z=i.z),i.z<s.z&&(s.z=i.z)}return e&&(e.vadd(s,s),e.vadd(r,r)),n&&(s.x-=n,s.y-=n,s.z-=n,r.x+=n,r.y+=n,r.z+=n),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return(new c).copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,i=this.upperBound,n=t.lowerBound,s=t.upperBound,r=n.x<=i.x&&i.x<=s.x||e.x<=s.x&&s.x<=i.x,o=n.y<=i.y&&i.y<=s.y||e.y<=s.y&&s.y<=i.y,a=n.z<=i.z&&i.z<=s.z||e.z<=s.z&&s.z<=i.z;return r&&o&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,i=this.upperBound,n=t.lowerBound,s=t.upperBound;return e.x<=n.x&&i.x>=s.x&&e.y<=n.y&&i.y>=s.y&&e.z<=n.z&&i.z>=s.z}getCorners(t,e,i,n,s,r,o,a){const l=this.lowerBound,c=this.upperBound;t.copy(l),e.set(c.x,l.y,l.z),i.set(c.x,c.y,l.z),n.set(l.x,c.y,c.z),s.set(c.x,l.y,c.z),r.set(l.x,c.y,l.z),o.set(l.x,l.y,c.z),a.copy(c)}toLocalFrame(t,e){const i=u,n=i[0],s=i[1],r=i[2],o=i[3],a=i[4],l=i[5],c=i[6],h=i[7];this.getCorners(n,s,r,o,a,l,c,h);for(let e=0;8!==e;e++){const n=i[e];t.pointToLocal(n,n)}return e.setFromPoints(i)}toWorldFrame(t,e){const i=u,n=i[0],s=i[1],r=i[2],o=i[3],a=i[4],l=i[5],c=i[6],h=i[7];this.getCorners(n,s,r,o,a,l,c,h);for(let e=0;8!==e;e++){const n=i[e];t.pointToWorld(n,n)}return e.setFromPoints(i)}overlapsRay(t){const{direction:e,from:i}=t,n=1/e.x,s=1/e.y,r=1/e.z,o=(this.lowerBound.x-i.x)*n,a=(this.upperBound.x-i.x)*n,l=(this.lowerBound.y-i.y)*s,c=(this.upperBound.y-i.y)*s,h=(this.lowerBound.z-i.z)*r,u=(this.upperBound.z-i.z)*r,d=Math.max(Math.max(Math.min(o,a),Math.min(l,c)),Math.min(h,u)),p=Math.min(Math.min(Math.max(o,a),Math.max(l,c)),Math.max(h,u));return!(p<0||d>p)}}const h=new r,u=[new r,new r,new r,new r,new r,new r,new r,new r];class d{constructor(){this.matrix=[]}get(t,e){let{index:i}=t,{index:n}=e;if(n>i){const t=n;n=i,i=t}return this.matrix[(i*(i+1)>>1)+n-1]}set(t,e,i){let{index:n}=t,{index:s}=e;if(s>n){const t=s;s=n,n=t}this.matrix[(n*(n+1)>>1)+s-1]=i?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class p{constructor(){}addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;return void 0===i[t]&&(i[t]=[]),i[t].includes(e)||i[t].push(e),this}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return!(void 0===i[t]||!i[t].includes(e))}hasAnyEventListener(t){return void 0!==this._listeners&&void 0!==this._listeners[t]}removeEventListener(t,e){if(void 0===this._listeners)return this;const i=this._listeners;if(void 0===i[t])return this;const n=i[t].indexOf(e);return-1!==n&&i[t].splice(n,1),this}dispatchEvent(t){if(void 0===this._listeners)return this;const e=this._listeners[t.type];if(void 0!==e){t.target=this;for(let i=0,n=e.length;i<n;i++)e[i].call(this,t)}return this}}class m{constructor(t=0,e=0,i=0,n=1){this.x=t,this.y=e,this.z=i,this.w=n}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}toString(){return this.x+","+this.y+","+this.z+","+this.w}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const i=Math.sin(.5*e);return this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this.w=Math.cos(.5*e),this}toAxisAngle(t=new r){this.normalize();const e=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/i,t.y=this.y/i,t.z=this.z/i),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const e=f,i=g;t.tangents(e,i),this.setFromAxisAngle(e,Math.PI)}else{const i=t.cross(e);this.x=i.x,this.y=i.y,this.z=i.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e=new m){const i=this.x,n=this.y,s=this.z,r=this.w,o=t.x,a=t.y,l=t.z,c=t.w;return e.x=i*c+r*o+n*l-s*a,e.y=n*c+r*a+s*o-i*l,e.z=s*c+r*l+i*a-n*o,e.w=r*c-i*o-n*a-s*l,e}inverse(t=new m){const e=this.x,i=this.y,n=this.z,s=this.w;this.conjugate(t);const r=1/(e*e+i*i+n*n+s*s);return t.x*=r,t.y*=r,t.z*=r,t.w*=r,t}conjugate(t=new m){return t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e=new r){const i=t.x,n=t.y,s=t.z,o=this.x,a=this.y,l=this.z,c=this.w,h=c*i+a*s-l*n,u=c*n+l*i-o*s,d=c*s+o*n-a*i,p=-o*i-a*n-l*s;return e.x=h*c+p*-o+u*-l-d*-a,e.y=u*c+p*-a+d*-o-h*-l,e.z=d*c+p*-l+h*-a-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e="YZX"){let i,n,s;const r=this.x,o=this.y,a=this.z,l=this.w;if("YZX"!==e)throw new Error("Euler order "+e+" not supported yet.");{const t=r*o+a*l;if(t>.499&&(i=2*Math.atan2(r,l),n=Math.PI/2,s=0),t<-.499&&(i=-2*Math.atan2(r,l),n=-Math.PI/2,s=0),void 0===i){const e=r*r,c=o*o,h=a*a;i=Math.atan2(2*o*l-2*r*a,1-2*c-2*h),n=Math.asin(2*t),s=Math.atan2(2*r*l-2*o*a,1-2*e-2*h)}}t.y=i,t.z=n,t.x=s}setFromEuler(t,e,i,n="XYZ"){const s=Math.cos(t/2),r=Math.cos(e/2),o=Math.cos(i/2),a=Math.sin(t/2),l=Math.sin(e/2),c=Math.sin(i/2);return"XYZ"===n?(this.x=a*r*o+s*l*c,this.y=s*l*o-a*r*c,this.z=s*r*c+a*l*o,this.w=s*r*o-a*l*c):"YXZ"===n?(this.x=a*r*o+s*l*c,this.y=s*l*o-a*r*c,this.z=s*r*c-a*l*o,this.w=s*r*o+a*l*c):"ZXY"===n?(this.x=a*r*o-s*l*c,this.y=s*l*o+a*r*c,this.z=s*r*c+a*l*o,this.w=s*r*o-a*l*c):"ZYX"===n?(this.x=a*r*o-s*l*c,this.y=s*l*o+a*r*c,this.z=s*r*c-a*l*o,this.w=s*r*o+a*l*c):"YZX"===n?(this.x=a*r*o+s*l*c,this.y=s*l*o+a*r*c,this.z=s*r*c-a*l*o,this.w=s*r*o-a*l*c):"XZY"===n&&(this.x=a*r*o-s*l*c,this.y=s*l*o-a*r*c,this.z=s*r*c+a*l*o,this.w=s*r*o+a*l*c),this}clone(){return new m(this.x,this.y,this.z,this.w)}slerp(t,e,i=new m){const n=this.x,s=this.y,r=this.z,o=this.w;let a,l,c,h,u,d=t.x,p=t.y,f=t.z,g=t.w;return l=n*d+s*p+r*f+o*g,l<0&&(l=-l,d=-d,p=-p,f=-f,g=-g),1-l>1e-6?(a=Math.acos(l),c=Math.sin(a),h=Math.sin((1-e)*a)/c,u=Math.sin(e*a)/c):(h=1-e,u=e),i.x=h*n+u*d,i.y=h*s+u*p,i.z=h*r+u*f,i.w=h*o+u*g,i}integrate(t,e,i,n=new m){const s=t.x*i.x,r=t.y*i.y,o=t.z*i.z,a=this.x,l=this.y,c=this.z,h=this.w,u=.5*e;return n.x+=u*(s*h+r*c-o*l),n.y+=u*(r*h+o*a-s*c),n.z+=u*(o*h+s*l-r*a),n.w+=u*(-s*a-r*l-o*c),n}}const f=new r,g=new r,y={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class v{constructor(t={}){this.id=v.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=!t.collisionResponse||t.collisionResponse,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw"computeBoundingSphereRadius() not implemented for shape type "+this.type}volume(){throw"volume() not implemented for shape type "+this.type}calculateLocalInertia(t,e){throw"calculateLocalInertia() not implemented for shape type "+this.type}calculateWorldAABB(t,e,i,n){throw"calculateWorldAABB() not implemented for shape type "+this.type}}v.idCounter=0,v.types=y;class x{constructor(t={}){this.position=new r,this.quaternion=new m,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return x.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return x.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e=new r){return this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,i,n=new r){return i.vsub(t,n),e.conjugate(_),_.vmult(n,n),n}static pointToWorldFrame(t,e,i,n=new r){return e.vmult(i,n),n.vadd(t,n),n}static vectorToWorldFrame(t,e,i=new r){return t.vmult(e,i),i}static vectorToLocalFrame(t,e,i,n=new r){return e.w*=-1,e.vmult(i,n),e.w*=-1,n}}const _=new m;class b extends v{constructor(t={}){const{vertices:e=[],faces:i=[],normals:n=[],axes:s,boundingSphereRadius:r}=t;super({type:v.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=i,this.faceNormals=n,0===this.faceNormals.length&&this.computeNormals(),r?this.boundingSphereRadius=r:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=s?s.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,i=this.uniqueEdges;i.length=0;const n=new r;for(let s=0;s!==t.length;s++){const r=t[s],o=r.length;for(let t=0;t!==o;t++){const s=(t+1)%o;e[r[t]].vsub(e[r[s]],n),n.normalize();let a=!1;for(let t=0;t!==i.length;t++)if(i[t].almostEquals(n)||i[t].almostEquals(n)){a=!0;break}a||i.push(n.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let e=0;e<this.faces[t].length;e++)if(!this.vertices[this.faces[t][e]])throw new Error("Vertex "+this.faces[t][e]+" not found!");const e=this.faceNormals[t]||new r;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const i=this.vertices[this.faces[t][0]];if(e.dot(i)<0){console.error(".faceNormals["+t+"] = Vec3("+e.toString()+") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.");for(let e=0;e<this.faces[t].length;e++)console.warn(".vertices["+this.faces[t][e]+"] = Vec3("+this.vertices[this.faces[t][e]].toString()+")")}}}getFaceNormal(t,e){const i=this.faces[t],n=this.vertices[i[0]],s=this.vertices[i[1]],r=this.vertices[i[2]];b.computeNormal(n,s,r,e)}clipAgainstHull(t,e,i,n,s,o,a,l,c){const h=new r;let u=-1,d=-Number.MAX_VALUE;for(let t=0;t<i.faces.length;t++){h.copy(i.faceNormals[t]),s.vmult(h,h);const e=h.dot(o);e>d&&(d=e,u=t)}const p=[];for(let t=0;t<i.faces[u].length;t++){const e=i.vertices[i.faces[u][t]],o=new r;o.copy(e),s.vmult(o,o),n.vadd(o,o),p.push(o)}u>=0&&this.clipFaceAgainstHull(o,t,e,p,a,l,c)}findSeparatingAxis(t,e,i,n,s,o,a,l){const c=new r,h=new r,u=new r,d=new r,p=new r,m=new r;let f=Number.MAX_VALUE;const g=this;if(g.uniqueAxes)for(let r=0;r!==g.uniqueAxes.length;r++){i.vmult(g.uniqueAxes[r],c);const a=g.testSepAxis(c,t,e,i,n,s);if(!1===a)return!1;a<f&&(f=a,o.copy(c))}else{const r=a?a.length:g.faces.length;for(let l=0;l<r;l++){const r=a?a[l]:l;c.copy(g.faceNormals[r]),i.vmult(c,c);const h=g.testSepAxis(c,t,e,i,n,s);if(!1===h)return!1;h<f&&(f=h,o.copy(c))}}if(t.uniqueAxes)for(let r=0;r!==t.uniqueAxes.length;r++){s.vmult(t.uniqueAxes[r],h);const a=g.testSepAxis(h,t,e,i,n,s);if(!1===a)return!1;a<f&&(f=a,o.copy(h))}else{const r=l?l.length:t.faces.length;for(let a=0;a<r;a++){const r=l?l[a]:a;h.copy(t.faceNormals[r]),s.vmult(h,h);const c=g.testSepAxis(h,t,e,i,n,s);if(!1===c)return!1;c<f&&(f=c,o.copy(h))}}for(let r=0;r!==g.uniqueEdges.length;r++){i.vmult(g.uniqueEdges[r],d);for(let r=0;r!==t.uniqueEdges.length;r++)if(s.vmult(t.uniqueEdges[r],p),d.cross(p,m),!m.almostZero()){m.normalize();const r=g.testSepAxis(m,t,e,i,n,s);if(!1===r)return!1;r<f&&(f=r,o.copy(m))}}return n.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,i,n,s,r){b.project(this,t,i,n,w),b.project(e,t,s,r,M);const o=w[0],a=w[1],l=M[0],c=M[1];if(o<c||l<a)return!1;const h=o-c,u=l-a;return h<u?h:u}calculateLocalInertia(t,e){const i=new r,n=new r;this.computeLocalAABB(n,i);const s=i.x-n.x,o=i.y-n.y,a=i.z-n.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*s*2*s+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*s*2*s)}getPlaneConstantOfFace(t){const e=this.faces[t],i=this.faceNormals[t],n=this.vertices[e[0]];return-i.dot(n)}clipFaceAgainstHull(t,e,i,n,s,o,a){const l=new r,c=new r,h=new r,u=new r,d=new r,p=new r,m=new r,f=new r,g=this,y=n,v=[];let x=-1,_=Number.MAX_VALUE;for(let e=0;e<g.faces.length;e++){l.copy(g.faceNormals[e]),i.vmult(l,l);const n=l.dot(t);n<_&&(_=n,x=e)}if(x<0)return;const b=g.faces[x];b.connectedFaces=[];for(let t=0;t<g.faces.length;t++)for(let e=0;e<g.faces[t].length;e++)-1!==b.indexOf(g.faces[t][e])&&t!==x&&-1===b.connectedFaces.indexOf(t)&&b.connectedFaces.push(t);const w=b.length;for(let t=0;t<w;t++){const n=g.vertices[b[t]],s=g.vertices[b[(t+1)%w]];n.vsub(s,c),h.copy(c),i.vmult(h,h),e.vadd(h,h),u.copy(this.faceNormals[x]),i.vmult(u,u),e.vadd(u,u),h.cross(u,d),d.negate(d),p.copy(n),i.vmult(p,p),e.vadd(p,p);const r=b.connectedFaces[t];m.copy(this.faceNormals[r]);const o=this.getPlaneConstantOfFace(r);f.copy(m),i.vmult(f,f);const a=o-f.dot(e);for(this.clipFaceAgainstPlane(y,v,f,a);y.length;)y.shift();for(;v.length;)y.push(v.shift())}m.copy(this.faceNormals[x]);const M=this.getPlaneConstantOfFace(x);f.copy(m),i.vmult(f,f);const S=M-f.dot(e);for(let t=0;t<y.length;t++){let e=f.dot(y[t])+S;if(e<=s&&(console.log("clamped: depth="+e+" to minDist="+s),e=s),e<=o){const i=y[t];if(e<=1e-6){const t={point:i,normal:f,depth:e};a.push(t)}}}}clipFaceAgainstPlane(t,e,i,n){let s,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];s=i.dot(l)+n;for(let h=0;h<a;h++){if(c=t[h],o=i.dot(c)+n,s<0)if(o<0){const t=new r;t.copy(c),e.push(t)}else{const t=new r;l.lerp(c,s/(s-o),t),e.push(t)}else if(o<0){const t=new r;l.lerp(c,s/(s-o),t),e.push(t),e.push(c)}l=c,s=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new r);const i=this.vertices,n=this.worldVertices;for(let s=0;s!==this.vertices.length;s++)e.vmult(i[s],n[s]),t.vadd(n[s],n[s]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const i=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let n=0;n<this.vertices.length;n++){const s=i[n];s.x<t.x?t.x=s.x:s.x>e.x&&(e.x=s.x),s.y<t.y?t.y=s.y:s.y>e.y&&(e.y=s.y),s.z<t.z?t.z=s.z:s.z>e.z&&(e.z=s.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new r);const i=this.faceNormals,n=this.worldFaceNormals;for(let s=0;s!==e;s++)t.vmult(i[s],n[s]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let i=0;i!==e.length;i++){const n=e[i].lengthSquared();n>t&&(t=n)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,i,n){const s=this.vertices;let o,a,l,c,h,u,d=new r;for(let i=0;i<s.length;i++){d.copy(s[i]),e.vmult(d,d),t.vadd(d,d);const n=d;(void 0===o||n.x<o)&&(o=n.x),(void 0===c||n.x>c)&&(c=n.x),(void 0===a||n.y<a)&&(a=n.y),(void 0===h||n.y>h)&&(h=n.y),(void 0===l||n.z<l)&&(l=n.z),(void 0===u||n.z>u)&&(u=n.z)}i.set(o,a,l),n.set(c,h,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t=new r){const e=this.vertices;for(let i=0;i<e.length;i++)t.vadd(e[i],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const i=this.vertices.length,n=this.vertices;if(e){for(let t=0;t<i;t++){const i=n[t];e.vmult(i,i)}for(let t=0;t<this.faceNormals.length;t++){const i=this.faceNormals[t];e.vmult(i,i)}}if(t)for(let e=0;e<i;e++){const i=n[e];i.vadd(t,i)}}pointIsInside(t){const e=this.vertices,i=this.faces,n=this.faceNormals,s=new r;this.getAveragePointLocal(s);for(let o=0;o<this.faces.length;o++){let a=n[o];const l=e[i[o][0]],c=new r;t.vsub(l,c);const h=a.dot(c),u=new r;s.vsub(l,u);const d=a.dot(u);if(h<0&&d>0||h>0&&d<0)return!1}return-1}}b.computeNormal=(t,e,i,n)=>{const s=new r,o=new r;e.vsub(t,o),i.vsub(e,s),s.cross(o,n),n.isZero()||n.normalize()};const w=[],M=[];b.project=(t,e,i,n,s)=>{const o=t.vertices.length,a=new r;let l=0,c=0;const h=new r,u=t.vertices;h.setZero(),x.vectorToLocalFrame(i,n,e,a),x.pointToLocalFrame(i,n,h,h);const d=h.dot(a);c=l=u[0].dot(a);for(let t=1;t<o;t++){const e=u[t].dot(a);e>l&&(l=e),e<c&&(c=e)}if(c-=d,l-=d,c>l){const t=c;c=l,l=t}s[0]=l,s[1]=c};class S extends v{constructor(t){super({type:v.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,i=this.halfExtents.z,n=r,s=[new n(-t,-e,-i),new n(t,-e,-i),new n(t,e,-i),new n(-t,e,-i),new n(-t,-e,i),new n(t,-e,i),new n(t,e,i),new n(-t,e,i)],o=[new n(0,0,1),new n(0,1,0),new n(1,0,0)],a=new b({vertices:s,faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:o});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e=new r){return S.calculateInertia(this.halfExtents,t,e),e}getSideNormals(t,e){const i=t,n=this.halfExtents;if(i[0].set(n.x,0,0),i[1].set(0,n.y,0),i[2].set(0,0,n.z),i[3].set(-n.x,0,0),i[4].set(0,-n.y,0),i[5].set(0,0,-n.z),void 0!==e)for(let t=0;t!==i.length;t++)e.vmult(i[t],i[t]);return i}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,i){const n=this.halfExtents,s=[[n.x,n.y,n.z],[-n.x,n.y,n.z],[-n.x,-n.y,n.z],[-n.x,-n.y,-n.z],[n.x,-n.y,-n.z],[n.x,n.y,-n.z],[-n.x,n.y,-n.z],[n.x,-n.y,n.z]];for(let n=0;n<s.length;n++)E.set(s[n][0],s[n][1],s[n][2]),e.vmult(E,E),t.vadd(E,E),i(E.x,E.y,E.z)}calculateWorldAABB(t,e,i,n){const s=this.halfExtents;T[0].set(s.x,s.y,s.z),T[1].set(-s.x,s.y,s.z),T[2].set(-s.x,-s.y,s.z),T[3].set(-s.x,-s.y,-s.z),T[4].set(s.x,-s.y,-s.z),T[5].set(s.x,s.y,-s.z),T[6].set(-s.x,s.y,-s.z),T[7].set(s.x,-s.y,s.z);const r=T[0];e.vmult(r,r),t.vadd(r,r),n.copy(r),i.copy(r);for(let s=1;s<8;s++){const r=T[s];e.vmult(r,r),t.vadd(r,r);const o=r.x,a=r.y,l=r.z;o>n.x&&(n.x=o),a>n.y&&(n.y=a),l>n.z&&(n.z=l),o<i.x&&(i.x=o),a<i.y&&(i.y=a),l<i.z&&(i.z=l)}}}S.calculateInertia=(t,e,i)=>{const n=t;i.x=1/12*e*(2*n.y*2*n.y+2*n.z*2*n.z),i.y=1/12*e*(2*n.x*2*n.x+2*n.z*2*n.z),i.z=1/12*e*(2*n.y*2*n.y+2*n.x*2*n.x)};const E=new r,T=[new r,new r,new r,new r,new r,new r,new r,new r],A={DYNAMIC:1,STATIC:2,KINEMATIC:4},C={AWAKE:0,SLEEPY:1,SLEEPING:2};class R extends p{constructor(t={}){super(),this.id=R.idCounter++,this.index=-1,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new r,this.collisionFilterGroup="number"==typeof t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof t.collisionFilterMask?t.collisionFilterMask:-1,this.collisionResponse="boolean"!=typeof t.collisionResponse||t.collisionResponse,this.position=new r,this.previousPosition=new r,this.interpolatedPosition=new r,this.initPosition=new r,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new r,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new r,this.force=new r;const e="number"==typeof t.mass?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping="number"==typeof t.linearDamping?t.linearDamping:.01,this.type=e<=0?R.STATIC:R.DYNAMIC,typeof t.type==typeof R.STATIC&&(this.type=t.type),this.allowSleep=void 0===t.allowSleep||t.allowSleep,this.sleepState=0,this.sleepSpeedLimit=void 0!==t.sleepSpeedLimit?t.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==t.sleepTimeLimit?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new r,this.quaternion=new m,this.initQuaternion=new m,this.previousQuaternion=new m,this.interpolatedQuaternion=new m,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new r,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new r,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new r,this.invInertia=new r,this.invInertiaWorld=new s,this.invMassSolve=0,this.invInertiaSolve=new r,this.invInertiaWorldSolve=new s,this.fixedRotation=void 0!==t.fixedRotation&&t.fixedRotation,this.angularDamping=void 0!==t.angularDamping?t.angularDamping:.01,this.linearFactor=new r(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new r(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new c,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new r,t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=0,this.wakeUpAfterNarrowphase=!1,t===R.SLEEPING&&this.dispatchEvent(R.wakeupEvent)}sleep(){this.sleepState=R.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,i=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),n=this.sleepSpeedLimit**2;e===R.AWAKE&&i<n?(this.sleepState=R.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(R.sleepyEvent)):e===R.SLEEPY&&i>n?this.wakeUp():e===R.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(R.sleepEvent))}}updateSolveMassProperties(){this.sleepState===R.SLEEPING||this.type===R.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e=new r){return t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e=new r){return this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e=new r){return this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e=new r){return this.quaternion.vmult(t,e),e}addShape(t,e,i){const n=new r,s=new m;return e&&n.copy(e),i&&s.copy(i),this.shapes.push(t),this.shapeOffsets.push(n),this.shapeOrientations.push(s),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,i=t.length;let n=0;for(let s=0;s!==i;s++){const i=t[s];i.updateBoundingSphereRadius();const r=e[s].length(),o=i.boundingSphereRadius;r+o>n&&(n=r+o)}this.boundingRadius=n}computeAABB(){const t=this.shapes,e=this.shapeOffsets,i=this.shapeOrientations,n=t.length,s=L,r=P,o=this.quaternion,a=this.aabb,l=I;for(let c=0;c!==n;c++){const n=t[c];o.vmult(e[c],s),s.vadd(this.position,s),o.mult(i[c],r),n.calculateWorldAABB(s,r,l.lowerBound,l.upperBound),0===c?a.copy(l):a.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){const t=D,i=N;t.setRotationFromQuaternion(this.quaternion),t.transpose(i),t.scale(e,t),t.mmult(i,this.invInertiaWorld)}}applyForce(t,e){if(this.type!==R.DYNAMIC)return;const i=B;e.cross(t,i),this.force.vadd(t,this.force),this.torque.vadd(i,this.torque)}applyLocalForce(t,e){if(this.type!==R.DYNAMIC)return;const i=F,n=O;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,n),this.applyForce(i,n)}applyImpulse(t,e){if(this.type!==R.DYNAMIC)return;const i=e,n=z;n.copy(t),n.scale(this.invMass,n),this.velocity.vadd(n,this.velocity);const s=U;i.cross(t,s),this.invInertiaWorld.vmult(s,s),this.angularVelocity.vadd(s,this.angularVelocity)}applyLocalImpulse(t,e){if(this.type!==R.DYNAMIC)return;const i=H,n=V;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,n),this.applyImpulse(i,n)}updateMassProperties(){const t=k;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,i=this.fixedRotation;this.computeAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),S.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!i?1/e.x:0,e.y>0&&!i?1/e.y:0,e.z>0&&!i?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const i=new r;return t.vsub(this.position,i),this.angularVelocity.cross(i,e),this.velocity.vadd(e,e),e}integrate(t,e,i){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),this.type!==R.DYNAMIC&&this.type!==R.KINEMATIC||this.sleepState===R.SLEEPING)return;const n=this.velocity,s=this.angularVelocity,r=this.position,o=this.force,a=this.torque,l=this.quaternion,c=this.invMass,h=this.invInertiaWorld,u=this.linearFactor,d=c*t;n.x+=o.x*d*u.x,n.y+=o.y*d*u.y,n.z+=o.z*d*u.z;const p=h.elements,m=this.angularFactor,f=a.x*m.x,g=a.y*m.y,y=a.z*m.z;s.x+=t*(p[0]*f+p[1]*g+p[2]*y),s.y+=t*(p[3]*f+p[4]*g+p[5]*y),s.z+=t*(p[6]*f+p[7]*g+p[8]*y),r.x+=n.x*t,r.y+=n.y*t,r.z+=n.z*t,l.integrate(this.angularVelocity,t,this.angularFactor,l),e&&(i?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}R.COLLIDE_EVENT_NAME="collide",R.DYNAMIC=1,R.STATIC=2,R.KINEMATIC=4,R.AWAKE=C.AWAKE,R.SLEEPY=C.SLEEPY,R.SLEEPING=C.SLEEPING,R.idCounter=0,R.wakeupEvent={type:"wakeup"},R.sleepyEvent={type:"sleepy"},R.sleepEvent={type:"sleep"};const L=new r,P=new m,I=new c,D=new s,N=new s,B=new r,F=new r,O=new r,z=new r,U=new r,H=new r,V=new r,k=new r;class G{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return 0!=(t.collisionFilterGroup&e.collisionFilterMask)&&0!=(e.collisionFilterGroup&t.collisionFilterMask)&&(0==(t.type&R.STATIC)&&t.sleepState!==R.SLEEPING||0==(e.type&R.STATIC)&&e.sleepState!==R.SLEEPING)}intersectionTest(t,e,i,n){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,i,n):this.doBoundingSphereBroadphase(t,e,i,n)}doBoundingSphereBroadphase(t,e,i,n){const s=W;e.position.vsub(t.position,s);const r=(t.boundingRadius+e.boundingRadius)**2;s.lengthSquared()<r&&(i.push(t),n.push(e))}doBoundingBoxBroadphase(t,e,i,n){t.aabbNeedsUpdate&&t.computeAABB(),e.aabbNeedsUpdate&&e.computeAABB(),t.aabb.overlaps(e.aabb)&&(i.push(t),n.push(e))}makePairsUnique(t,e){const i=q,n=j,s=X,r=t.length;for(let i=0;i!==r;i++)n[i]=t[i],s[i]=e[i];t.length=0,e.length=0;for(let t=0;t!==r;t++){const e=n[t].id,r=s[t].id,o=e<r?e+","+r:r+","+e;i[o]=t,i.keys.push(o)}for(let r=0;r!==i.keys.length;r++){const r=i.keys.pop(),o=i[r];t.push(n[o]),e.push(s[o]),delete i[r]}}setWorld(t){}aabbQuery(t,e,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const W=new r,q={keys:[]},j=[],X=[];G.boundingSphereCheck=(t,e)=>{const i=new r;t.position.vsub(e.position,i);const n=t.shapes[0],s=e.shapes[0];return Math.pow(n.boundingSphereRadius+s.boundingSphereRadius,2)>i.lengthSquared()};class Y extends G{constructor(t=new r(100,100,100),e=new r(-100,-100,-100),i=10,n=10,s=10){super(),this.nx=i,this.ny=n,this.nz=s,this.aabbMin=t,this.aabbMax=e;const o=this.nx*this.ny*this.nz;if(o<=0)throw"GridBroadphase: Each dimension's n must be >0";this.bins=[],this.binLengths=[],this.bins.length=o,this.binLengths.length=o;for(let t=0;t<o;t++)this.bins[t]=[],this.binLengths[t]=0}collisionPairs(t,e,i){const n=t.numObjects(),s=t.bodies,r=this.aabbMax,o=this.aabbMin,a=this.nx,l=this.ny,c=this.nz,h=l*c,u=c,d=r.x,p=r.y,m=r.z,f=o.x,g=o.y,y=o.z,x=a/(d-f),_=l/(p-g),b=c/(m-y),w=(d-f)/a,M=(p-g)/l,S=(m-y)/c,E=.5*Math.sqrt(w*w+M*M+S*S),T=v.types,A=T.SPHERE,C=T.PLANE,R=(T.BOX,T.COMPOUND,T.CONVEXPOLYHEDRON,this.bins),L=this.binLengths,P=this.bins.length;for(let t=0;t!==P;t++)L[t]=0;const I=Math.ceil;function D(t,e,i,n,s,r,o){let d=(t-f)*x|0,p=(e-g)*_|0,m=(i-y)*b|0,v=I((n-f)*x),w=I((s-g)*_),M=I((r-y)*b);d<0?d=0:d>=a&&(d=a-1),p<0?p=0:p>=l&&(p=l-1),m<0?m=0:m>=c&&(m=c-1),v<0?v=0:v>=a&&(v=a-1),w<0?w=0:w>=l&&(w=l-1),M<0?M=0:M>=c&&(M=c-1),d*=h,p*=u,m*=1,v*=h,w*=u,M*=1;for(let t=d;t<=v;t+=h)for(let e=p;e<=w;e+=u)for(let i=m;i<=M;i+=1){const n=t+e+i;R[n][L[n]++]=o}}for(let t=0;t!==n;t++){const e=s[t],i=e.shapes[0];switch(i.type){case A:{const t=i,n=e.position.x,s=e.position.y,r=e.position.z,o=t.radius;D(n-o,s-o,r-o,n+o,s+o,r+o,e);break}case C:{const t=i;t.worldNormalNeedsUpdate&&t.computeWorldNormal(e.quaternion);const n=t.worldNormal,s=f+.5*w-e.position.x,r=g+.5*M-e.position.y,o=y+.5*S-e.position.z,d=Z;d.set(s,r,o);for(let t=0,i=0;t!==a;t++,i+=h,d.y=r,d.x+=w)for(let t=0,s=0;t!==l;t++,s+=u,d.z=o,d.y+=M)for(let t=0,r=0;t!==c;t++,r+=1,d.z+=S)if(d.dot(n)<E){const t=i+s+r;R[t][L[t]++]=e}break}default:e.aabbNeedsUpdate&&e.computeAABB(),D(e.aabb.lowerBound.x,e.aabb.lowerBound.y,e.aabb.lowerBound.z,e.aabb.upperBound.x,e.aabb.upperBound.y,e.aabb.upperBound.z,e)}}for(let t=0;t!==P;t++){const n=L[t];if(n>1){const s=R[t];for(let t=0;t!==n;t++){const n=s[t];for(let r=0;r!==t;r++){const t=s[r];this.needBroadphaseCollision(n,t)&&this.intersectionTest(n,t,e,i)}}}}this.makePairsUnique(e,i)}}const Z=new r;class J extends G{constructor(){super()}collisionPairs(t,e,i){const n=t.bodies,s=n.length;let r,o;for(let t=0;t!==s;t++)for(let s=0;s!==t;s++)r=n[t],o=n[s],this.needBroadphaseCollision(r,o)&&this.intersectionTest(r,o,e,i)}aabbQuery(t,e,i=[]){for(let n=0;n<t.bodies.length;n++){const s=t.bodies[n];s.aabbNeedsUpdate&&s.computeAABB(),s.aabb.overlaps(e)&&i.push(s)}return i}}class K{constructor(){this.rayFromWorld=new r,this.rayToWorld=new r,this.hitNormalWorld=new r,this.hitPointWorld=new r,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,i,n,s,r,o){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(n),this.shape=s,this.body=r,this.distance=o}}const Q={CLOSEST:1,ANY:2,ALL:4};class ${constructor(t=new r,e=new r){this.from=t.clone(),this.to=e.clone(),this.direction=new r,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=$.ANY,this.result=new K,this.hasHit=!1,this.callback=t=>{}}intersectWorld(t,e){return this.mode=e.mode||$.ANY,this.result=e.result||new K,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:-1,this.checkCollisionResponse=void 0===e.checkCollisionResponse||e.checkCollisionResponse,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(tt),et.length=0,t.broadphase.aabbQuery(t,tt,et),this.intersectBodies(et),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const i=this.checkCollisionResponse;if(i&&!t.collisionResponse)return;if(0==(this.collisionFilterGroup&t.collisionFilterMask)||0==(t.collisionFilterGroup&this.collisionFilterMask))return;const n=rt,s=ot;for(let e=0,r=t.shapes.length;e<r;e++){const r=t.shapes[e];if((!i||r.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[e],s),t.quaternion.vmult(t.shapeOffsets[e],n),n.vadd(t.position,n),this.intersectShape(r,s,n,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let e=0,i=t.length;!this.result.shouldStop&&e<i;e++)this.intersectBody(t[e])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,i,n){const s=function(t,e,i){i.vsub(t,At);const n=At.dot(e);e.scale(n,Ct),Ct.vadd(t,Ct);return i.distanceTo(Ct)}(this.from,this.direction,i);if(s>t.boundingSphereRadius)return;const r=this[t.type];r&&r.call(this,t,e,i,n,t)}_intersectBox(t,e,i,n,s){return this._intersectConvex(t.convexPolyhedronRepresentation,e,i,n,s)}_intersectPlane(t,e,i,n,s){const o=this.from,a=this.to,l=this.direction,c=new r(0,0,1);e.vmult(c,c);const h=new r;o.vsub(i,h);const u=h.dot(c);if(a.vsub(i,h),u*h.dot(c)>0)return;if(o.distanceTo(a)<u)return;const d=c.dot(l);if(Math.abs(d)<this.precision)return;const p=new r,m=new r,f=new r;o.vsub(i,p);const g=-c.dot(p)/d;l.scale(g,m),o.vadd(m,f),this.reportIntersection(c,f,s,n,-1)}getAABB(t){const{lowerBound:e,upperBound:i}=t,n=this.to,s=this.from;e.x=Math.min(n.x,s.x),e.y=Math.min(n.y,s.y),e.z=Math.min(n.z,s.z),i.x=Math.max(n.x,s.x),i.y=Math.max(n.y,s.y),i.z=Math.max(n.z,s.z)}_intersectHeightfield(t,e,i,n,s){t.data,t.elementSize;const r=pt;r.from.copy(this.from),r.to.copy(this.to),x.pointToLocalFrame(i,e,r.from,r.from),x.pointToLocalFrame(i,e,r.to,r.to),r.updateDirection();const o=mt;let a,l,h,u;a=l=0,h=u=t.data.length-1;const d=new c;r.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,o,!0),a=Math.max(a,o[0]),l=Math.max(l,o[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,o,!0),h=Math.min(h,o[0]+1),u=Math.min(u,o[1]+1);for(let o=a;o<h;o++)for(let a=l;a<u;a++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(o,a,d),d.overlapsRay(r)){if(t.getConvexTrianglePillar(o,a,!1),x.pointToWorldFrame(i,e,t.pillarOffset,dt),this._intersectConvex(t.pillarConvex,e,dt,n,s,ut),this.result.shouldStop)return;t.getConvexTrianglePillar(o,a,!0),x.pointToWorldFrame(i,e,t.pillarOffset,dt),this._intersectConvex(t.pillarConvex,e,dt,n,s,ut)}}}_intersectSphere(t,e,i,n,s){const r=this.from,o=this.to,a=t.radius,l=(o.x-r.x)**2+(o.y-r.y)**2+(o.z-r.z)**2,c=2*((o.x-r.x)*(r.x-i.x)+(o.y-r.y)*(r.y-i.y)+(o.z-r.z)*(r.z-i.z)),h=c**2-4*l*((r.x-i.x)**2+(r.y-i.y)**2+(r.z-i.z)**2-a**2),u=ft,d=gt;if(!(h<0))if(0===h)r.lerp(o,h,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,s,n,-1);else{const t=(-c-Math.sqrt(h))/(2*l),e=(-c+Math.sqrt(h))/(2*l);if(t>=0&&t<=1&&(r.lerp(o,t,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,s,n,-1)),this.result.shouldStop)return;e>=0&&e<=1&&(r.lerp(o,e,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,s,n,-1))}}_intersectConvex(t,e,i,n,s,r){const o=yt,a=vt,l=r&&r.faceList||null,c=t.faces,h=t.vertices,u=t.faceNormals,d=this.direction,p=this.from,m=this.to,f=p.distanceTo(m),g=l?l.length:c.length,y=this.result;for(let t=0;!y.shouldStop&&t<g;t++){const r=l?l[t]:t,m=c[r],g=u[r],v=e,x=i;a.copy(h[m[0]]),v.vmult(a,a),a.vadd(x,a),a.vsub(p,a),v.vmult(g,o);const _=d.dot(o);if(Math.abs(_)<this.precision)continue;const b=o.dot(a)/_;if(!(b<0)){d.scale(b,at),at.vadd(p,at),lt.copy(h[m[0]]),v.vmult(lt,lt),x.vadd(lt,lt);for(let t=1;!y.shouldStop&&t<m.length-1;t++){ct.copy(h[m[t]]),ht.copy(h[m[t+1]]),v.vmult(ct,ct),v.vmult(ht,ht),x.vadd(ct,ct),x.vadd(ht,ht);const e=at.distanceTo(p);!st(at,lt,ct,ht)&&!st(at,ct,lt,ht)||e>f||this.reportIntersection(o,at,s,n,r)}}}}_intersectTrimesh(t,e,i,n,s,r){const o=xt,a=Et,l=Tt,c=vt,h=_t,u=bt,d=wt,p=St,m=Mt,f=(r&&r.faceList,t.indices),g=(t.vertices,this.from),y=this.to,v=this.direction;l.position.copy(i),l.quaternion.copy(e),x.vectorToLocalFrame(i,e,v,h),x.pointToLocalFrame(i,e,g,u),x.pointToLocalFrame(i,e,y,d),d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,u.x*=t.scale.x,u.y*=t.scale.y,u.z*=t.scale.z,d.vsub(u,h),h.normalize();const _=u.distanceSquared(d);t.tree.rayQuery(this,l,a);for(let r=0,l=a.length;!this.result.shouldStop&&r!==l;r++){const l=a[r];t.getNormal(l,o),t.getVertex(f[3*l],lt),lt.vsub(u,c);const d=h.dot(o),g=o.dot(c)/d;if(g<0)continue;h.scale(g,at),at.vadd(u,at),t.getVertex(f[3*l+1],ct),t.getVertex(f[3*l+2],ht);const y=at.distanceSquared(u);!st(at,ct,lt,ht)&&!st(at,lt,ct,ht)||y>_||(x.vectorToWorldFrame(e,o,m),x.pointToWorldFrame(i,e,at,p),this.reportIntersection(m,p,s,n,l))}a.length=0}reportIntersection(t,e,i,n,s){const r=this.from,o=this.to,a=r.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(l.hitFaceIndex=void 0!==s?s:-1,this.mode){case $.ALL:this.hasHit=!0,l.set(r,o,t,e,i,n,a),l.hasHit=!0,this.callback(l);break;case $.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(r,o,t,e,i,n,a));break;case $.ANY:this.hasHit=!0,l.hasHit=!0,l.set(r,o,t,e,i,n,a),l.shouldStop=!0}}}$.CLOSEST=1,$.ANY=2,$.ALL=4;const tt=new c,et=[],it=new r,nt=new r;function st(t,e,i,n){n.vsub(e,At),i.vsub(e,it),t.vsub(e,nt);const s=At.dot(At),r=At.dot(it),o=At.dot(nt),a=it.dot(it),l=it.dot(nt);let c,h;return(c=a*o-r*l)>=0&&(h=s*l-r*o)>=0&&c+h<s*a-r*r}$.pointInTriangle=st;const rt=new r,ot=new m,at=new r,lt=new r,ct=new r,ht=new r;$.prototype[v.types.BOX]=$.prototype._intersectBox,$.prototype[v.types.PLANE]=$.prototype._intersectPlane;const ut={faceList:[0]},dt=new r,pt=new $,mt=[];$.prototype[v.types.HEIGHTFIELD]=$.prototype._intersectHeightfield;const ft=new r,gt=new r;$.prototype[v.types.SPHERE]=$.prototype._intersectSphere;const yt=new r,vt=new r;$.prototype[v.types.CONVEXPOLYHEDRON]=$.prototype._intersectConvex;const xt=new r,_t=new r,bt=new r,wt=new r,Mt=new r,St=new r,Et=(new c,[]),Tt=new x;$.prototype[v.types.TRIMESH]=$.prototype._intersectTrimesh;const At=new r,Ct=new r;class Rt extends G{constructor(t){super(),this.axisList=[],this.world=null,this.axisIndex=0;const e=this.axisList;this._addBodyHandler=t=>{e.push(t.body)},this._removeBodyHandler=t=>{const i=e.indexOf(t.body);-1!==i&&e.splice(i,1)},t&&this.setWorld(t)}setWorld(t){this.axisList.length=0;for(let e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0}collisionPairs(t,e,i){const n=this.axisList,s=n.length,r=this.axisIndex;let o,a;for(this.dirty&&(this.sortList(),this.dirty=!1),o=0;o!==s;o++){const t=n[o];for(a=o+1;a<s;a++){const s=n[a];if(this.needBroadphaseCollision(t,s)){if(!Rt.checkBounds(t,s,r))break;this.intersectionTest(t,s,e,i)}}}}sortList(){const t=this.axisList,e=this.axisIndex,i=t.length;for(let e=0;e!==i;e++){const i=t[e];i.aabbNeedsUpdate&&i.computeAABB()}0===e?Rt.insertionSortX(t):1===e?Rt.insertionSortY(t):2===e&&Rt.insertionSortZ(t)}autoDetectAxis(){let t=0,e=0,i=0,n=0,s=0,r=0;const o=this.axisList,a=o.length,l=1/a;for(let l=0;l!==a;l++){const a=o[l],c=a.position.x;t+=c,e+=c*c;const h=a.position.y;i+=h,n+=h*h;const u=a.position.z;s+=u,r+=u*u}const c=e-t*t*l,h=n-i*i*l,u=r-s*s*l;this.axisIndex=c>h?c>u?0:2:h>u?1:2}aabbQuery(t,e,i=[]){this.dirty&&(this.sortList(),this.dirty=!1);const n=this.axisIndex;let s="x";1===n&&(s="y"),2===n&&(s="z");const r=this.axisList;e.lowerBound[s],e.upperBound[s];for(let t=0;t<r.length;t++){const n=r[t];n.aabbNeedsUpdate&&n.computeAABB(),n.aabb.overlaps(e)&&i.push(n)}return i}}function Lt(){}Rt.insertionSortX=t=>{for(let e=1,i=t.length;e<i;e++){const i=t[e];let n;for(n=e-1;n>=0&&!(t[n].aabb.lowerBound.x<=i.aabb.lowerBound.x);n--)t[n+1]=t[n];t[n+1]=i}return t},Rt.insertionSortY=t=>{for(let e=1,i=t.length;e<i;e++){const i=t[e];let n;for(n=e-1;n>=0&&!(t[n].aabb.lowerBound.y<=i.aabb.lowerBound.y);n--)t[n+1]=t[n];t[n+1]=i}return t},Rt.insertionSortZ=t=>{for(let e=1,i=t.length;e<i;e++){const i=t[e];let n;for(n=e-1;n>=0&&!(t[n].aabb.lowerBound.z<=i.aabb.lowerBound.z);n--)t[n+1]=t[n];t[n+1]=i}return t},Rt.checkBounds=(t,e,i)=>{let n,s;0===i?(n=t.position.x,s=e.position.x):1===i?(n=t.position.y,s=e.position.y):2===i&&(n=t.position.z,s=e.position.z);const r=t.boundingRadius;return s-e.boundingRadius<n+r},Lt.defaults=(t={},e)=>{for(let i in e)i in t||(t[i]=e[i]);return t};class Pt{constructor(t,e,i={}){i=Lt.defaults(i,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Pt.idCounter++,this.collideConnected=i.collideConnected,i.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Pt.idCounter=0;class It{constructor(){this.spatial=new r,this.rotational=new r}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Dt{constructor(t,e,i=-1e6,n=1e6){this.id=Dt.id++,this.minForce=i,this.maxForce=n,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new It,this.jacobianElementB=new It,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,i){const n=e,s=t,r=i;this.a=4/(r*(1+4*n)),this.b=4*n/(1+4*n),this.eps=4/(r*r*s*(1+4*n))}computeB(t,e,i){const n=this.computeGW();return-this.computeGq()*t-n*e-this.computeGiMf()*i}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,s=i.position,r=n.position;return t.spatial.dot(s)+e.spatial.dot(r)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,s=i.velocity,r=n.velocity,o=i.angularVelocity,a=n.angularVelocity;return t.multiplyVectors(s,o)+e.multiplyVectors(r,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,s=i.vlambda,r=n.vlambda,o=i.wlambda,a=n.wlambda;return t.multiplyVectors(s,o)+e.multiplyVectors(r,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,s=i.force,r=i.torque,o=n.force,a=n.torque,l=i.invMassSolve,c=n.invMassSolve;return s.scale(l,Nt),o.scale(c,Bt),i.invInertiaWorldSolve.vmult(r,Ft),n.invInertiaWorldSolve.vmult(a,Ot),t.multiplyVectors(Nt,Ft)+e.multiplyVectors(Bt,Ot)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,s=i.invMassSolve,r=n.invMassSolve,o=i.invInertiaWorldSolve,a=n.invInertiaWorldSolve;let l=s+r;return o.vmult(t.rotational,zt),l+=zt.dot(t.rotational),a.vmult(e.rotational,zt),l+=zt.dot(e.rotational),l}addToWlambda(t){const e=this.jacobianElementA,i=this.jacobianElementB,n=this.bi,s=this.bj,r=Ut;n.vlambda.addScaledVector(n.invMassSolve*t,e.spatial,n.vlambda),s.vlambda.addScaledVector(s.invMassSolve*t,i.spatial,s.vlambda),n.invInertiaWorldSolve.vmult(e.rotational,r),n.wlambda.addScaledVector(t,r,n.wlambda),s.invInertiaWorldSolve.vmult(i.rotational,r),s.wlambda.addScaledVector(t,r,s.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Dt.id=0;const Nt=new r,Bt=new r,Ft=new r,Ot=new r,zt=new r,Ut=new r;class Ht extends Dt{constructor(t,e,i=1e6){super(t,e,0,i),this.restitution=0,this.ri=new r,this.rj=new r,this.ni=new r}computeB(t){const e=this.a,i=this.b,n=this.bi,s=this.bj,r=this.ri,o=this.rj,a=Vt,l=kt,c=n.velocity,h=n.angularVelocity,u=(n.force,n.torque,s.velocity),d=s.angularVelocity,p=(s.force,s.torque,Gt),m=this.jacobianElementA,f=this.jacobianElementB,g=this.ni;r.cross(g,a),o.cross(g,l),g.negate(m.spatial),a.negate(m.rotational),f.spatial.copy(g),f.rotational.copy(l),p.copy(s.position),p.vadd(o,p),p.vsub(n.position,p),p.vsub(r,p);const y=g.dot(p),v=this.restitution+1;return-y*e-(v*u.dot(g)-v*c.dot(g)+d.dot(l)-h.dot(a))*i-t*this.computeGiMf()}getImpactVelocityAlongNormal(){const t=Wt,e=qt,i=jt,n=Xt,s=Yt;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,n),this.bi.getVelocityAtWorldPoint(i,t),this.bj.getVelocityAtWorldPoint(n,e),t.vsub(e,s),this.ni.dot(s)}}const Vt=new r,kt=new r,Gt=new r,Wt=new r,qt=new r,jt=new r,Xt=new r,Yt=new r;class Zt extends Pt{constructor(t,e=new r,i,n=new r,s=1e6){super(t,i),this.pivotA=e.clone(),this.pivotB=n.clone();const o=this.equationX=new Ht(t,i),a=this.equationY=new Ht(t,i),l=this.equationZ=new Ht(t,i);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-s,o.maxForce=a.maxForce=l.maxForce=s,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,i=this.equationX,n=this.equationY,s=this.equationZ;t.quaternion.vmult(this.pivotA,i.ri),e.quaternion.vmult(this.pivotB,i.rj),n.ri.copy(i.ri),n.rj.copy(i.rj),s.ri.copy(i.ri),s.rj.copy(i.rj)}}class Jt extends Dt{constructor(t,e,i={}){const n=void 0!==i.maxForce?i.maxForce:1e6;super(t,e,-n,n),this.axisA=i.axisA?i.axisA.clone():new r(1,0,0),this.axisB=i.axisB?i.axisB.clone():new r(0,1,0),this.angle=void 0!==i.angle?i.angle:0}computeB(t){const e=this.a,i=this.b,n=this.axisA,s=this.axisB,r=Kt,o=Qt,a=this.jacobianElementA,l=this.jacobianElementB;return n.cross(s,r),s.cross(n,o),a.rotational.copy(o),l.rotational.copy(r),-(Math.cos(this.angle)-n.dot(s))*e-this.computeGW()*i-t*this.computeGiMf()}}const Kt=new r,Qt=new r;class $t extends Dt{constructor(t,e,i={}){const n=void 0!==i.maxForce?i.maxForce:1e6;super(t,e,-n,n),this.axisA=i.axisA?i.axisA.clone():new r(1,0,0),this.axisB=i.axisB?i.axisB.clone():new r(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,i=this.b,n=this.axisA,s=this.axisB,r=te,o=ee,a=this.jacobianElementA,l=this.jacobianElementB;return n.cross(s,r),s.cross(n,o),a.rotational.copy(o),l.rotational.copy(r),-(Math.cos(this.maxAngle)-n.dot(s))*e-this.computeGW()*i-t*this.computeGiMf()}}const te=new r,ee=new r;class ie extends Zt{constructor(t,e,i={}){const n=void 0!==i.maxForce?i.maxForce:1e6;super(t,i.pivotA?i.pivotA.clone():new r,e,i.pivotB?i.pivotB.clone():new r,n),this.axisA=i.axisA?i.axisA.clone():new r,this.axisB=i.axisB?i.axisB.clone():new r,this.collideConnected=!!i.collideConnected,this.angle=void 0!==i.angle?i.angle:0;const s=this.coneEquation=new Jt(t,e,i),o=this.twistEquation=new $t(t,e,i);this.twistAngle=void 0!==i.twistAngle?i.twistAngle:0,s.maxForce=0,s.minForce=-n,o.maxForce=0,o.minForce=-n,this.equations.push(s,o)}update(){const t=this.bodyA,e=this.bodyB,i=this.coneEquation,n=this.twistEquation;super.update(),t.vectorToWorldFrame(this.axisA,i.axisA),e.vectorToWorldFrame(this.axisB,i.axisB),this.axisA.tangents(n.axisA,n.axisA),t.vectorToWorldFrame(n.axisA,n.axisA),this.axisB.tangents(n.axisB,n.axisB),e.vectorToWorldFrame(n.axisB,n.axisB),i.angle=this.angle,n.maxAngle=this.twistAngle}}class ne extends Pt{constructor(t,e,i,n=1e6){super(t,e),void 0===i&&(i=t.position.distanceTo(e.position)),this.distance=i;const s=this.distanceEquation=new Ht(t,e);this.equations.push(s),s.minForce=-n,s.maxForce=n}update(){const t=this.bodyA,e=this.bodyB,i=this.distanceEquation,n=.5*this.distance,s=i.ni;e.position.vsub(t.position,s),s.normalize(),s.scale(n,i.ri),s.scale(-n,i.rj)}}class se extends Zt{constructor(t,e,i={}){const n=void 0!==i.maxForce?i.maxForce:1e6,s=new r,o=new r,a=new r;t.position.vadd(e.position,a),a.scale(.5,a),e.pointToLocalFrame(a,o),t.pointToLocalFrame(a,s),super(t,s,e,o,n),this.xA=t.vectorToLocalFrame(r.UNIT_X),this.xB=e.vectorToLocalFrame(r.UNIT_X),this.yA=t.vectorToLocalFrame(r.UNIT_Y),this.yB=e.vectorToLocalFrame(r.UNIT_Y),this.zA=t.vectorToLocalFrame(r.UNIT_Z),this.zB=e.vectorToLocalFrame(r.UNIT_Z);const l=this.rotationalEquation1=new $t(t,e,i),c=this.rotationalEquation2=new $t(t,e,i),h=this.rotationalEquation3=new $t(t,e,i);this.equations.push(l,c,h)}update(){const t=this.bodyA,e=this.bodyB,i=(this.motorEquation,this.rotationalEquation1),n=this.rotationalEquation2,s=this.rotationalEquation3;super.update(),t.vectorToWorldFrame(this.xA,i.axisA),e.vectorToWorldFrame(this.yB,i.axisB),t.vectorToWorldFrame(this.yA,n.axisA),e.vectorToWorldFrame(this.zB,n.axisB),t.vectorToWorldFrame(this.zA,s.axisA),e.vectorToWorldFrame(this.xB,s.axisB)}}class re extends Dt{constructor(t,e,i=1e6){super(t,e,-i,i),this.axisA=new r,this.axisB=new r,this.targetVelocity=0}computeB(t){this.a;const e=this.b,i=(this.bi,this.bj,this.axisA),n=this.axisB,s=this.jacobianElementA,r=this.jacobianElementB;return s.rotational.copy(i),n.negate(r.rotational),-(this.computeGW()-this.targetVelocity)*e-t*this.computeGiMf()}}class oe extends Zt{constructor(t,e,i={}){const n=void 0!==i.maxForce?i.maxForce:1e6;super(t,i.pivotA?i.pivotA.clone():new r,e,i.pivotB?i.pivotB.clone():new r,n),(this.axisA=i.axisA?i.axisA.clone():new r(1,0,0)).normalize(),(this.axisB=i.axisB?i.axisB.clone():new r(1,0,0)).normalize(),this.collideConnected=!!i.collideConnected;const s=this.rotationalEquation1=new $t(t,e,i),o=this.rotationalEquation2=new $t(t,e,i),a=this.motorEquation=new re(t,e,n);a.enabled=!1,this.equations.push(s,o,a)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,i=this.motorEquation,n=this.rotationalEquation1,s=this.rotationalEquation2,r=ae,o=le,a=this.axisA,l=this.axisB;super.update(),t.quaternion.vmult(a,r),e.quaternion.vmult(l,o),r.tangents(n.axisA,s.axisA),n.axisB.copy(o),s.axisB.copy(o),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,i.axisA),e.quaternion.vmult(this.axisB,i.axisB))}}const ae=new r,le=new r;class ce extends Dt{constructor(t,e,i){super(t,e,-i,i),this.ri=new r,this.rj=new r,this.t=new r}computeB(t){this.a;const e=this.b,i=(this.bi,this.bj,this.ri),n=this.rj,s=he,r=ue,o=this.t;i.cross(o,s),n.cross(o,r);const a=this.jacobianElementA,l=this.jacobianElementB;return o.negate(a.spatial),s.negate(a.rotational),l.spatial.copy(o),l.rotational.copy(r),-this.computeGW()*e-t*this.computeGiMf()}}const he=new r,ue=new r;class de{constructor(t,e,i){i=Lt.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=de.idCounter++,this.materials=[t,e],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}}de.idCounter=0;class pe{constructor(t={}){let e="";"string"==typeof t&&(e=t,t={}),this.name=e,this.id=pe.idCounter++,this.friction=void 0!==t.friction?t.friction:-1,this.restitution=void 0!==t.restitution?t.restitution:-1}}pe.idCounter=0;class me{constructor(t,e,i={}){this.restLength="number"==typeof i.restLength?i.restLength:1,this.stiffness=i.stiffness||100,this.damping=i.damping||1,this.bodyA=t,this.bodyB=e,this.localAnchorA=new r,this.localAnchorB=new r,i.localAnchorA&&this.localAnchorA.copy(i.localAnchorA),i.localAnchorB&&this.localAnchorB.copy(i.localAnchorB),i.worldAnchorA&&this.setWorldAnchorA(i.worldAnchorA),i.worldAnchorB&&this.setWorldAnchorB(i.worldAnchorB)}setWorldAnchorA(t){this.bodyA.pointToLocalFrame(t,this.localAnchorA)}setWorldAnchorB(t){this.bodyB.pointToLocalFrame(t,this.localAnchorB)}getWorldAnchorA(t){this.bodyA.pointToWorldFrame(this.localAnchorA,t)}getWorldAnchorB(t){this.bodyB.pointToWorldFrame(this.localAnchorB,t)}applyForce(){const t=this.stiffness,e=this.damping,i=this.restLength,n=this.bodyA,s=this.bodyB,r=fe,o=ge,a=ye,l=ve,c=Ee,h=xe,u=_e,d=be,p=we,m=Me,f=Se;this.getWorldAnchorA(h),this.getWorldAnchorB(u),h.vsub(n.position,d),u.vsub(s.position,p),u.vsub(h,r);const g=r.length();o.copy(r),o.normalize(),s.velocity.vsub(n.velocity,a),s.angularVelocity.cross(p,c),a.vadd(c,a),n.angularVelocity.cross(d,c),a.vsub(c,a),o.scale(-t*(g-i)-e*a.dot(o),l),n.force.vsub(l,n.force),s.force.vadd(l,s.force),d.cross(l,m),p.cross(l,f),n.torque.vsub(m,n.torque),s.torque.vadd(f,s.torque)}}const fe=new r,ge=new r,ye=new r,ve=new r,xe=new r,_e=new r,be=new r,we=new r,Me=new r,Se=new r,Ee=new r;class Te{constructor(t={}){t=Lt.defaults(t,{chassisConnectionPointLocal:new r,chassisConnectionPointWorld:new r,directionLocal:new r,directionWorld:new r,axleLocal:new r,axleWorld:new r,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:1e4,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,slipInfo:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=t.maxSuspensionTravel,this.customSlidingRotationalSpeed=t.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=t.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=t.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=t.chassisConnectionPointWorld.clone(),this.directionLocal=t.directionLocal.clone(),this.directionWorld=t.directionWorld.clone(),this.axleLocal=t.axleLocal.clone(),this.axleWorld=t.axleWorld.clone(),this.suspensionRestLength=t.suspensionRestLength,this.suspensionMaxLength=t.suspensionMaxLength,this.radius=t.radius,this.suspensionStiffness=t.suspensionStiffness,this.dampingCompression=t.dampingCompression,this.dampingRelaxation=t.dampingRelaxation,this.frictionSlip=t.frictionSlip,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=t.rollInfluence,this.maxSuspensionForce=t.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=t.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.slipInfo=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new K,this.worldTransform=new x,this.isInContact=!1}updateWheel(t){const e=this.raycastResult;if(this.isInContact){const i=e.hitNormalWorld.dot(e.directionWorld);e.hitPointWorld.vsub(t.position,Ce),t.getVelocityAtWorldPoint(Ce,Ae);const n=e.hitNormalWorld.dot(Ae);if(i>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{const t=-1/i;this.suspensionRelativeVelocity=n*t,this.clippedInvContactDotSuspension=t}}else e.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.hitNormalWorld),this.clippedInvContactDotSuspension=1}}const Ae=new r,Ce=new r;class Re{constructor(t){this.chassisBody=t.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=void 0!==t.indexRightAxis?t.indexRightAxis:1,this.indexForwardAxis=void 0!==t.indexForwardAxis?t.indexForwardAxis:0,this.indexUpAxis=void 0!==t.indexUpAxis?t.indexUpAxis:2,this.constraints=[],this.preStepCallback=()=>{},this.currentVehicleSpeedKmHour=0}addWheel(t={}){const e=new Te(t),i=this.wheelInfos.length;return this.wheelInfos.push(e),i}setSteeringValue(t,e){this.wheelInfos[e].steering=t}applyEngineForce(t,e){this.wheelInfos[e].engineForce=t}setBrake(t,e){this.wheelInfos[e].brake=t}addToWorld(t){this.constraints,t.addBody(this.chassisBody);const e=this;this.preStepCallback=()=>{e.updateVehicle(t.dt)},t.addEventListener("preStep",this.preStepCallback),this.world=t}getVehicleAxisWorld(t,e){e.set(0===t?1:0,1===t?1:0,2===t?1:0),this.chassisBody.vectorToWorldFrame(e,e)}updateVehicle(t){const e=this.wheelInfos,i=e.length,n=this.chassisBody;for(let t=0;t<i;t++)this.updateWheelTransform(t);this.currentVehicleSpeedKmHour=3.6*n.velocity.length();const s=new r;this.getVehicleAxisWorld(this.indexForwardAxis,s),s.dot(n.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(let t=0;t<i;t++)this.castRay(e[t]);this.updateSuspension(t);const o=new r,a=new r;for(let s=0;s<i;s++){const i=e[s];let r=i.suspensionForce;r>i.maxSuspensionForce&&(r=i.maxSuspensionForce),i.raycastResult.hitNormalWorld.scale(r*t,o),i.raycastResult.hitPointWorld.vsub(n.position,a),n.applyImpulse(o,a)}this.updateFriction(t);const l=new r,c=new r,h=new r;for(let s=0;s<i;s++){const i=e[s];n.getVelocityAtWorldPoint(i.chassisConnectionPointWorld,h);let r=1;if(1===this.indexUpAxis&&(r=-1),i.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,c);const e=c.dot(i.raycastResult.hitNormalWorld);i.raycastResult.hitNormalWorld.scale(e,l),c.vsub(l,c);const n=c.dot(h);i.deltaRotation=r*n*t/i.radius}!i.sliding&&i.isInContact||0===i.engineForce||!i.useCustomSlidingRotationalSpeed||(i.deltaRotation=(i.engineForce>0?1:-1)*i.customSlidingRotationalSpeed*t),Math.abs(i.brake)>Math.abs(i.engineForce)&&(i.deltaRotation=0),i.rotation+=i.deltaRotation,i.deltaRotation*=.99}}updateSuspension(t){const e=this.chassisBody.mass,i=this.wheelInfos,n=i.length;for(let t=0;t<n;t++){const n=i[t];if(n.isInContact){let t;const i=n.suspensionRestLength-n.suspensionLength;t=n.suspensionStiffness*i*n.clippedInvContactDotSuspension;const s=n.suspensionRelativeVelocity;let r;r=s<0?n.dampingCompression:n.dampingRelaxation,t-=r*s,n.suspensionForce=t*e,n.suspensionForce<0&&(n.suspensionForce=0)}else n.suspensionForce=0}}removeFromWorld(t){this.constraints,t.removeBody(this.chassisBody),t.removeEventListener("preStep",this.preStepCallback),this.world=null}castRay(t){const e=De,i=Ne;this.updateWheelTransformWorld(t);const n=this.chassisBody;let s=-1;const o=t.suspensionRestLength+t.radius;t.directionWorld.scale(o,e);const a=t.chassisConnectionPointWorld;a.vadd(e,i);const l=t.raycastResult;l.reset();const c=n.collisionResponse;n.collisionResponse=!1,this.world.rayTest(a,i,l),n.collisionResponse=c;const h=l.body;if(t.raycastResult.groundObject=0,h){s=l.distance,t.raycastResult.hitNormalWorld=l.hitNormalWorld,t.isInContact=!0;const e=l.distance;t.suspensionLength=e-t.radius;const i=t.suspensionRestLength-t.maxSuspensionTravel,o=t.suspensionRestLength+t.maxSuspensionTravel;t.suspensionLength<i&&(t.suspensionLength=i),t.suspensionLength>o&&(t.suspensionLength=o,t.raycastResult.reset());const a=t.raycastResult.hitNormalWorld.dot(t.directionWorld),c=new r;n.getVelocityAtWorldPoint(t.raycastResult.hitPointWorld,c);const h=t.raycastResult.hitNormalWorld.dot(c);if(a>=-.1)t.suspensionRelativeVelocity=0,t.clippedInvContactDotSuspension=10;else{const e=-1/a;t.suspensionRelativeVelocity=h*e,t.clippedInvContactDotSuspension=e}}else t.suspensionLength=t.suspensionRestLength+0*t.maxSuspensionTravel,t.suspensionRelativeVelocity=0,t.directionWorld.scale(-1,t.raycastResult.hitNormalWorld),t.clippedInvContactDotSuspension=1;return s}updateWheelTransformWorld(t){t.isInContact=!1;const e=this.chassisBody;e.pointToWorldFrame(t.chassisConnectionPointLocal,t.chassisConnectionPointWorld),e.vectorToWorldFrame(t.directionLocal,t.directionWorld),e.vectorToWorldFrame(t.axleLocal,t.axleWorld)}updateWheelTransform(t){const e=Le,i=Pe,n=Ie,s=this.wheelInfos[t];this.updateWheelTransformWorld(s),s.directionLocal.scale(-1,e),i.copy(s.axleLocal),e.cross(i,n),n.normalize(),i.normalize();const r=s.steering,o=new m;o.setFromAxisAngle(e,r);const a=new m;a.setFromAxisAngle(i,s.rotation);const l=s.worldTransform.quaternion;this.chassisBody.quaternion.mult(o,l),l.mult(a,l),l.normalize();const c=s.worldTransform.position;c.copy(s.directionWorld),c.scale(s.suspensionLength,c),c.vadd(s.chassisConnectionPointWorld,c)}getWheelTransformWorld(t){return this.wheelInfos[t].worldTransform}updateFriction(t){const e=Fe,i=this.wheelInfos,n=i.length,s=this.chassisBody,o=ze,a=Oe;for(let t=0;t<n;t++){const e=i[t];e.raycastResult.body,e.sideImpulse=0,e.forwardImpulse=0,o[t]||(o[t]=new r),a[t]||(a[t]=new r)}for(let t=0;t<n;t++){const n=i[t],r=n.raycastResult.body;if(r){const i=a[t];this.getWheelTransformWorld(t).vectorToWorldFrame(Be[this.indexRightAxis],i);const l=n.raycastResult.hitNormalWorld,c=i.dot(l);l.scale(c,e),i.vsub(e,i),i.normalize(),l.cross(i,o[t]),o[t].normalize(),n.sideImpulse=Qe(s,n.raycastResult.hitPointWorld,r,n.raycastResult.hitPointWorld,i),n.sideImpulse*=Ue}}this.sliding=!1;for(let e=0;e<n;e++){const n=i[e],r=n.raycastResult.body;let a=0;if(n.slipInfo=1,r){const i=0,l=n.brake?n.brake:i;a=Ge(s,r,n.raycastResult.hitPointWorld,o[e],l),a+=n.engineForce*t;const c=l/a;n.slipInfo*=c}if(n.forwardImpulse=0,n.skidInfo=1,r){n.skidInfo=1;const e=n.suspensionForce*t*n.frictionSlip,i=e*e;n.forwardImpulse=a;const s=.5*n.forwardImpulse,r=1*n.sideImpulse,o=s*s+r*r;if(n.sliding=!1,o>i){this.sliding=!0,n.sliding=!0;const t=e/Math.sqrt(o);n.skidInfo*=t}}}if(this.sliding)for(let t=0;t<n;t++){const e=i[t];0!==e.sideImpulse&&e.skidInfo<1&&(e.forwardImpulse*=e.skidInfo,e.sideImpulse*=e.skidInfo)}for(let t=0;t<n;t++){const e=i[t],n=new r;if(e.raycastResult.hitPointWorld.vsub(s.position,n),0!==e.forwardImpulse){const i=new r;o[t].scale(e.forwardImpulse,i),s.applyImpulse(i,n)}if(0!==e.sideImpulse){const i=e.raycastResult.body,o=new r;e.raycastResult.hitPointWorld.vsub(i.position,o);const l=new r;a[t].scale(e.sideImpulse,l),s.vectorToLocalFrame(n,n),n["xyz"[this.indexUpAxis]]*=e.rollInfluence,s.vectorToWorldFrame(n,n),s.applyImpulse(l,n),l.scale(-1,l),i.applyImpulse(l,o)}}}}const Le=new r,Pe=new r,Ie=new r,De=(new $,new r),Ne=new r,Be=[new r(1,0,0),new r(0,1,0),new r(0,0,1)],Fe=new r,Oe=[],ze=[],Ue=1,He=new r,Ve=new r,ke=new r;function Ge(t,e,i,n,s){let r=0;const o=i,a=He,l=Ve,c=ke;return t.getVelocityAtWorldPoint(o,a),e.getVelocityAtWorldPoint(o,l),a.vsub(l,c),r=-n.dot(c)*(1/(Ye(t,i,n)+Ye(e,i,n))),s<r&&(r=s),r<-s&&(r=-s),r}const We=new r,qe=new r,je=new r,Xe=new r;function Ye(t,e,i){const n=We,s=qe,r=je,o=Xe;return e.vsub(t.position,n),n.cross(i,s),t.invInertiaWorld.vmult(s,o),o.cross(n,r),t.invMass+i.dot(r)}const Ze=new r,Je=new r,Ke=new r;function Qe(t,e,i,n,s){if(s.lengthSquared()>1.1)return 0;const r=Ze,o=Je,a=Ke;return t.getVelocityAtWorldPoint(e,r),i.getVelocityAtWorldPoint(n,o),r.vsub(o,a),-.2*s.dot(a)*(1/(t.invMass+i.invMass))}class $e extends v{constructor(t){if(super({type:v.types.SPHERE}),this.radius=void 0!==t?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e=new r){const i=2*t*this.radius*this.radius/5;return e.x=i,e.y=i,e.z=i,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,i,n){const s=this.radius,r=["x","y","z"];for(let e=0;e<r.length;e++){const o=r[e];i[o]=t[o]-s,n[o]=t[o]+s}}}class ti{constructor(t={}){this.wheelBodies=[],this.coordinateSystem=void 0!==t.coordinateSystem?t.coordinateSystem.clone():new r(1,2,3),t.chassisBody?this.chassisBody=t.chassisBody:this.chassisBody=new R({mass:1,shape:new S(new r(5,2,.5))}),this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}addWheel(t={}){let e;e=t.body?t.body:new R({mass:1,shape:new $e(1.2)}),this.wheelBodies.push(e),this.wheelForces.push(0);const i=void 0!==t.position?t.position.clone():new r,n=new r;this.chassisBody.pointToWorldFrame(i,n),e.position.set(n.x,n.y,n.z);const s=void 0!==t.axis?t.axis.clone():new r(0,1,0);this.wheelAxes.push(s);const o=new oe(this.chassisBody,e,{pivotA:i,axisA:s,pivotB:r.ZERO,axisB:s,collideConnected:!1});return this.constraints.push(o),this.wheelBodies.length-1}setSteeringValue(t,e){const i=this.wheelAxes[e],n=Math.cos(t),s=Math.sin(t),r=i.x,o=i.y;this.constraints[e].axisA.set(n*r-s*o,s*r+n*o,0)}setMotorSpeed(t,e){const i=this.constraints[e];i.enableMotor(),i.motorTargetVelocity=t}disableMotor(t){this.constraints[t].disableMotor()}setWheelForce(t,e){this.wheelForces[e]=t}applyWheelForce(t,e){const i=this.wheelAxes[e],n=this.wheelBodies[e],s=n.torque;i.scale(t,ei),n.vectorToWorldFrame(ei,ei),s.vadd(ei,s)}addToWorld(t){const e=this.constraints,i=this.wheelBodies.concat([this.chassisBody]);for(let e=0;e<i.length;e++)t.addBody(i[e]);for(let i=0;i<e.length;i++)t.addConstraint(e[i]);t.addEventListener("preStep",this._update.bind(this))}_update(){const t=this.wheelForces;for(let e=0;e<t.length;e++)this.applyWheelForce(t[e],e)}removeFromWorld(t){const e=this.constraints,i=this.wheelBodies.concat([this.chassisBody]);for(let e=0;e<i.length;e++)t.removeBody(i[e]);for(let i=0;i<e.length;i++)t.removeConstraint(e[i])}getWheelSpeed(t){const e=this.wheelAxes[t],i=this.wheelBodies[t].angularVelocity;return this.chassisBody.vectorToWorldFrame(e,ii),i.dot(ii)}}const ei=new r,ii=new r;class ni{constructor(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}add(t){this.particles.push(t),this.neighbors.length<this.particles.length&&this.neighbors.push([])}remove(t){const e=this.particles.indexOf(t);-1!==e&&(this.particles.splice(e,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())}getNeighbors(t,e){const i=this.particles.length,n=t.id,s=this.smoothingRadius*this.smoothingRadius,r=si;for(let o=0;o!==i;o++){const i=this.particles[o];i.position.vsub(t.position,r),n!==i.id&&r.lengthSquared()<s&&e.push(i)}}update(){const t=this.particles.length,e=ri,i=this.speedOfSound,n=this.eps;for(let n=0;n!==t;n++){const t=this.particles[n],s=this.neighbors[n];s.length=0,this.getNeighbors(t,s),s.push(this.particles[n]);const r=s.length;let o=0;for(let i=0;i!==r;i++){t.position.vsub(s[i].position,e);const n=e.length(),r=this.w(n);o+=s[i].mass*r}this.densities[n]=o,this.pressures[n]=i*i*(this.densities[n]-this.density)}const s=oi,r=ai,o=li,a=ci,l=hi;for(let e=0;e!==t;e++){const t=this.particles[e];let i,c;s.set(0,0,0),r.set(0,0,0);const h=this.neighbors[e],u=h.length;for(let d=0;d!==u;d++){const u=h[d];t.position.vsub(u.position,a);const p=a.length();i=-u.mass*(this.pressures[e]/(this.densities[e]*this.densities[e]+n)+this.pressures[d]/(this.densities[d]*this.densities[d]+n)),this.gradw(a,o),o.scale(i,o),s.vadd(o,s),u.velocity.vsub(t.velocity,l),l.scale(1/(1e-4+this.densities[e]*this.densities[d])*this.viscosity*u.mass,l),c=this.nablaw(p),l.scale(c,l),r.vadd(l,r)}r.scale(t.mass,r),s.scale(t.mass,s),t.force.vadd(r,t.force),t.force.vadd(s,t.force)}}w(t){const e=this.smoothingRadius;return 315/(64*Math.PI*e**9)*(e*e-t*t)**3}gradw(t,e){const i=t.length(),n=this.smoothingRadius;t.scale(945/(32*Math.PI*n**9)*(n*n-i*i)**2,e)}nablaw(t){const e=this.smoothingRadius;return 945/(32*Math.PI*e**9)*(e*e-t*t)*(7*t*t-3*e*e)}}const si=new r,ri=new r,oi=new r,ai=new r,li=new r,ci=new r,hi=new r;class ui extends b{constructor(t,e,i,n){const s=n,o=[],a=[],l=[],c=[],h=[],u=Math.cos,d=Math.sin;o.push(new r(e*u(0),e*d(0),.5*-i)),c.push(0),o.push(new r(t*u(0),t*d(0),.5*i)),h.push(1);for(let n=0;n<s;n++){const p=2*Math.PI/s*(n+1),m=2*Math.PI/s*(n+.5);n<s-1?(o.push(new r(e*u(p),e*d(p),.5*-i)),c.push(2*n+2),o.push(new r(t*u(p),t*d(p),.5*i)),h.push(2*n+3),l.push([2*n+2,2*n+3,2*n+1,2*n])):l.push([0,1,2*n+1,2*n]),(s%2==1||n<s/2)&&a.push(new r(u(m),d(m),0))}l.push(h),a.push(new r(0,0,1));const p=[];for(let t=0;t<c.length;t++)p.push(c[c.length-t-1]);l.push(p),super({vertices:o,faces:l,axes:a})}}class di extends v{constructor(){super({type:v.types.PARTICLE})}calculateLocalInertia(t,e=new r){return e.set(0,0,0),e}volume(){return 0}updateBoundingSphereRadius(){this.boundingSphereRadius=0}calculateWorldAABB(t,e,i,n){i.copy(t),n.copy(t)}}class pi extends v{constructor(){super({type:v.types.PLANE}),this.worldNormal=new r,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e=new r){return e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,i,n){mi.set(0,0,1),e.vmult(mi,mi);const s=Number.MAX_VALUE;i.set(-s,-s,-s),n.set(s,s,s),1===mi.x?n.x=t.x:-1===mi.x&&(i.x=t.x),1===mi.y?n.y=t.y:-1===mi.y&&(i.y=t.y),1===mi.z?n.z=t.z:-1===mi.z&&(i.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const mi=new r;class fi extends v{constructor(t,e={}){e=Lt.defaults(e,{maxValue:null,minValue:null,elementSize:1}),super({type:v.types.HEIGHTFIELD}),this.data=t,this.maxValue=e.maxValue,this.minValue=e.minValue,this.elementSize=e.elementSize,null===e.minValue&&this.updateMinValue(),null===e.maxValue&&this.updateMaxValue(),this.cacheEnabled=!0,this.pillarConvex=new b,this.pillarOffset=new r,this.updateBoundingSphereRadius(),this._cachedPillars={}}update(){this._cachedPillars={}}updateMinValue(){const t=this.data;let e=t[0][0];for(let i=0;i!==t.length;i++)for(let n=0;n!==t[i].length;n++){const s=t[i][n];s<e&&(e=s)}this.minValue=e}updateMaxValue(){const t=this.data;let e=t[0][0];for(let i=0;i!==t.length;i++)for(let n=0;n!==t[i].length;n++){const s=t[i][n];s>e&&(e=s)}this.maxValue=e}setHeightValueAtIndex(t,e,i){this.data[t][e]=i,this.clearCachedConvexTrianglePillar(t,e,!1),t>0&&(this.clearCachedConvexTrianglePillar(t-1,e,!0),this.clearCachedConvexTrianglePillar(t-1,e,!1)),e>0&&(this.clearCachedConvexTrianglePillar(t,e-1,!0),this.clearCachedConvexTrianglePillar(t,e-1,!1)),e>0&&t>0&&this.clearCachedConvexTrianglePillar(t-1,e-1,!0)}getRectMinMax(t,e,i,n,s=[]){const r=this.data;let o=this.minValue;for(let s=t;s<=i;s++)for(let t=e;t<=n;t++){const e=r[s][t];e>o&&(o=e)}s[0]=this.minValue,s[1]=o}getIndexOfPosition(t,e,i,n){const s=this.elementSize,r=this.data;let o=Math.floor(t/s),a=Math.floor(e/s);return i[0]=o,i[1]=a,n&&(o<0&&(o=0),a<0&&(a=0),o>=r.length-1&&(o=r.length-1),a>=r[0].length-1&&(a=r[0].length-1)),!(o<0||a<0||o>=r.length-1||a>=r[0].length-1)}getTriangleAt(t,e,i,n,s,r){const o=gi;this.getIndexOfPosition(t,e,o,i);let a=o[0],l=o[1];const c=this.data;i&&(a=Math.min(c.length-2,Math.max(0,a)),l=Math.min(c[0].length-2,Math.max(0,l)));const h=this.elementSize,u=(t/h-a)**2+(e/h-l)**2>(t/h-(a+1))**2+(e/h-(l+1))**2;return this.getTriangle(a,l,u,n,s,r),u}getNormalAt(t,e,i,n){const s=bi,r=wi,o=Mi,a=Si,l=Ei;this.getTriangleAt(t,e,i,s,r,o),r.vsub(s,a),o.vsub(s,l),a.cross(l,n),n.normalize()}getAabbAtIndex(t,e,{lowerBound:i,upperBound:n}){const s=this.data,r=this.elementSize;i.set(t*r,e*r,s[t][e]),n.set((t+1)*r,(e+1)*r,s[t+1][e+1])}getHeightAt(t,e,i){const n=this.data,s=vi,r=xi,o=_i,a=gi;this.getIndexOfPosition(t,e,a,i);let l=a[0],c=a[1];i&&(l=Math.min(n.length-2,Math.max(0,l)),c=Math.min(n[0].length-2,Math.max(0,c)));const h=this.getTriangleAt(t,e,i,s,r,o);!function(t,e,i,n,s,r,o,a,l){l.x=((r-a)*(t-o)+(o-s)*(e-a))/((r-a)*(i-o)+(o-s)*(n-a)),l.y=((a-n)*(t-o)+(i-o)*(e-a))/((r-a)*(i-o)+(o-s)*(n-a)),l.z=1-l.x-l.y}(t,e,s.x,s.y,r.x,r.y,o.x,o.y,yi);const u=yi;return h?n[l+1][c+1]*u.x+n[l][c+1]*u.y+n[l+1][c]*u.z:n[l][c]*u.x+n[l+1][c]*u.y+n[l][c+1]*u.z}getCacheConvexTrianglePillarKey(t,e,i){return t+"_"+e+"_"+(i?1:0)}getCachedConvexTrianglePillar(t,e,i){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]}setCachedConvexTrianglePillar(t,e,i,n,s){this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]={convex:n,offset:s}}clearCachedConvexTrianglePillar(t,e,i){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]}getTriangle(t,e,i,n,s,r){const o=this.data,a=this.elementSize;i?(n.set((t+1)*a,(e+1)*a,o[t+1][e+1]),s.set(t*a,(e+1)*a,o[t][e+1]),r.set((t+1)*a,e*a,o[t+1][e])):(n.set(t*a,e*a,o[t][e]),s.set((t+1)*a,e*a,o[t+1][e]),r.set(t*a,(e+1)*a,o[t][e+1]))}getConvexTrianglePillar(t,e,i){let n=this.pillarConvex,s=this.pillarOffset;if(this.cacheEnabled){const o=this.getCachedConvexTrianglePillar(t,e,i);if(o)return this.pillarConvex=o.convex,void(this.pillarOffset=o.offset);n=new b,s=new r,this.pillarConvex=n,this.pillarOffset=s}const o=this.data,a=this.elementSize,l=n.faces;n.vertices.length=6;for(let t=0;t<6;t++)n.vertices[t]||(n.vertices[t]=new r);l.length=5;for(let t=0;t<5;t++)l[t]||(l[t]=[]);const c=n.vertices,h=(Math.min(o[t][e],o[t+1][e],o[t][e+1],o[t+1][e+1])-this.minValue)/2+this.minValue;i?(s.set((t+.75)*a,(e+.75)*a,h),c[0].set(.25*a,.25*a,o[t+1][e+1]-h),c[1].set(-.75*a,.25*a,o[t][e+1]-h),c[2].set(.25*a,-.75*a,o[t+1][e]-h),c[3].set(.25*a,.25*a,-h-1),c[4].set(-.75*a,.25*a,-h-1),c[5].set(.25*a,-.75*a,-h-1),l[0][0]=0,l[0][1]=1,l[0][2]=2,l[1][0]=5,l[1][1]=4,l[1][2]=3,l[2][0]=2,l[2][1]=5,l[2][2]=3,l[2][3]=0,l[3][0]=3,l[3][1]=4,l[3][2]=1,l[3][3]=0,l[4][0]=1,l[4][1]=4,l[4][2]=5,l[4][3]=2):(s.set((t+.25)*a,(e+.25)*a,h),c[0].set(-.25*a,-.25*a,o[t][e]-h),c[1].set(.75*a,-.25*a,o[t+1][e]-h),c[2].set(-.25*a,.75*a,o[t][e+1]-h),c[3].set(-.25*a,-.25*a,-h-1),c[4].set(.75*a,-.25*a,-h-1),c[5].set(-.25*a,.75*a,-h-1),l[0][0]=0,l[0][1]=1,l[0][2]=2,l[1][0]=5,l[1][1]=4,l[1][2]=3,l[2][0]=0,l[2][1]=2,l[2][2]=5,l[2][3]=3,l[3][0]=1,l[3][1]=0,l[3][2]=3,l[3][3]=4,l[4][0]=4,l[4][1]=5,l[4][2]=2,l[4][3]=1),n.computeNormals(),n.computeEdges(),n.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(t,e,i,n,s)}calculateLocalInertia(t,e=new r){return e.set(0,0,0),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,i,n){i.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),n.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)}updateBoundingSphereRadius(){const t=this.data,e=this.elementSize;this.boundingSphereRadius=new r(t.length*e,t[0].length*e,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).length()}setHeightsFromImage(t,e){const{x:i,z:n,y:s}=e,r=document.createElement("canvas");r.width=t.width,r.height=t.height;const o=r.getContext("2d");o.drawImage(t,0,0);const a=o.getImageData(0,0,t.width,t.height),l=this.data;l.length=0,this.elementSize=Math.abs(i)/a.width;for(let t=0;t<a.height;t++){const e=[];for(let s=0;s<a.width;s++){const r=(a.data[4*(t*a.height+s)]+a.data[4*(t*a.height+s)+1]+a.data[4*(t*a.height+s)+2])/4/255*n;i<0?e.push(r):e.unshift(r)}s<0?l.unshift(e):l.push(e)}this.updateMaxValue(),this.updateMinValue(),this.update()}}const gi=[],yi=new r,vi=new r,xi=new r,_i=new r,bi=new r,wi=new r,Mi=new r,Si=new r,Ei=new r;class Ti{constructor(t={}){this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new c,this.data=[],this.children=[]}reset(){this.children.length=this.data.length=0}insert(t,e,i=0){const n=this.data;if(!this.aabb.contains(t))return!1;const s=this.children;if(i<(this.maxDepth||this.root.maxDepth)){let n=!1;s.length||(this.subdivide(),n=!0);for(let n=0;8!==n;n++)if(s[n].insert(t,e,i+1))return!0;n&&(s.length=0)}return n.push(e),!0}subdivide(){const t=this.aabb,e=t.lowerBound,i=t.upperBound,n=this.children;n.push(new Ti({aabb:new c({lowerBound:new r(0,0,0)})}),new Ti({aabb:new c({lowerBound:new r(1,0,0)})}),new Ti({aabb:new c({lowerBound:new r(1,1,0)})}),new Ti({aabb:new c({lowerBound:new r(1,1,1)})}),new Ti({aabb:new c({lowerBound:new r(0,1,1)})}),new Ti({aabb:new c({lowerBound:new r(0,0,1)})}),new Ti({aabb:new c({lowerBound:new r(1,0,1)})}),new Ti({aabb:new c({lowerBound:new r(0,1,0)})})),i.vsub(e,Ci),Ci.scale(.5,Ci);const s=this.root||this;for(let t=0;8!==t;t++){const i=n[t];i.root=s;const r=i.aabb.lowerBound;r.x*=Ci.x,r.y*=Ci.y,r.z*=Ci.z,r.vadd(e,r),r.vadd(Ci,i.aabb.upperBound)}}aabbQuery(t,e){this.data,this.children;const i=[this];for(;i.length;){const n=i.pop();n.aabb.overlaps(t)&&Array.prototype.push.apply(e,n.data),Array.prototype.push.apply(i,n.children)}return e}rayQuery(t,e,i){return t.getAABB(Ri),Ri.toLocalFrame(e,Ri),this.aabbQuery(Ri,i),i}removeEmptyNodes(){for(let t=this.children.length-1;t>=0;t--)this.children[t].removeEmptyNodes(),this.children[t].children.length||this.children[t].data.length||this.children.splice(t,1)}}class Ai extends Ti{constructor(t,e={}){super({root:null,aabb:t}),this.maxDepth=void 0!==e.maxDepth?e.maxDepth:8}}const Ci=new r,Ri=new c;class Li extends v{constructor(t,e){super({type:v.types.TRIMESH}),this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new c,this.edges=null,this.scale=new r(1,1,1),this.tree=new Ai,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}updateTree(){const t=this.tree;t.reset(),t.aabb.copy(this.aabb);const e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;const i=new c,n=new r,s=new r,o=new r,a=[n,s,o];for(let e=0;e<this.indices.length/3;e++){const r=3*e;this._getUnscaledVertex(this.indices[r],n),this._getUnscaledVertex(this.indices[r+1],s),this._getUnscaledVertex(this.indices[r+2],o),i.setFromPoints(a),t.insert(i,e)}t.removeEmptyNodes()}getTrianglesInAABB(t,e){Ii.copy(t);const i=this.scale,n=i.x,s=i.y,r=i.z,o=Ii.lowerBound,a=Ii.upperBound;return o.x/=n,o.y/=s,o.z/=r,a.x/=n,a.y/=s,a.z/=r,this.tree.aabbQuery(Ii,e)}setScale(t){const e=this.scale.x===this.scale.y&&this.scale.y===this.scale.z,i=t.x===t.y&&t.y===t.z;e&&i||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()}updateNormals(){const t=Pi,e=this.normals;for(let i=0;i<this.indices.length/3;i++){const n=3*i,s=this.indices[n],r=this.indices[n+1],o=this.indices[n+2];this.getVertex(s,Oi),this.getVertex(r,zi),this.getVertex(o,Ui),Li.computeNormal(zi,Oi,Ui,t),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z}}updateEdges(){const t={},e=(e,i)=>{t[e<i?e+"_"+i:i+"_"+e]=!0};for(let t=0;t<this.indices.length/3;t++){const i=3*t,n=this.indices[i],s=this.indices[i+1],r=this.indices[i+2];e(n,s),e(s,r),e(r,n)}const i=Object.keys(t);this.edges=new Int16Array(2*i.length);for(let t=0;t<i.length;t++){const e=i[t].split("_");this.edges[2*t]=parseInt(e[0],10),this.edges[2*t+1]=parseInt(e[1],10)}}getEdgeVertex(t,e,i){const n=this.edges[2*t+(e?1:0)];this.getVertex(n,i)}getEdgeVector(t,e){const i=Di,n=Ni;this.getEdgeVertex(t,0,i),this.getEdgeVertex(t,1,n),n.vsub(i,e)}getVertex(t,e){const i=this.scale;return this._getUnscaledVertex(t,e),e.x*=i.x,e.y*=i.y,e.z*=i.z,e}_getUnscaledVertex(t,e){const i=3*t,n=this.vertices;return e.set(n[i],n[i+1],n[i+2])}getWorldVertex(t,e,i,n){return this.getVertex(t,n),x.pointToWorldFrame(e,i,n,n),n}getTriangleVertices(t,e,i,n){const s=3*t;this.getVertex(this.indices[s],e),this.getVertex(this.indices[s+1],i),this.getVertex(this.indices[s+2],n)}getNormal(t,e){const i=3*t;return e.set(this.normals[i],this.normals[i+1],this.normals[i+2])}calculateLocalInertia(t,e){this.computeLocalAABB(Hi);const i=Hi.upperBound.x-Hi.lowerBound.x,n=Hi.upperBound.y-Hi.lowerBound.y,s=Hi.upperBound.z-Hi.lowerBound.z;return e.set(1/12*t*(2*n*2*n+2*s*2*s),1/12*t*(2*i*2*i+2*s*2*s),1/12*t*(2*n*2*n+2*i*2*i))}computeLocalAABB(t){const e=t.lowerBound,i=t.upperBound,n=this.vertices.length,s=(this.vertices,Vi);this.getVertex(0,s),e.copy(s),i.copy(s);for(let t=0;t!==n;t++)this.getVertex(t,s),s.x<e.x?e.x=s.x:s.x>i.x&&(i.x=s.x),s.y<e.y?e.y=s.y:s.y>i.y&&(i.y=s.y),s.z<e.z?e.z=s.z:s.z>i.z&&(i.z=s.z)}updateAABB(){this.computeLocalAABB(this.aabb)}updateBoundingSphereRadius(){let t=0;const e=this.vertices,i=new r;for(let n=0,s=e.length/3;n!==s;n++){this.getVertex(n,i);const e=i.lengthSquared();e>t&&(t=e)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,i,n){const s=ki,r=Gi;s.position=t,s.quaternion=e,this.aabb.toWorldFrame(s,r),i.copy(r.lowerBound),n.copy(r.upperBound)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}}const Pi=new r,Ii=new c,Di=new r,Ni=new r,Bi=new r,Fi=new r;Li.computeNormal=(t,e,i,n)=>{e.vsub(t,Fi),i.vsub(e,Bi),Bi.cross(Fi,n),n.isZero()||n.normalize()};const Oi=new r,zi=new r,Ui=new r,Hi=new c,Vi=new r,ki=new x,Gi=new c;Li.createTorus=(t=1,e=.5,i=8,n=6,s=2*Math.PI)=>{const r=[],o=[];for(let o=0;o<=i;o++)for(let a=0;a<=n;a++){const l=a/n*s,c=o/i*Math.PI*2,h=(t+e*Math.cos(c))*Math.cos(l),u=(t+e*Math.cos(c))*Math.sin(l),d=e*Math.sin(c);r.push(h,u,d)}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*t+e-1,s=(n+1)*(t-1)+e-1,r=(n+1)*(t-1)+e,a=(n+1)*t+e;o.push(i,s,a),o.push(s,r,a)}return new Li(r,o)};class Wi{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&this.equations.push(t)}removeEquation(t){const e=this.equations,i=e.indexOf(t);-1!==i&&e.splice(i,1)}removeAllEquations(){this.equations.length=0}}class qi extends Wi{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let i=0;const n=this.iterations,s=this.tolerance*this.tolerance,r=this.equations,o=r.length,a=e.bodies,l=a.length,c=t;let h,u,d,p,m,f;if(0!==o)for(let t=0;t!==l;t++)a[t].updateSolveMassProperties();const g=Xi,y=Yi,v=ji;g.length=o,y.length=o,v.length=o;for(let t=0;t!==o;t++){const e=r[t];v[t]=0,y[t]=e.computeB(c),g[t]=1/e.computeC()}if(0!==o){for(let t=0;t!==l;t++){const e=a[t],i=e.vlambda,n=e.wlambda;i.set(0,0,0),n.set(0,0,0)}for(i=0;i!==n;i++){p=0;for(let t=0;t!==o;t++){const e=r[t];h=y[t],u=g[t],f=v[t],m=e.computeGWlambda(),d=u*(h-m-e.eps*f),f+d<e.minForce?d=e.minForce-f:f+d>e.maxForce&&(d=e.maxForce-f),v[t]+=d,p+=d>0?d:-d,e.addToWlambda(d)}if(p*p<s)break}for(let t=0;t!==l;t++){const e=a[t],i=e.velocity,n=e.angularVelocity;e.vlambda.vmul(e.linearFactor,e.vlambda),i.vadd(e.vlambda,i),e.wlambda.vmul(e.angularFactor,e.wlambda),n.vadd(e.wlambda,n)}let t=r.length;const e=1/c;for(;t--;)r[t].multiplier=v[t]*e}return i}}const ji=[],Xi=[],Yi=[];class Zi extends Wi{constructor(t){for(super(),this.iterations=10,this.tolerance=1e-7,this.subsolver=t,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}createNode(){return{body:null,children:[],eqs:[],visited:!1}}solve(t,e){const i=Ji,n=this.nodePool,s=e.bodies,r=this.equations,o=r.length,a=s.length,l=this.subsolver;for(;n.length<a;)n.push(this.createNode());i.length=a;for(let t=0;t<a;t++)i[t]=n[t];for(let t=0;t!==a;t++){const e=i[t];e.body=s[t],e.children.length=0,e.eqs.length=0,e.visited=!1}for(let t=0;t!==o;t++){const e=r[t],n=s.indexOf(e.bi),o=s.indexOf(e.bj),a=i[n],l=i[o];a.children.push(l),a.eqs.push(e),l.children.push(a),l.eqs.push(e)}let c,h=0,u=Ki;l.tolerance=this.tolerance,l.iterations=this.iterations;const d=Qi;for(;c=tn(i);){u.length=0,d.bodies.length=0,nn(c,sn,d.bodies,u);const e=u.length;u=u.sort(rn);for(let t=0;t!==e;t++)l.addEquation(u[t]);l.solve(t,d),l.removeAllEquations(),h++}return h}}const Ji=[],Ki=[],Qi={bodies:[]},$i=R.STATIC;function tn(t){const e=t.length;for(let i=0;i!==e;i++){const e=t[i];if(!(e.visited||e.body.type&$i))return e}return!1}const en=[];function nn(t,e,i,n){for(en.push(t),t.visited=!0,e(t,i,n);en.length;){const t=en.pop();let s;for(;s=tn(t.children);)s.visited=!0,e(s,i,n),en.push(s)}}function sn(t,e,i){e.push(t.body);const n=t.eqs.length;for(let e=0;e!==n;e++){const n=t.eqs[e];i.includes(n)||i.push(n)}}function rn(t,e){return e.id-t.id}class on{constructor(){this.objects=[],this.type=Object}release(...t){const e=t.length;for(let i=0;i!==e;i++)this.objects.push(t[i]);return this}get(){return 0===this.objects.length?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class an extends on{constructor(){super(),this.type=r}constructObject(){return new r}}const ln={sphereSphere:v.types.SPHERE,spherePlane:v.types.SPHERE|v.types.PLANE,boxBox:v.types.BOX|v.types.BOX,sphereBox:v.types.SPHERE|v.types.BOX,planeBox:v.types.PLANE|v.types.BOX,convexConvex:v.types.CONVEXPOLYHEDRON,sphereConvex:v.types.SPHERE|v.types.CONVEXPOLYHEDRON,planeConvex:v.types.PLANE|v.types.CONVEXPOLYHEDRON,boxConvex:v.types.BOX|v.types.CONVEXPOLYHEDRON,sphereHeightfield:v.types.SPHERE|v.types.HEIGHTFIELD,boxHeightfield:v.types.BOX|v.types.HEIGHTFIELD,convexHeightfield:v.types.CONVEXPOLYHEDRON|v.types.HEIGHTFIELD,sphereParticle:v.types.PARTICLE|v.types.SPHERE,planeParticle:v.types.PLANE|v.types.PARTICLE,boxParticle:v.types.BOX|v.types.PARTICLE,convexParticle:v.types.PARTICLE|v.types.CONVEXPOLYHEDRON,sphereTrimesh:v.types.SPHERE|v.types.TRIMESH,planeTrimesh:v.types.PLANE|v.types.TRIMESH};class cn{constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new an,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,i,n,s,r){let o;this.contactPointPool.length?(o=this.contactPointPool.pop(),o.bi=t,o.bj=e):o=new Ht(t,e),o.enabled=t.collisionResponse&&e.collisionResponse&&i.collisionResponse&&n.collisionResponse;const a=this.currentContactMaterial;o.restitution=a.restitution,o.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const l=i.material||t.material,c=n.material||e.material;return l&&c&&l.restitution>=0&&c.restitution>=0&&(o.restitution=l.restitution*c.restitution),o.si=s||i,o.sj=r||n,o}createFrictionEquationsFromContact(t,e){const i=t.bi,n=t.bj,s=t.si,r=t.sj,o=this.world,a=this.currentContactMaterial;let l=a.friction;const c=s.material||i.material,h=r.material||n.material;if(c&&h&&c.friction>=0&&h.friction>=0&&(l=c.friction*h.friction),l>0){const s=l*o.gravity.length();let r=i.invMass+n.invMass;r>0&&(r=1/r);const c=this.frictionEquationPool,h=c.length?c.pop():new ce(i,n,s*r),u=c.length?c.pop():new ce(i,n,s*r);return h.bi=u.bi=i,h.bj=u.bj=n,h.minForce=u.minForce=-s*r,h.maxForce=u.maxForce=s*r,h.ri.copy(t.ri),h.rj.copy(t.rj),u.ri.copy(t.ri),u.rj.copy(t.rj),t.ni.tangents(h.t,u.t),h.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,o.dt),u.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,o.dt),h.enabled=u.enabled=t.enabled,e.push(h,u),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||1===t)return;const i=this.frictionResult[this.frictionResult.length-2],n=this.frictionResult[this.frictionResult.length-1];hn.setZero(),un.setZero(),dn.setZero();const s=e.bi;e.bj;for(let i=0;i!==t;i++)e=this.result[this.result.length-1-i],e.bi!==s?(hn.vadd(e.ni,hn),un.vadd(e.ri,un),dn.vadd(e.rj,dn)):(hn.vsub(e.ni,hn),un.vadd(e.rj,un),dn.vadd(e.ri,dn));const r=1/t;un.scale(r,i.ri),dn.scale(r,i.rj),n.ri.copy(i.ri),n.rj.copy(i.rj),hn.normalize(),hn.tangents(i.t,n.t)}getContacts(t,e,i,n,s,r,o){this.contactPointPool=s,this.frictionEquationPool=o,this.result=n,this.frictionResult=r;const a=fn,l=gn,c=pn,h=mn;for(let n=0,s=t.length;n!==s;n++){const s=t[n],r=e[n];let o=null;s.material&&r.material&&(o=i.getContactMaterial(s.material,r.material)||null);const u=s.type&R.KINEMATIC&&r.type&R.STATIC||s.type&R.STATIC&&r.type&R.KINEMATIC||s.type&R.KINEMATIC&&r.type&R.KINEMATIC;for(let t=0;t<s.shapes.length;t++){s.quaternion.mult(s.shapeOrientations[t],a),s.quaternion.vmult(s.shapeOffsets[t],c),c.vadd(s.position,c);const e=s.shapes[t];for(let t=0;t<r.shapes.length;t++){r.quaternion.mult(r.shapeOrientations[t],l),r.quaternion.vmult(r.shapeOffsets[t],h),h.vadd(r.position,h);const n=r.shapes[t];if(!(e.collisionFilterMask&n.collisionFilterGroup&&n.collisionFilterMask&e.collisionFilterGroup))continue;if(c.distanceTo(h)>e.boundingSphereRadius+n.boundingSphereRadius)continue;let d=null;e.material&&n.material&&(d=i.getContactMaterial(e.material,n.material)||null),this.currentContactMaterial=d||o||i.defaultContactMaterial;const p=this[e.type|n.type];if(p){let t=!1;t=e.type<n.type?p.call(this,e,n,c,h,a,l,s,r,e,n,u):p.call(this,n,e,h,c,l,a,r,s,e,n,u),t&&u&&(i.shapeOverlapKeeper.set(e.id,n.id),i.bodyOverlapKeeper.set(s.id,r.id))}}}}}sphereSphere(t,e,i,n,s,r,o,a,l,c,h){if(h)return i.distanceSquared(n)<(t.radius+e.radius)**2;const u=this.createContactEquation(o,a,t,e,l,c);n.vsub(i,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.scale(t.radius,u.ri),u.rj.scale(-e.radius,u.rj),u.ri.vadd(i,u.ri),u.ri.vsub(o.position,u.ri),u.rj.vadd(n,u.rj),u.rj.vsub(a.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}spherePlane(t,e,i,n,s,r,o,a,l,c,h){const u=this.createContactEquation(o,a,t,e,l,c);if(u.ni.set(0,0,1),r.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.scale(t.radius,u.ri),i.vsub(n,Bn),u.ni.scale(u.ni.dot(Bn),Fn),Bn.vsub(Fn,u.rj),-Bn.dot(u.ni)<=t.radius){if(h)return!0;const t=u.ri,e=u.rj;t.vadd(i,t),t.vsub(o.position,t),e.vadd(n,e),e.vsub(a.position,e),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}}boxBox(t,e,i,n,s,r,o,a,l,c,h){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,i,n,s,r,o,a,t,e,h)}sphereBox(t,e,i,n,s,r,o,a,l,c,h){const u=this.v3pool,d=qn;i.vsub(n,Vn),e.getSideNormals(d,r);const p=t.radius;let m=!1;const f=Xn,g=Yn,y=Zn;let v=null,x=0,_=0,b=0,w=null;for(let t=0,e=d.length;t!==e&&!1===m;t++){const e=kn;e.copy(d[t]);const i=e.length();e.normalize();const n=Vn.dot(e);if(n<i+p&&n>0){const s=Gn,r=Wn;s.copy(d[(t+1)%3]),r.copy(d[(t+2)%3]);const o=s.length(),a=r.length();s.normalize(),r.normalize();const l=Vn.dot(s),c=Vn.dot(r);if(l<o&&l>-o&&c<a&&c>-a){const t=Math.abs(n-i-p);if((null===w||t<w)&&(w=t,_=l,b=c,v=i,f.copy(e),g.copy(s),y.copy(r),x++,h))return!0}}}if(x){m=!0;const s=this.createContactEquation(o,a,t,e,l,c);f.scale(-p,s.ri),s.ni.copy(f),s.ni.negate(s.ni),f.scale(v,f),g.scale(_,g),f.vadd(g,f),y.scale(b,y),f.vadd(y,s.rj),s.ri.vadd(i,s.ri),s.ri.vsub(o.position,s.ri),s.rj.vadd(n,s.rj),s.rj.vsub(a.position,s.rj),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}let M=u.get();const S=jn;for(let s=0;2!==s&&!m;s++)for(let r=0;2!==r&&!m;r++)for(let u=0;2!==u&&!m;u++)if(M.set(0,0,0),s?M.vadd(d[0],M):M.vsub(d[0],M),r?M.vadd(d[1],M):M.vsub(d[1],M),u?M.vadd(d[2],M):M.vsub(d[2],M),n.vadd(M,S),S.vsub(i,S),S.lengthSquared()<p*p){if(h)return!0;m=!0;const s=this.createContactEquation(o,a,t,e,l,c);s.ri.copy(S),s.ri.normalize(),s.ni.copy(s.ri),s.ri.scale(p,s.ri),s.rj.copy(M),s.ri.vadd(i,s.ri),s.ri.vsub(o.position,s.ri),s.rj.vadd(n,s.rj),s.rj.vsub(a.position,s.rj),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}u.release(M),M=null;const E=u.get(),T=u.get(),A=u.get(),C=u.get(),R=u.get(),L=d.length;for(let s=0;s!==L&&!m;s++)for(let r=0;r!==L&&!m;r++)if(s%3!=r%3){d[r].cross(d[s],E),E.normalize(),d[s].vadd(d[r],T),A.copy(i),A.vsub(T,A),A.vsub(n,A);const u=A.dot(E);E.scale(u,C);let f=0;for(;f===s%3||f===r%3;)f++;R.copy(i),R.vsub(C,R),R.vsub(T,R),R.vsub(n,R);const g=Math.abs(u),y=R.length();if(g<d[f].length()&&y<p){if(h)return!0;m=!0;const s=this.createContactEquation(o,a,t,e,l,c);T.vadd(C,s.rj),s.rj.copy(s.rj),R.negate(s.ni),s.ni.normalize(),s.ri.copy(s.rj),s.ri.vadd(n,s.ri),s.ri.vsub(i,s.ri),s.ri.normalize(),s.ri.scale(p,s.ri),s.ri.vadd(i,s.ri),s.ri.vsub(o.position,s.ri),s.rj.vadd(n,s.rj),s.rj.vsub(a.position,s.rj),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}}u.release(E,T,A,C,R)}planeBox(t,e,i,n,s,r,o,a,l,c,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,i,n,s,r,o,a,t,e,h)}convexConvex(t,e,i,n,s,r,o,a,l,c,h,u,d){const p=hs;if(!(i.distanceTo(n)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,i,s,n,r,p,u,d)){const u=[],d=us;t.clipAgainstHull(i,s,e,n,r,p,-100,100,u);let m=0;for(let s=0;s!==u.length;s++){if(h)return!0;const r=this.createContactEquation(o,a,t,e,l,c),f=r.ri,g=r.rj;p.negate(r.ni),u[s].normal.negate(d),d.scale(u[s].depth,d),u[s].point.vadd(d,f),g.copy(u[s].point),f.vsub(i,f),g.vsub(n,g),f.vadd(i,f),f.vsub(o.position,f),g.vadd(n,g),g.vsub(a.position,g),this.result.push(r),m++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(r,this.frictionResult)}this.enableFrictionReduction&&m&&this.createFrictionFromAverage(m)}}sphereConvex(t,e,i,n,s,r,o,a,l,c,h){const u=this.v3pool;i.vsub(n,Jn);const d=e.faceNormals,p=e.faces,m=e.vertices,f=t.radius;let g=!1;for(let s=0;s!==m.length;s++){const u=m[s],d=ts;r.vmult(u,d),n.vadd(d,d);const p=$n;if(d.vsub(i,p),p.lengthSquared()<f*f){if(h)return!0;g=!0;const s=this.createContactEquation(o,a,t,e,l,c);return s.ri.copy(p),s.ri.normalize(),s.ni.copy(s.ri),s.ri.scale(f,s.ri),d.vsub(n,s.rj),s.ri.vadd(i,s.ri),s.ri.vsub(o.position,s.ri),s.rj.vadd(n,s.rj),s.rj.vsub(a.position,s.rj),this.result.push(s),void this.createFrictionEquationsFromContact(s,this.frictionResult)}}for(let s=0,y=p.length;s!==y&&!1===g;s++){const y=d[s],v=p[s],x=es;r.vmult(y,x);const _=is;r.vmult(m[v[0]],_),_.vadd(n,_);const b=ns;x.scale(-f,b),i.vadd(b,b);const w=ss;b.vsub(_,w);const M=w.dot(x),S=rs;if(i.vsub(_,S),M<0&&S.dot(x)>0){const s=[];for(let t=0,e=v.length;t!==e;t++){const e=u.get();r.vmult(m[v[t]],e),n.vadd(e,e),s.push(e)}if(Hn(s,x,i)){if(h)return!0;g=!0;const r=this.createContactEquation(o,a,t,e,l,c);x.scale(-f,r.ri),x.negate(r.ni);const d=u.get();x.scale(-M,d);const p=u.get();x.scale(-f,p),i.vsub(n,r.rj),r.rj.vadd(p,r.rj),r.rj.vadd(d,r.rj),r.rj.vadd(n,r.rj),r.rj.vsub(a.position,r.rj),r.ri.vadd(i,r.ri),r.ri.vsub(o.position,r.ri),u.release(d),u.release(p),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult);for(let t=0,e=s.length;t!==e;t++)u.release(s[t]);return}for(let d=0;d!==v.length;d++){const p=u.get(),g=u.get();r.vmult(m[v[(d+1)%v.length]],p),r.vmult(m[v[(d+2)%v.length]],g),n.vadd(p,p),n.vadd(g,g);const y=Kn;g.vsub(p,y);const x=Qn;y.unit(x);const _=u.get(),b=u.get();i.vsub(p,b);const w=b.dot(x);x.scale(w,_),_.vadd(p,_);const M=u.get();if(_.vsub(i,M),w>0&&w*w<y.lengthSquared()&&M.lengthSquared()<f*f){if(h)return!0;const r=this.createContactEquation(o,a,t,e,l,c);_.vsub(n,r.rj),_.vsub(i,r.ni),r.ni.normalize(),r.ni.scale(f,r.ri),r.rj.vadd(n,r.rj),r.rj.vsub(a.position,r.rj),r.ri.vadd(i,r.ri),r.ri.vsub(o.position,r.ri),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult);for(let t=0,e=s.length;t!==e;t++)u.release(s[t]);return u.release(p),u.release(g),u.release(_),u.release(M),void u.release(b)}u.release(p),u.release(g),u.release(_),u.release(M),u.release(b)}for(let t=0,e=s.length;t!==e;t++)u.release(s[t])}}}planeConvex(t,e,i,n,s,r,o,a,l,c,h){const u=os,d=as;d.set(0,0,1),s.vmult(d,d);let p=0;const m=ls;for(let s=0;s!==e.vertices.length;s++)if(u.copy(e.vertices[s]),r.vmult(u,u),n.vadd(u,u),u.vsub(i,m),d.dot(m)<=0){if(h)return!0;const s=this.createContactEquation(o,a,t,e,l,c),r=cs;d.scale(d.dot(m),r),u.vsub(r,r),r.vsub(i,s.ri),s.ni.copy(d),u.vsub(n,s.rj),s.ri.vadd(i,s.ri),s.ri.vsub(o.position,s.ri),s.rj.vadd(n,s.rj),s.rj.vsub(a.position,s.rj),this.result.push(s),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(s,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,i,n,s,r,o,a,l,c,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,i,n,s,r,o,a,t,e,h)}sphereHeightfield(t,e,i,n,s,r,o,a,l,c,h){const u=e.data,d=t.radius,p=e.elementSize,m=Es,f=Ss;x.pointToLocalFrame(n,r,i,f);let g=Math.floor((f.x-d)/p)-1,y=Math.ceil((f.x+d)/p)+1,v=Math.floor((f.y-d)/p)-1,_=Math.ceil((f.y+d)/p)+1;if(y<0||_<0||g>u.length||v>u[0].length)return;g<0&&(g=0),y<0&&(y=0),v<0&&(v=0),_<0&&(_=0),g>=u.length&&(g=u.length-1),y>=u.length&&(y=u.length-1),_>=u[0].length&&(_=u[0].length-1),v>=u[0].length&&(v=u[0].length-1);const b=[];e.getRectMinMax(g,v,y,_,b);const w=b[0],M=b[1];if(f.z-d>M||f.z+d<w)return;const S=this.result;for(let l=g;l<y;l++)for(let c=v;c<_;c++){const u=S.length;let d=!1;if(e.getConvexTrianglePillar(l,c,!1),x.pointToWorldFrame(n,r,e.pillarOffset,m),i.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,i,m,s,r,o,a,t,e,h)),h&&d)return!0;if(e.getConvexTrianglePillar(l,c,!0),x.pointToWorldFrame(n,r,e.pillarOffset,m),i.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,i,m,s,r,o,a,t,e,h)),h&&d)return!0;if(S.length-u>2)return}}boxHeightfield(t,e,i,n,s,r,o,a,l,c,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,i,n,s,r,o,a,t,e,h)}convexHeightfield(t,e,i,n,s,r,o,a,l,c,h){const u=e.data,d=e.elementSize,p=t.boundingSphereRadius,m=ws,f=Ms,g=bs;x.pointToLocalFrame(n,r,i,g);let y=Math.floor((g.x-p)/d)-1,v=Math.ceil((g.x+p)/d)+1,_=Math.floor((g.y-p)/d)-1,b=Math.ceil((g.y+p)/d)+1;if(v<0||b<0||y>u.length||_>u[0].length)return;y<0&&(y=0),v<0&&(v=0),_<0&&(_=0),b<0&&(b=0),y>=u.length&&(y=u.length-1),v>=u.length&&(v=u.length-1),b>=u[0].length&&(b=u[0].length-1),_>=u[0].length&&(_=u[0].length-1);const w=[];e.getRectMinMax(y,_,v,b,w);const M=w[0],S=w[1];if(!(g.z-p>S||g.z+p<M))for(let l=y;l<v;l++)for(let c=_;c<b;c++){let u=!1;if(e.getConvexTrianglePillar(l,c,!1),x.pointToWorldFrame(n,r,e.pillarOffset,m),i.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,i,m,s,r,o,a,null,null,h,f,null)),h&&u)return!0;if(e.getConvexTrianglePillar(l,c,!0),x.pointToWorldFrame(n,r,e.pillarOffset,m),i.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,i,m,s,r,o,a,null,null,h,f,null)),h&&u)return!0}}sphereParticle(t,e,i,n,s,r,o,a,l,c,h){const u=fs;if(u.set(0,0,1),n.vsub(i,u),u.lengthSquared()<=t.radius*t.radius){if(h)return!0;const i=this.createContactEquation(a,o,e,t,l,c);u.normalize(),i.rj.copy(u),i.rj.scale(t.radius,i.rj),i.ni.copy(u),i.ni.negate(i.ni),i.ri.set(0,0,0),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}planeParticle(t,e,i,n,s,r,o,a,l,c,h){const u=ds;u.set(0,0,1),o.quaternion.vmult(u,u);const d=ps;if(n.vsub(o.position,d),u.dot(d)<=0){if(h)return!0;const i=this.createContactEquation(a,o,e,t,l,c);i.ni.copy(u),i.ni.negate(i.ni),i.ri.set(0,0,0);const s=ms;u.scale(u.dot(n),s),n.vsub(s,s),i.rj.copy(s),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}boxParticle(t,e,i,n,s,r,o,a,l,c,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,i,n,s,r,o,a,t,e,h)}convexParticle(t,e,i,n,s,r,o,a,l,c,h){let u=-1;const d=vs,p=_s;let m=null;const f=ys;if(f.copy(n),f.vsub(i,f),s.conjugate(gs),gs.vmult(f,f),t.pointIsInside(f)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(i,s),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(s);for(let e=0,i=t.faces.length;e!==i;e++){const i=[t.worldVertices[t.faces[e][0]]],s=t.worldFaceNormals[e];n.vsub(i[0],xs);const r=-s.dot(xs);if(null===m||Math.abs(r)<Math.abs(m)){if(h)return!0;m=r,u=e,d.copy(s)}}if(-1!==u){const s=this.createContactEquation(a,o,e,t,l,c);d.scale(m,p),p.vadd(n,p),p.vsub(i,p),s.rj.copy(p),d.negate(s.ni),s.ri.set(0,0,0);const r=s.ri,h=s.rj;r.vadd(n,r),r.vsub(a.position,r),h.vadd(i,h),h.vsub(o.position,h),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}sphereTrimesh(t,e,i,n,s,r,o,a,l,c,h){const u=Sn,d=En,p=Tn,m=An,f=Cn,g=Rn,y=Dn,v=Mn,_=bn,b=Nn;x.pointToLocalFrame(n,r,i,f);const w=t.radius;y.lowerBound.set(f.x-w,f.y-w,f.z-w),y.upperBound.set(f.x+w,f.y+w,f.z+w),e.getTrianglesInAABB(y,b);const M=wn,S=t.radius*t.radius;for(let s=0;s<b.length;s++)for(let u=0;u<3;u++)if(e.getVertex(e.indices[3*b[s]+u],M),M.vsub(f,_),_.lengthSquared()<=S){if(v.copy(M),x.pointToWorldFrame(n,r,v,M),M.vsub(i,_),h)return!0;let s=this.createContactEquation(o,a,t,e,l,c);s.ni.copy(_),s.ni.normalize(),s.ri.copy(s.ni),s.ri.scale(t.radius,s.ri),s.ri.vadd(i,s.ri),s.ri.vsub(o.position,s.ri),s.rj.copy(M),s.rj.vsub(a.position,s.rj),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}for(let s=0;s<b.length;s++)for(let y=0;y<3;y++){e.getVertex(e.indices[3*b[s]+y],u),e.getVertex(e.indices[3*b[s]+(y+1)%3],d),d.vsub(u,p),f.vsub(d,g);const v=g.dot(p);f.vsub(u,g);let _=g.dot(p);if(_>0&&v<0&&(f.vsub(u,g),m.copy(p),m.normalize(),_=g.dot(m),m.scale(_,g),g.vadd(u,g),g.distanceTo(f)<t.radius)){if(h)return!0;const s=this.createContactEquation(o,a,t,e,l,c);g.vsub(f,s.ni),s.ni.normalize(),s.ni.scale(t.radius,s.ri),s.ri.vadd(i,s.ri),s.ri.vsub(o.position,s.ri),x.pointToWorldFrame(n,r,g,g),g.vsub(a.position,s.rj),x.vectorToWorldFrame(r,s.ni,s.ni),x.vectorToWorldFrame(r,s.ri,s.ri),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}}const E=Ln,T=Pn,A=In,C=_n;for(let s=0,u=b.length;s!==u;s++){e.getTriangleVertices(b[s],E,T,A),e.getNormal(b[s],C),f.vsub(E,g);let u=g.dot(C);if(C.scale(u,g),f.vsub(g,g),u=g.distanceTo(f),$.pointInTriangle(g,E,T,A)&&u<t.radius){if(h)return!0;let s=this.createContactEquation(o,a,t,e,l,c);g.vsub(f,s.ni),s.ni.normalize(),s.ni.scale(t.radius,s.ri),s.ri.vadd(i,s.ri),s.ri.vsub(o.position,s.ri),x.pointToWorldFrame(n,r,g,g),g.vsub(a.position,s.rj),x.vectorToWorldFrame(r,s.ni,s.ni),x.vectorToWorldFrame(r,s.ri,s.ri),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}}b.length=0}planeTrimesh(t,e,i,n,s,o,a,l,c,h,u){const d=new r,p=yn;p.set(0,0,1),s.vmult(p,p);for(let s=0;s<e.vertices.length/3;s++){e.getVertex(s,d);const m=new r;m.copy(d),x.pointToWorldFrame(n,o,m,d);const f=vn;if(d.vsub(i,f),p.dot(f)<=0){if(u)return!0;const i=this.createContactEquation(a,l,t,e,c,h);i.ni.copy(p);const n=xn;p.scale(f.dot(p),n),d.vsub(n,n),i.ri.copy(n),i.ri.vsub(a.position,i.ri),i.rj.copy(d),i.rj.vsub(l.position,i.rj),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}}}const hn=new r,un=new r,dn=new r,pn=new r,mn=new r,fn=new m,gn=new m;cn.prototype[ln.boxBox]=cn.prototype.boxBox,cn.prototype[ln.boxConvex]=cn.prototype.boxConvex,cn.prototype[ln.boxParticle]=cn.prototype.boxParticle,cn.prototype[ln.sphereSphere]=cn.prototype.sphereSphere;const yn=new r,vn=new r,xn=new r;cn.prototype[ln.planeTrimesh]=cn.prototype.planeTrimesh;const _n=new r,bn=new r,wn=new r,Mn=new r,Sn=new r,En=new r,Tn=new r,An=new r,Cn=new r,Rn=new r,Ln=new r,Pn=new r,In=new r,Dn=new c,Nn=[];cn.prototype[ln.sphereTrimesh]=cn.prototype.sphereTrimesh;const Bn=new r,Fn=new r;cn.prototype[ln.spherePlane]=cn.prototype.spherePlane;const On=new r,zn=new r,Un=new r;function Hn(t,e,i){let n=null;const s=t.length;for(let r=0;r!==s;r++){const o=t[r],a=On;t[(r+1)%s].vsub(o,a);const l=zn;a.cross(e,l);const c=Un;i.vsub(o,c);const h=l.dot(c);if(!(null===n||h>0&&!0===n||h<=0&&!1===n))return!1;null===n&&(n=h>0)}return!0}const Vn=new r,kn=new r,Gn=new r,Wn=new r,qn=[new r,new r,new r,new r,new r,new r],jn=new r,Xn=new r,Yn=new r,Zn=new r;cn.prototype[ln.sphereBox]=cn.prototype.sphereBox;const Jn=new r,Kn=new r,Qn=new r,$n=new r,ts=new r,es=new r,is=new r,ns=new r,ss=new r,rs=new r;cn.prototype[ln.sphereConvex]=cn.prototype.sphereConvex,cn.prototype[ln.planeBox]=cn.prototype.planeBox;const os=new r,as=new r,ls=new r,cs=new r;cn.prototype[ln.planeConvex]=cn.prototype.planeConvex;const hs=new r,us=new r;cn.prototype[ln.convexConvex]=cn.prototype.convexConvex;const ds=new r,ps=new r,ms=new r;cn.prototype[ln.planeParticle]=cn.prototype.planeParticle;const fs=new r;cn.prototype[ln.sphereParticle]=cn.prototype.sphereParticle;const gs=new m,ys=new r,vs=new r,xs=new r,_s=new r;cn.prototype[ln.convexParticle]=cn.prototype.convexParticle,cn.prototype[ln.boxHeightfield]=cn.prototype.boxHeightfield;const bs=new r,ws=new r,Ms=[0];cn.prototype[ln.convexHeightfield]=cn.prototype.convexHeightfield;const Ss=new r,Es=new r;cn.prototype[ln.sphereHeightfield]=cn.prototype.sphereHeightfield;class Ts{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const i=e;e=t,t=i}return t<<16|e}set(t,e){const i=this.getKey(t,e),n=this.current;let s=0;for(;i>n[s];)s++;if(i!==n[s]){for(let t=n.length-1;t>=s;t--)n[t+1]=n[t];n[s]=i}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const i=this.current,n=this.previous,s=i.length,r=n.length;let o=0;for(let e=0;e<s;e++){let s=!1;const r=i[e];for(;r>n[o];)o++;s=r===n[o],s||As(t,r)}o=0;for(let t=0;t<r;t++){let s=!1;const r=n[t];for(;r>i[o];)o++;s=i[o]===r,s||As(e,r)}}}function As(t,e){t.push((4294901760&e)>>16,65535&e)}class Cs{constructor(){this.data={keys:[]}}get(t,e){if(t>e){const i=e;e=t,t=i}return this.data[t+"-"+e]}set(t,e,i){if(t>e){const i=e;e=t,t=i}const n=t+"-"+e;this.get(t,e)||this.data.keys.push(n),this.data[n]=i}reset(){const t=this.data,e=t.keys;for(;e.length>0;)delete t[e.pop()]}}class Rs extends p{constructor(t={}){super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==t.quatNormalizeSkip?t.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==t.quatNormalizeFast&&t.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new r,t.gravity&&this.gravity.copy(t.gravity),this.broadphase=void 0!==t.broadphase?t.broadphase:new J,this.bodies=[],this.hasActiveBodies=!1,this.solver=void 0!==t.solver?t.solver:new qi,this.constraints=[],this.narrowphase=new cn(this),this.collisionMatrix=new d,this.collisionMatrixPrevious=new d,this.bodyOverlapKeeper=new Ts,this.shapeOverlapKeeper=new Ts,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new Cs,this.defaultMaterial=new pe("default"),this.defaultContactMaterial=new de(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}numObjects(){return this.bodies.length}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);-1!==e&&this.constraints.splice(e,1)}rayTest(t,e,i){i instanceof K?this.raycastClosest(t,e,{skipBackfaces:!0},i):this.raycastAll(t,e,{skipBackfaces:!0},i)}raycastAll(t,e,i={},n){return i.mode=$.ALL,i.from=t,i.to=e,i.callback=n,Ls.intersectWorld(this,i)}raycastAny(t,e,i={},n){return i.mode=$.ANY,i.from=t,i.to=e,i.result=n,Ls.intersectWorld(this,i)}raycastClosest(t,e,i={},n){return i.mode=$.CLOSEST,i.from=t,i.to=e,i.result=n,Ls.intersectWorld(this,i)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof R&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,i=this.bodies,n=i.indexOf(t);if(-1!==n){i.splice(n,1);for(let t=0;t!==i.length;t++)i[t].index=t;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let i=0,n=e.length;i<n;i++){const n=e[i].shapes;for(let e=0,i=n.length;e<i;e++){const i=n[e];if(i.id===t)return i}}}addMaterial(t){this.materials.push(t)}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}step(t,e=0,i=10){if(0===e)this.internalStep(t),this.time+=t;else{this.accumulator+=e;let n=0;for(;this.accumulator>=t&&n<i;)this.internalStep(t),this.accumulator-=t,n++;const s=this.accumulator%t/t;for(let t=0;t!==this.bodies.length;t++){const e=this.bodies[t];e.previousPosition.lerp(e.position,s,e.interpolatedPosition),e.previousQuaternion.slerp(e.quaternion,s,e.interpolatedQuaternion),e.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,i=Fs,n=Os,s=this.numObjects(),r=this.bodies,o=this.solver,a=this.gravity,l=this.doProfiling,c=this.profile,h=R.DYNAMIC;let u=-1/0;const d=this.constraints,p=Bs,m=(a.length(),a.x),f=a.y,g=a.z;let y=0;for(l&&(u=performance.now()),y=0;y!==s;y++){const t=r[y];if(t.type===h){const e=t.force,i=t.mass;e.x+=i*m,e.y+=i*f,e.z+=i*g}}for(let t=0,e=this.subsystems.length;t!==e;t++)this.subsystems[t].update();l&&(u=performance.now()),i.length=0,n.length=0,this.broadphase.collisionPairs(this,i,n),l&&(c.broadphase=performance.now()-u);let v=d.length;for(y=0;y!==v;y++){const t=d[y];if(!t.collideConnected)for(let e=i.length-1;e>=0;e-=1)(t.bodyA===i[e]&&t.bodyB===n[e]||t.bodyB===i[e]&&t.bodyA===n[e])&&(i.splice(e,1),n.splice(e,1))}this.collisionMatrixTick(),l&&(u=performance.now());const x=Ns,_=e.length;for(y=0;y!==_;y++)x.push(e[y]);e.length=0;const b=this.frictionEquations.length;for(y=0;y!==b;y++)p.push(this.frictionEquations[y]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(i,n,this,e,x,this.frictionEquations,p),l&&(c.narrowphase=performance.now()-u),l&&(u=performance.now()),y=0;y<this.frictionEquations.length;y++)o.addEquation(this.frictionEquations[y]);const w=e.length;for(let t=0;t!==w;t++){const i=e[t],n=i.bi,s=i.bj,r=i.si,a=i.sj;let l;l=n.material&&s.material&&this.getContactMaterial(n.material,s.material)||this.defaultContactMaterial;let c=l.friction;n.material&&s.material&&(n.material.friction>=0&&s.material.friction>=0&&(c=n.material.friction*s.material.friction),n.material.restitution>=0&&s.material.restitution>=0&&(i.restitution=n.material.restitution*s.material.restitution)),o.addEquation(i),n.allowSleep&&n.type===R.DYNAMIC&&n.sleepState===R.SLEEPING&&s.sleepState===R.AWAKE&&s.type!==R.STATIC&&s.velocity.lengthSquared()+s.angularVelocity.lengthSquared()>=2*s.sleepSpeedLimit**2&&(n.wakeUpAfterNarrowphase=!0),s.allowSleep&&s.type===R.DYNAMIC&&s.sleepState===R.SLEEPING&&n.sleepState===R.AWAKE&&n.type!==R.STATIC&&n.velocity.lengthSquared()+n.angularVelocity.lengthSquared()>=2*n.sleepSpeedLimit**2&&(s.wakeUpAfterNarrowphase=!0),this.collisionMatrix.set(n,s,!0),this.collisionMatrixPrevious.get(n,s)||(Ds.body=s,Ds.contact=i,n.dispatchEvent(Ds),Ds.body=n,s.dispatchEvent(Ds)),this.bodyOverlapKeeper.set(n.id,s.id),this.shapeOverlapKeeper.set(r.id,a.id)}for(this.emitContactEvents(),l&&(c.makeContactConstraints=performance.now()-u,u=performance.now()),y=0;y!==s;y++){const t=r[y];t.wakeUpAfterNarrowphase&&(t.wakeUp(),t.wakeUpAfterNarrowphase=!1)}for(v=d.length,y=0;y!==v;y++){const t=d[y];t.update();for(let e=0,i=t.equations.length;e!==i;e++){const i=t.equations[e];o.addEquation(i)}}o.solve(t,this),l&&(c.solve=performance.now()-u),o.removeAllEquations();const M=Math.pow;for(y=0;y!==s;y++){const e=r[y];if(e.type&h){const i=M(1-e.linearDamping,t),n=e.velocity;n.scale(i,n);const s=e.angularVelocity;if(s){const i=M(1-e.angularDamping,t);s.scale(i,s)}}}for(this.dispatchEvent(Is),y=0;y!==s;y++){const t=r[y];t.preStep&&t.preStep.call(t)}l&&(u=performance.now());const S=this.stepnumber%(this.quatNormalizeSkip+1)==0,E=this.quatNormalizeFast;for(y=0;y!==s;y++)r[y].integrate(t,S,E);for(this.clearForces(),this.broadphase.dirty=!0,l&&(c.integrate=performance.now()-u),this.time+=t,this.stepnumber+=1,this.dispatchEvent(Ps),y=0;y!==s;y++){const t=r[y],e=t.postStep;e&&e.call(t)}let T=!0;if(this.allowSleep)for(T=!1,y=0;y!==s;y++){const t=r[y];t.sleepTick(this.time),t.sleepState!==R.SLEEPING&&(T=!0)}this.hasActiveBodies=T}clearForces(){const t=this.bodies,e=t.length;for(let i=0;i!==e;i++){const e=t[i];e.force,e.torque,e.force.set(0,0,0),e.torque.set(0,0,0)}}}new c;const Ls=new $;if("undefined"==typeof performance&&(performance={}),!performance.now){let t=Date.now();performance.timing&&performance.timing.navigationStart&&(t=performance.timing.navigationStart),performance.now=()=>Date.now()-t}const Ps={type:"postStep"},Is={type:"preStep"},Ds={type:R.COLLIDE_EVENT_NAME,body:null,contact:null},Ns=[],Bs=[],Fs=[],Os=[];Rs.prototype.emitContactEvents=(()=>{const t=[],e=[],i={type:"beginContact",bodyA:null,bodyB:null},n={type:"endContact",bodyA:null,bodyB:null},s={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},r={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};return function(){const o=this.hasAnyEventListener("beginContact"),a=this.hasAnyEventListener("endContact");if((o||a)&&this.bodyOverlapKeeper.getDiff(t,e),o){for(let e=0,n=t.length;e<n;e+=2)i.bodyA=this.getBodyById(t[e]),i.bodyB=this.getBodyById(t[e+1]),this.dispatchEvent(i);i.bodyA=i.bodyB=null}if(a){for(let t=0,i=e.length;t<i;t+=2)n.bodyA=this.getBodyById(e[t]),n.bodyB=this.getBodyById(e[t+1]),this.dispatchEvent(n);n.bodyA=n.bodyB=null}t.length=e.length=0;const l=this.hasAnyEventListener("beginShapeContact"),c=this.hasAnyEventListener("endShapeContact");if((l||c)&&this.shapeOverlapKeeper.getDiff(t,e),l){for(let e=0,i=t.length;e<i;e+=2){const i=this.getShapeById(t[e]),n=this.getShapeById(t[e+1]);s.shapeA=i,s.shapeB=n,s.bodyA=i.body,s.bodyB=n.body,this.dispatchEvent(s)}s.bodyA=s.bodyB=s.shapeA=s.shapeB=null}if(c){for(let t=0,i=e.length;t<i;t+=2){const i=this.getShapeById(e[t]),n=this.getShapeById(e[t+1]);r.shapeA=i,r.shapeB=n,r.bodyA=i.body,r.bodyB=n.body,this.dispatchEvent(r)}r.bodyA=r.bodyB=r.shapeA=r.shapeB=null}}})()},406:(t,e)=>{"use strict";const i=e.TYPE={BOX:"box",CYLINDER:"cylinder",SPHERE:"sphere",CAPSULE:"capsule",CONE:"cone",HULL:"hull",HACD:"hacd",VHACD:"vhacd",MESH:"mesh",HEIGHTFIELD:"heightfield"},n=e.FIT={ALL:"all",MANUAL:"manual"},s=(e.HEIGHTFIELD_DATA_TYPE={short:"short",float:"float"},THREE.Object3D.prototype.hasOwnProperty("updateMatrices"));function r(t){t.fit=t.hasOwnProperty("fit")?t.fit:n.ALL,t.type=t.type||i.HULL,t.minHalfExtent=t.hasOwnProperty("minHalfExtent")?t.minHalfExtent:0,t.maxHalfExtent=t.hasOwnProperty("maxHalfExtent")?t.maxHalfExtent:Number.POSITIVE_INFINITY,t.cylinderAxis=t.cylinderAxis||"y",t.margin=t.hasOwnProperty("margin")?t.margin:.01,t.includeInvisible=!!t.hasOwnProperty("includeInvisible")&&t.includeInvisible,t.offset||(t.offset=new THREE.Vector3),t.orientation||(t.orientation=new THREE.Quaternion)}e.createCollisionShapes=function(t,e){switch(e.type){case i.BOX:return[this.createBoxShape(t,e)];case i.CYLINDER:return[this.createCylinderShape(t,e)];case i.CAPSULE:return[this.createCapsuleShape(t,e)];case i.CONE:return[this.createConeShape(t,e)];case i.SPHERE:return[this.createSphereShape(t,e)];case i.HULL:return[this.createHullShape(t,e)];case i.HACD:return this.createHACDShapes(t,e);case i.VHACD:return this.createVHACDShapes(t,e);case i.MESH:return[this.createTriMeshShape(t,e)];case i.HEIGHTFIELD:return[this.createHeightfieldTerrainShape(t,e)];default:return console.warn(e.type+" is not currently supported"),[]}},e.createBoxShape=function(t,e){e.type=i.BOX,r(e),e.fit===n.ALL&&(e.halfExtents=h(t,u(t,e),e.minHalfExtent,e.maxHalfExtent));const s=new Ammo.btVector3(e.halfExtents.x,e.halfExtents.y,e.halfExtents.z),a=new Ammo.btBoxShape(s);return Ammo.destroy(s),o(a,e,l(t,e)),a},e.createCylinderShape=function(t,e){e.type=i.CYLINDER,r(e),e.fit===n.ALL&&(e.halfExtents=h(t,u(t,e),e.minHalfExtent,e.maxHalfExtent));const s=new Ammo.btVector3(e.halfExtents.x,e.halfExtents.y,e.halfExtents.z),a=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btCylinderShape(s);case"x":return new Ammo.btCylinderShapeX(s);case"z":return new Ammo.btCylinderShapeZ(s)}return null})();return Ammo.destroy(s),o(a,e,l(t,e)),a},e.createCapsuleShape=function(t,e){e.type=i.CAPSULE,r(e),e.fit===n.ALL&&(e.halfExtents=h(t,u(t,e),e.minHalfExtent,e.maxHalfExtent));const{x:s,y:a,z:c}=e.halfExtents,d=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btCapsuleShape(Math.max(s,c),2*a);case"x":return new Ammo.btCapsuleShapeX(Math.max(a,c),2*s);case"z":return new Ammo.btCapsuleShapeZ(Math.max(s,a),2*c)}return null})();return o(d,e,l(t,e)),d},e.createConeShape=function(t,e){e.type=i.CONE,r(e),e.fit===n.ALL&&(e.halfExtents=h(t,u(t,e),e.minHalfExtent,e.maxHalfExtent));const{x:s,y:a,z:c}=e.halfExtents,d=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btConeShape(Math.max(s,c),2*a);case"x":return new Ammo.btConeShapeX(Math.max(a,c),2*s);case"z":return new Ammo.btConeShapeZ(Math.max(s,a),2*c)}return null})();return o(d,e,l(t,e)),d},e.createSphereShape=function(t,e){let s;e.type=i.SPHERE,r(e),s=e.fit!==n.MANUAL||isNaN(e.sphereRadius)?c(t,e,u(t,e)):e.sphereRadius;const a=new Ammo.btSphereShape(s);return o(a,e,l(t,e)),a},e.createHullShape=function(){const t=new THREE.Vector3,e=new THREE.Vector3;return function(s,c){if(c.type=i.HULL,r(c),c.fit===n.MANUAL)return console.warn("cannot use fit: manual with type: hull"),null;const h=u(s,c),d=new Ammo.btVector3,p=new Ammo.btConvexHullShape;p.setMargin(c.margin),e.addVectors(h.max,h.min).multiplyScalar(.5);let m=0;a(s,c,(t=>{m+=t.attributes.position.array.length/3}));const f=c.hullMaxVertices||1e5;m>f&&console.warn(`too many vertices for hull shape; sampling ~${f} from ~${m} vertices`);const g=Math.min(1,f/m);a(s,c,((i,n)=>{const s=i.attributes.position.array;for(let i=0;i<s.length;i+=3)Math.random()<=g&&(t.set(s[i],s[i+1],s[i+2]).applyMatrix4(n).sub(e),d.setValue(t.x,t.y,t.z),p.addPoint(d,i===s.length-3))}));let y=p;if(p.getNumVertices()>=100){const t=new Ammo.btShapeHull(p);t.buildHull(c.margin),Ammo.destroy(p),y=new Ammo.btConvexHullShape(Ammo.getPointer(t.getVertexPointer()),t.numVertices()),Ammo.destroy(t)}return Ammo.destroy(d),o(y,c,l(s,c)),y}}(),e.createHACDShapes=function(){const t=new THREE.Vector3,e=new THREE.Vector3;return function(s,c){if(c.type=i.HACD,r(c),c.fit===n.MANUAL)return console.warn("cannot use fit: manual with type: hacd"),[];if(!Ammo.hasOwnProperty("HACD"))return console.warn("HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version."),[];const h=u(s),d=l(s,c);let p=0,m=0;e.addVectors(h.max,h.min).multiplyScalar(.5),a(s,c,(t=>{p+=t.attributes.position.array.length/3,t.index?m+=t.index.array.length/3:m+=t.attributes.position.array.length/9}));const f=new Ammo.HACD;c.hasOwnProperty("compacityWeight")&&f.SetCompacityWeight(c.compacityWeight),c.hasOwnProperty("volumeWeight")&&f.SetVolumeWeight(c.volumeWeight),c.hasOwnProperty("nClusters")&&f.SetNClusters(c.nClusters),c.hasOwnProperty("nVerticesPerCH")&&f.SetNVerticesPerCH(c.nVerticesPerCH),c.hasOwnProperty("concavity")&&f.SetConcavity(c.concavity);const g=Ammo._malloc(3*p*8),y=Ammo._malloc(3*m*4);f.SetPoints(g),f.SetTriangles(y),f.SetNPoints(p),f.SetNTriangles(m);const v=g/8,x=y/4;a(s,c,((i,n)=>{const s=i.attributes.position.array,r=i.index?i.index.array:null;for(let i=0;i<s.length;i+=3)t.set(s[i+0],s[i+1],s[i+2]).applyMatrix4(n).sub(e),Ammo.HEAPF64[v+i+0]=t.x,Ammo.HEAPF64[v+i+1]=t.y,Ammo.HEAPF64[v+i+2]=t.z;if(r)for(let t=0;t<r.length;t++)Ammo.HEAP32[x+t]=r[t];else for(let t=0;t<s.length/3;t++)Ammo.HEAP32[x+t]=t})),f.Compute(),Ammo._free(g),Ammo._free(y);const _=f.GetNClusters(),b=[];for(let t=0;t<_;t++){const e=new Ammo.btConvexHullShape;e.setMargin(c.margin);const i=f.GetNPointsCH(t),n=f.GetNTrianglesCH(t),s=Ammo._malloc(3*i*8),r=Ammo._malloc(3*n*4);f.GetCH(t,s,r);const a=s/8;for(let t=0;t<i;t++){const n=new Ammo.btVector3,s=Ammo.HEAPF64[a+3*t+0],r=Ammo.HEAPF64[a+3*t+1],o=Ammo.HEAPF64[a+3*t+2];n.setValue(s,r,o),e.addPoint(n,t===i-1),Ammo.destroy(n)}o(e,c,d),b.push(e)}return b}}(),e.createVHACDShapes=function(){const t=new THREE.Vector3,e=new THREE.Vector3;return function(s,c){if(c.type=i.VHACD,r(c),c.fit===n.MANUAL)return console.warn("cannot use fit: manual with type: vhacd"),[];if(!Ammo.hasOwnProperty("VHACD"))return console.warn("VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version."),[];const h=u(s,c),d=l(s,c);let p=0,m=0;e.addVectors(h.max,h.min).multiplyScalar(.5),a(s,c,(t=>{p+=t.attributes.position.count,t.index?m+=t.index.count/3:m+=t.attributes.position.count/3}));const f=new Ammo.VHACD,g=new Ammo.Parameters;c.hasOwnProperty("resolution")&&g.set_m_resolution(c.resolution),c.hasOwnProperty("depth")&&g.set_m_depth(c.depth),c.hasOwnProperty("concavity")&&g.set_m_concavity(c.concavity),c.hasOwnProperty("planeDownsampling")&&g.set_m_planeDownsampling(c.planeDownsampling),c.hasOwnProperty("convexhullDownsampling")&&g.set_m_convexhullDownsampling(c.convexhullDownsampling),c.hasOwnProperty("alpha")&&g.set_m_alpha(c.alpha),c.hasOwnProperty("beta")&&g.set_m_beta(c.beta),c.hasOwnProperty("gamma")&&g.set_m_gamma(c.gamma),c.hasOwnProperty("pca")&&g.set_m_pca(c.pca),c.hasOwnProperty("mode")&&g.set_m_mode(c.mode),c.hasOwnProperty("maxNumVerticesPerCH")&&g.set_m_maxNumVerticesPerCH(c.maxNumVerticesPerCH),c.hasOwnProperty("minVolumePerCH")&&g.set_m_minVolumePerCH(c.minVolumePerCH),c.hasOwnProperty("convexhullApproximation")&&g.set_m_convexhullApproximation(c.convexhullApproximation),c.hasOwnProperty("oclAcceleration")&&g.set_m_oclAcceleration(c.oclAcceleration);const y=Ammo._malloc(3*p*8),v=Ammo._malloc(3*m*4);let x=y/8,_=v/4;a(s,c,((i,n)=>{const s=i.attributes.position.array,r=i.index?i.index.array:null;for(let i=0;i<s.length;i+=3)t.set(s[i+0],s[i+1],s[i+2]).applyMatrix4(n).sub(e),Ammo.HEAPF64[x+0]=t.x,Ammo.HEAPF64[x+1]=t.y,Ammo.HEAPF64[x+2]=t.z,x+=3;if(r)for(let t=0;t<r.length;t++)Ammo.HEAP32[_]=r[t],_++;else for(let t=0;t<s.length/3;t++)Ammo.HEAP32[_]=t,_++})),f.Compute(y,3,p,v,3,m,g),Ammo._free(y),Ammo._free(v);const b=f.GetNConvexHulls(),w=[],M=new Ammo.ConvexHull;for(let t=0;t<b;t++){f.GetConvexHull(t,M);const e=M.get_m_nPoints(),i=(M.get_m_points(),new Ammo.btConvexHullShape);i.setMargin(c.margin);for(let t=0;t<e;t++){const n=new Ammo.btVector3,s=M.get_m_points(3*t+0),r=M.get_m_points(3*t+1),o=M.get_m_points(3*t+2);n.setValue(s,r,o),i.addPoint(n,t===e-1),Ammo.destroy(n)}o(i,c,d),w.push(i)}return Ammo.destroy(M),Ammo.destroy(f),w}}(),e.createTriMeshShape=function(){const t=new THREE.Vector3,e=new THREE.Vector3,s=new THREE.Vector3;return function(c,h){if(h.type=i.MESH,r(h),h.fit===n.MANUAL)return console.warn("cannot use fit: manual with type: mesh"),null;const u=l(c,h),d=new Ammo.btVector3,p=new Ammo.btVector3,m=new Ammo.btVector3,f=new Ammo.btTriangleMesh(!0,!1);a(c,h,((i,n)=>{const r=i.attributes.position.array;if(i.index)for(let o=0;o<i.index.count;o+=3){const a=3*i.index.array[o],l=3*i.index.array[o+1],c=3*i.index.array[o+2];t.set(r[a],r[a+1],r[a+2]).applyMatrix4(n),e.set(r[l],r[l+1],r[l+2]).applyMatrix4(n),s.set(r[c],r[c+1],r[c+2]).applyMatrix4(n),d.setValue(t.x,t.y,t.z),p.setValue(e.x,e.y,e.z),m.setValue(s.x,s.y,s.z),f.addTriangle(d,p,m,!1)}else for(let i=0;i<r.length;i+=9)t.set(r[i+0],r[i+1],r[i+2]).applyMatrix4(n),e.set(r[i+3],r[i+4],r[i+5]).applyMatrix4(n),s.set(r[i+6],r[i+7],r[i+8]).applyMatrix4(n),d.setValue(t.x,t.y,t.z),p.setValue(e.x,e.y,e.z),m.setValue(s.x,s.y,s.z),f.addTriangle(d,p,m,!1)}));const g=new Ammo.btVector3(u.x,u.y,u.z);f.setScaling(g),Ammo.destroy(g);const y=new Ammo.btBvhTriangleMeshShape(f,!0,!0);return y.resources=[f],Ammo.destroy(d),Ammo.destroy(p),Ammo.destroy(m),o(y,h),y}}(),e.createHeightfieldTerrainShape=function(t,e){if(r(e),e.fit===n.ALL)return console.warn("cannot use fit: all with type: heightfield"),null;const i=e.heightfieldDistance||1,s=e.heightfieldData||[],a=e.heightScale||0,l=e.hasOwnProperty("upAxis")?e.upAxis:1,c="short"===e.heightDataType?Ammo.PHY_SHORT:Ammo.PHY_FLOAT,h=!e.hasOwnProperty("flipQuadEdges")||e.flipQuadEdges,u=s.length,d=u>0?s[0].length:0,p=Ammo._malloc(u*d*4),m=p/4;let f=Number.POSITIVE_INFINITY,g=Number.NEGATIVE_INFINITY,y=0;for(let t=0;t<u;t++)for(let e=0;e<d;e++){const i=s[t][e];Ammo.HEAPF32[m+y]=i,y++,f=Math.min(f,i),g=Math.max(g,i)}const v=new Ammo.btHeightfieldTerrainShape(d,u,p,a,f,g,l,c,h),x=new Ammo.btVector3(i,1,i);return v.setLocalScaling(x),Ammo.destroy(x),v.heightfieldData=p,o(v,e),v};const o=function(t,e,i){t.type=e.type,t.setMargin(e.margin),t.destroy=()=>{for(let e of t.resources||[])Ammo.destroy(e);t.heightfieldData&&Ammo._free(t.heightfieldData),Ammo.destroy(t)};const n=new Ammo.btTransform,s=new Ammo.btQuaternion;if(n.setIdentity(),n.getOrigin().setValue(e.offset.x,e.offset.y,e.offset.z),s.setValue(e.orientation.x,e.orientation.y,e.orientation.z,e.orientation.w),n.setRotation(s),Ammo.destroy(s),i){const e=new Ammo.btVector3(i.x,i.y,i.z);t.setLocalScaling(e),Ammo.destroy(e)}t.localTransform=n},a=function(){const t=new THREE.Matrix4,e=new THREE.Matrix4,i=new THREE.BufferGeometry;return function(n,r,o){e.getInverse(n.matrixWorld),n.traverse((a=>{!a.isMesh||THREE.Sky&&a.__proto__==THREE.Sky.prototype||!(r.includeInvisible||a.el&&a.el.object3D.visible||a.visible)||(a===n?t.identity():(s&&a.updateMatrices(),t.multiplyMatrices(e,a.matrixWorld)),o(a.geometry.isBufferGeometry?a.geometry:i.fromGeometry(a.geometry),t))}))}}(),l=function(t,e){const i=new THREE.Vector3(1,1,1);return e.fit===n.ALL&&i.setFromMatrixScale(t.matrixWorld),i},c=function(){const t=new THREE.Vector3,e=new THREE.Vector3;return function(i,n,s){let r=0,{x:o,y:l,z:c}=s.getCenter(e);return a(i,n,((e,i)=>{const n=e.attributes.position.array;for(let e=0;e<n.length;e+=3){t.set(n[e],n[e+1],n[e+2]).applyMatrix4(i);const s=o-t.x,a=l-t.y,h=c-t.z;r=Math.max(r,s*s+a*a+h*h)}})),Math.sqrt(r)}}(),h=function(t,e,i,n){return(new THREE.Vector3).subVectors(e.max,e.min).multiplyScalar(.5).clampScalar(i,n)},u=function(){const t=new THREE.Vector3;return function(e,i){const n=new THREE.Box3;let s=1/0,r=1/0,o=1/0,l=-1/0,c=-1/0,h=-1/0;return n.min.set(0,0,0),n.max.set(0,0,0),a(e,i,((e,i)=>{const n=e.attributes.position.array;for(let e=0;e<n.length;e+=3)t.set(n[e],n[e+1],n[e+2]).applyMatrix4(i),t.x<s&&(s=t.x),t.y<r&&(r=t.y),t.z<o&&(o=t.z),t.x>l&&(l=t.x),t.y>c&&(c=t.y),t.z>h&&(h=t.z)})),n.min.set(s,r,o),n.max.set(l,c,h),n}}()},122:(t,e,i)=>{function n(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.i=function(t){return t},i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/",i.oe=function(t){throw console.error(t),t};var n=i(i.s=ENTRY_MODULE);return n.default||n}var s="[\\.|\\-|\\+|\\w|/|@]+",r="\\(\\s*(/\\*.*?\\*/)?\\s*.*?("+s+").*?\\)";function o(t){return(t+"").replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")}function a(t,e,n){var a={};a[n]=[];var l=e.toString(),c=l.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/);if(!c)return a;for(var h,u=c[1],d=new RegExp("(\\\\n|\\W)"+o(u)+r,"g");h=d.exec(l);)"dll-reference"!==h[3]&&a[n].push(h[3]);for(d=new RegExp("\\("+o(u)+'\\("(dll-reference\\s('+s+'))"\\)\\)'+r,"g");h=d.exec(l);)t[h[2]]||(a[n].push(h[1]),t[h[2]]=i(h[1]).m),a[h[2]]=a[h[2]]||[],a[h[2]].push(h[4]);for(var p,m=Object.keys(a),f=0;f<m.length;f++)for(var g=0;g<a[m[f]].length;g++)p=a[m[f]][g],isNaN(1*p)||(a[m[f]][g]=1*a[m[f]][g]);return a}function l(t){return Object.keys(t).reduce((function(e,i){return e||t[i].length>0}),!1)}t.exports=function(t,e){e=e||{};var s={main:i.m},r=e.all?{main:Object.keys(s.main)}:function(t,e){for(var i={main:[e]},n={main:[]},s={main:{}};l(i);)for(var r=Object.keys(i),o=0;o<r.length;o++){var c=r[o],h=i[c].pop();if(s[c]=s[c]||{},!s[c][h]&&t[c][h]){s[c][h]=!0,n[c]=n[c]||[],n[c].push(h);for(var u=a(t,t[c][h],c),d=Object.keys(u),p=0;p<d.length;p++)i[d[p]]=i[d[p]]||[],i[d[p]]=i[d[p]].concat(u[d[p]])}}return n}(s,t),o="";Object.keys(r).filter((function(t){return"main"!==t})).forEach((function(t){for(var e=0;r[t][e];)e++;r[t].push(e),s[t][e]="(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })",o=o+"var "+t+" = ("+n.toString().replace("ENTRY_MODULE",JSON.stringify(e))+")({"+r[t].map((function(e){return JSON.stringify(e)+": "+s[t][e].toString()})).join(",")+"});\n"})),o=o+"new (("+n.toString().replace("ENTRY_MODULE",JSON.stringify(t))+")({"+r.main.map((function(t){return JSON.stringify(t)+": "+s.main[t].toString()})).join(",")+"}))(self);";var c=new window.Blob([o],{type:"text/javascript"});if(e.bare)return c;var h=(window.URL||window.webkitURL||window.mozURL||window.msURL).createObjectURL(c),u=new window.Worker(h);return u.objectURL=h,u}},592:(t,e,i)=>{const n=i(279).CONSTRAINT;t.exports=AFRAME.registerComponent("ammo-constraint",{multiple:!0,schema:{type:{default:n.LOCK,oneOf:[n.LOCK,n.FIXED,n.SPRING,n.SLIDER,n.HINGE,n.CONE_TWIST,n.POINT_TO_POINT]},target:{type:"selector"},pivot:{type:"vec3"},targetPivot:{type:"vec3"},axis:{type:"vec3",default:{x:0,y:0,z:1}},targetAxis:{type:"vec3",default:{x:0,y:0,z:1}},damping:{type:"number",default:1},stiffness:{type:"number",default:100}},init:function(){this.system=this.el.sceneEl.systems.physics,this.constraint=null},remove:function(){this.constraint&&(this.system.removeConstraint(this.constraint),this.constraint=null)},update:function(){const t=this.el,e=this.data;this.remove(),t.body&&e.target.body?(this.constraint=this.createConstraint(),this.system.addConstraint(this.constraint)):(t.body?e.target:t).addEventListener("body-loaded",this.update.bind(this,{}),{once:!0})},createConstraint:function(){let t;const e=this.data,i=this.el.body,s=e.target.body,r=i.getCenterOfMassTransform().inverse().op_mul(s.getWorldTransform()),o=new Ammo.btTransform;switch(o.setIdentity(),e.type){case n.LOCK:{t=new Ammo.btGeneric6DofConstraint(i,s,r,o,!0);const e=new Ammo.btVector3(0,0,0);t.setLinearLowerLimit(e),t.setLinearUpperLimit(e),t.setAngularLowerLimit(e),t.setAngularUpperLimit(e),Ammo.destroy(e);break}case n.FIXED:r.setRotation(i.getWorldTransform().getRotation()),o.setRotation(s.getWorldTransform().getRotation()),t=new Ammo.btFixedConstraint(i,s,r,o);break;case n.SPRING:{for(var a in t=new Ammo.btGeneric6DofSpringConstraint(i,s,r,o,!0),[0,1,2,3,4,5])t.enableSpring(1,!0),t.setStiffness(1,this.data.stiffness),t.setDamping(1,this.data.damping);const e=new Ammo.btVector3(-1,-1,-1),n=new Ammo.btVector3(1,1,1);t.setLinearUpperLimit(e),t.setLinearLowerLimit(n),Ammo.destroy(e),Ammo.destroy(n);break}case n.SLIDER:t=new Ammo.btSliderConstraint(i,s,r,o,!0),t.setLowerLinLimit(-1),t.setUpperLinLimit(1);break;case n.HINGE:{const n=new Ammo.btVector3(e.pivot.x,e.pivot.y,e.pivot.z),r=new Ammo.btVector3(e.targetPivot.x,e.targetPivot.y,e.targetPivot.z),o=new Ammo.btVector3(e.axis.x,e.axis.y,e.axis.z),a=new Ammo.btVector3(e.targetAxis.x,e.targetAxis.y,e.targetAxis.z);t=new Ammo.btHingeConstraint(i,s,n,r,o,a,!0),Ammo.destroy(n),Ammo.destroy(r),Ammo.destroy(o),Ammo.destroy(a);break}case n.CONE_TWIST:{const n=new Ammo.btTransform;n.setIdentity(),n.getOrigin().setValue(e.pivot.x,e.pivot.y,e.pivot.z);const r=new Ammo.btTransform;r.setIdentity(),r.getOrigin().setValue(e.targetPivot.x,e.targetPivot.y,e.targetPivot.z),t=new Ammo.btConeTwistConstraint(i,s,n,r),Ammo.destroy(n),Ammo.destroy(r);break}case n.POINT_TO_POINT:{const n=new Ammo.btVector3(e.pivot.x,e.pivot.y,e.pivot.z),r=new Ammo.btVector3(e.targetPivot.x,e.targetPivot.y,e.targetPivot.z);t=new Ammo.btPoint2PointConstraint(i,s,n,r),Ammo.destroy(n),Ammo.destroy(r);break}default:throw new Error("[constraint] Unexpected type: "+e.type)}return Ammo.destroy(r),Ammo.destroy(o),t}})},854:(t,e,i)=>{i(694);const n=i(406),s=i(279),r=s.ACTIVATION_STATE,o=s.COLLISION_FLAG,a=s.SHAPE,l=s.TYPE,c=(s.FIT,[r.ACTIVE_TAG,r.ISLAND_SLEEPING,r.WANTS_DEACTIVATION,r.DISABLE_DEACTIVATION,r.DISABLE_SIMULATION]);function h(t,e,i){return Math.abs(e.x-i.x)<t&&Math.abs(e.y-i.y)<t&&Math.abs(e.z-i.z)<t}function u(t,e,i){return Math.abs(e.x()-i.x())<t&&Math.abs(e.y()-i.y())<t&&Math.abs(e.z()-i.z())<t}let d={schema:{loadedEvent:{default:""},mass:{default:1},gravity:{type:"vec3",default:{x:0,y:-9.8,z:0}},linearDamping:{default:.01},angularDamping:{default:.01},linearSleepingThreshold:{default:1.6},angularSleepingThreshold:{default:2.5},angularFactor:{type:"vec3",default:{x:1,y:1,z:1}},activationState:{default:r.ACTIVE_TAG,oneOf:c},type:{default:"dynamic",oneOf:[l.STATIC,l.DYNAMIC,l.KINEMATIC]},emitCollisionEvents:{default:!1},disableCollision:{default:!1},collisionFilterGroup:{default:1},collisionFilterMask:{default:1},scaleAutoUpdate:{default:!0},restitution:{default:0}},init:function(){this.system=this.el.sceneEl.systems.physics,this.shapeComponents=[],""===this.data.loadedEvent?this.loadedEventFired=!0:this.el.addEventListener(this.data.loadedEvent,(()=>{this.loadedEventFired=!0}),{once:!0}),this.system.initialized&&this.loadedEventFired&&this.initBody()},initBody:function(){const t=new THREE.Vector3,e=new THREE.Quaternion;return new THREE.Box3,function(){const i=this.el,n=this.data;this.localScaling=new Ammo.btVector3;const s=this.el.object3D;var r;s.getWorldPosition(t),s.getWorldQuaternion(e),this.prevScale=new THREE.Vector3(1,1,1),this.prevNumChildShapes=0,this.msTransform=new Ammo.btTransform,this.msTransform.setIdentity(),this.rotation=new Ammo.btQuaternion(e.x,e.y,e.z,e.w),this.msTransform.getOrigin().setValue(t.x,t.y,t.z),this.msTransform.setRotation(this.rotation),this.motionState=new Ammo.btDefaultMotionState(this.msTransform),this.localInertia=new Ammo.btVector3(0,0,0),this.compoundShape=new Ammo.btCompoundShape(!0),this.rbInfo=new Ammo.btRigidBodyConstructionInfo(n.mass,this.motionState,this.compoundShape,this.localInertia),this.rbInfo.m_restitution=(r=this.data.restitution,0,1,Math.min(Math.max(r,0),1)),this.body=new Ammo.btRigidBody(this.rbInfo),this.body.setActivationState(c.indexOf(n.activationState)+1),this.body.setSleepingThresholds(n.linearSleepingThreshold,n.angularSleepingThreshold),this.body.setDamping(n.linearDamping,n.angularDamping);const o=new Ammo.btVector3(n.angularFactor.x,n.angularFactor.y,n.angularFactor.z);this.body.setAngularFactor(o),Ammo.destroy(o);const a=new Ammo.btVector3(n.gravity.x,n.gravity.y,n.gravity.z);u(.001,a,this.system.driver.physicsWorld.getGravity())||(this.body.setGravity(a),this.body.setFlags(1)),Ammo.destroy(a),this.updateCollisionFlags(),this.el.body=this.body,this.body.el=i,this.isLoaded=!0,this.el.emit("body-loaded",{body:this.el.body}),this._addToSystem()}}(),tick:function(){this.system.initialized&&!this.isLoaded&&this.loadedEventFired&&this.initBody()},_updateShapes:function(){const t=[a.HULL,a.HACD,a.VHACD];return function(){let e=!1;const i=this.el.object3D;if(this.data.scaleAutoUpdate&&this.prevScale&&!h(.001,i.scale,this.prevScale)&&(this.prevScale.copy(i.scale),e=!0,this.localScaling.setValue(this.prevScale.x,this.prevScale.y,this.prevScale.z),this.compoundShape.setLocalScaling(this.localScaling)),this.shapeComponentsChanged){this.shapeComponentsChanged=!1,e=!0;for(let t=0;t<this.shapeComponents.length;t++){const e=this.shapeComponents[t];0===e.getShapes().length&&this._createCollisionShape(e);const i=e.getShapes();for(let t=0;t<i.length;t++){const e=i[t];e.added||(this.compoundShape.addChildShape(e.localTransform,e),e.added=!0)}}this.data.type===l.DYNAMIC&&this.updateMass(),this.system.driver.updateBody(this.body)}if(this.system.debug&&(e||!this.polyHedralFeaturesInitialized)){for(let e=0;e<this.shapeComponents.length;e++){const i=this.shapeComponents[e].getShapes();for(let e=0;e<i.length;e++){const n=i[e];-1!==t.indexOf(n.type)&&n.initializePolyhedralFeatures(0)}}this.polyHedralFeaturesInitialized=!0}}}(),_createCollisionShape:function(t){const e=t.data,i=n.createCollisionShapes(t.getMesh(),e);t.addShapes(i)},play:function(){this.isLoaded&&this._addToSystem()},_addToSystem:function(){this.addedToSystem||(this.system.addBody(this.body,this.data.collisionFilterGroup,this.data.collisionFilterMask),this.data.emitCollisionEvents&&this.system.driver.addEventListener(this.body),this.system.addComponent(this),this.addedToSystem=!0)},pause:function(){this.addedToSystem&&(this.system.removeComponent(this),this.system.removeBody(this.body),this.addedToSystem=!1)},update:function(t){if(this.isLoaded){if(!this.hasUpdated)return void(this.hasUpdated=!0);const e=this.data;if(t.type===e.type&&t.disableCollision===e.disableCollision||this.updateCollisionFlags(),t.activationState!==e.activationState&&(this.body.forceActivationState(c.indexOf(e.activationState)+1),e.activationState===r.ACTIVE_TAG&&this.body.activate(!0)),t.collisionFilterGroup!==e.collisionFilterGroup||t.collisionFilterMask!==e.collisionFilterMask){const t=this.body.getBroadphaseProxy();t.set_m_collisionFilterGroup(e.collisionFilterGroup),t.set_m_collisionFilterMask(e.collisionFilterMask),this.system.driver.broadphase.getOverlappingPairCache().removeOverlappingPairsContainingProxy(t,this.system.driver.dispatcher)}if(t.linearDamping==e.linearDamping&&t.angularDamping==e.angularDamping||this.body.setDamping(e.linearDamping,e.angularDamping),!h(.001,t.gravity,e.gravity)){const t=new Ammo.btVector3(e.gravity.x,e.gravity.y,e.gravity.z);u(.001,t,this.system.driver.physicsWorld.getGravity())?this.body.setFlags(0):this.body.setFlags(1),this.body.setGravity(t),Ammo.destroy(t)}if(t.linearSleepingThreshold==e.linearSleepingThreshold&&t.angularSleepingThreshold==e.angularSleepingThreshold||this.body.setSleepingThresholds(e.linearSleepingThreshold,e.angularSleepingThreshold),!h(.001,t.angularFactor,e.angularFactor)){const t=new Ammo.btVector3(e.angularFactor.x,e.angularFactor.y,e.angularFactor.z);this.body.setAngularFactor(t),Ammo.destroy(t)}t.restitution!=e.restitution&&console.warn("ammo-body restitution cannot be updated from its initial value.")}},remove:function(){this.triMesh&&Ammo.destroy(this.triMesh),this.localScaling&&Ammo.destroy(this.localScaling),this.compoundShape&&Ammo.destroy(this.compoundShape),this.body&&(Ammo.destroy(this.body),delete this.body),Ammo.destroy(this.rbInfo),Ammo.destroy(this.msTransform),Ammo.destroy(this.motionState),Ammo.destroy(this.localInertia),Ammo.destroy(this.rotation)},beforeStep:function(){this._updateShapes(),this.data.type===l.KINEMATIC&&this.syncToPhysics()},step:function(){this.data.type===l.DYNAMIC&&this.syncFromPhysics()},syncToPhysics:function(){const t=new THREE.Quaternion,e=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Vector3;return function(){const s=this.el,r=s.parentEl;if(!this.body)return;this.motionState.getWorldTransform(this.msTransform),r.isScene?(e.copy(s.object3D.position),t.copy(s.object3D.quaternion)):(s.object3D.getWorldPosition(e),s.object3D.getWorldQuaternion(t));const o=this.msTransform.getOrigin();n.set(o.x(),o.y(),o.z());const a=this.msTransform.getRotation();i.set(a.x(),a.y(),a.z(),a.w()),h(.001,e,n)&&function(t,e,i){return Math.abs(e.x-i.x)<t&&Math.abs(e.y-i.y)<t&&Math.abs(e.z-i.z)<t&&Math.abs(e.w-i.w)<t||Math.abs(e.x+i.x)<t&&Math.abs(e.y+i.y)<t&&Math.abs(e.z+i.z)<t&&Math.abs(e.w+i.w)<t}(.001,t,i)||(this.body.isActive()||this.body.activate(!0),this.msTransform.getOrigin().setValue(e.x,e.y,e.z),this.rotation.setValue(t.x,t.y,t.z,t.w),this.msTransform.setRotation(this.rotation),this.motionState.setWorldTransform(this.msTransform),this.data.type===l.STATIC&&this.body.setCenterOfMassTransform(this.msTransform))}}(),syncFromPhysics:function(){const t=new THREE.Vector3,e=new THREE.Quaternion,i=new THREE.Quaternion;return function(){this.motionState.getWorldTransform(this.msTransform);const n=this.msTransform.getOrigin(),s=this.msTransform.getRotation(),r=this.el,o=this.body,a=r.object3D.parent.el?r.object3D.parent.el:r.parentEl;o&&a&&(a.isScene?(r.object3D.position.set(n.x(),n.y(),n.z()),r.object3D.quaternion.set(s.x(),s.y(),s.z(),s.w())):(e.set(s.x(),s.y(),s.z(),s.w()),a.object3D.getWorldQuaternion(i),e.multiply(i.invert()),r.object3D.quaternion.copy(e),t.set(n.x(),n.y(),n.z()),a.object3D.worldToLocal(t),r.object3D.position.copy(t)))}}(),addShapeComponent:function(t){t.data.type!==a.MESH||this.data.type===l.STATIC?(this.shapeComponents.push(t),this.shapeComponentsChanged=!0):console.warn("non-static mesh colliders not supported")},removeShapeComponent:function(t){const e=this.shapeComponents.indexOf(t);if(this.compoundShape&&-1!==e&&this.body){const n=t.getShapes();for(var i=0;i<n.length;i++)this.compoundShape.removeChildShape(n[i]);this.shapeComponentsChanged=!0,this.shapeComponents.splice(e,1)}},updateMass:function(){const t=this.body.getCollisionShape(),e=this.data.type===l.DYNAMIC?this.data.mass:0;t.calculateLocalInertia(e,this.localInertia),this.body.setMassProps(e,this.localInertia),this.body.updateInertiaTensor()},updateCollisionFlags:function(){let t=this.data.disableCollision?4:0;switch(this.data.type){case l.STATIC:t|=o.STATIC_OBJECT;break;case l.KINEMATIC:t|=o.KINEMATIC_OBJECT;break;default:this.body.applyGravity()}this.body.setCollisionFlags(t),this.updateMass(),this.system.driver.updateBody(this.body)},getVelocity:function(){return this.body.getLinearVelocity()}};t.exports.definition=d,t.exports.Component=AFRAME.registerComponent("ammo-body",d)},344:(t,e,i)=>{var n=i(687);const{threeToCannon:s,ShapeType:r}=i(264);new THREE.Quaternion,i(503);var o,a,l={dependencies:["velocity"],schema:{mass:{default:5,if:{type:"dynamic"}},linearDamping:{default:.01,if:{type:"dynamic"}},angularDamping:{default:.01,if:{type:"dynamic"}},shape:{default:"auto",oneOf:["auto","box","cylinder","sphere","hull","mesh","none"]},cylinderAxis:{default:"y",oneOf:["x","y","z"]},sphereRadius:{default:NaN},type:{default:"dynamic",oneOf:["static","dynamic"]}},init:function(){this.system=this.el.sceneEl.systems.physics,this.el.sceneEl.hasLoaded?this.initBody():this.el.sceneEl.addEventListener("loaded",this.initBody.bind(this))},initBody:function(){var t=this.el,e=this.data,i=this.el.object3D,o=i.position,a=i.quaternion;if(this.body=new n.Body({mass:"static"===e.type?0:e.mass||0,material:this.system.getMaterial("defaultMaterial"),position:new n.Vec3(o.x,o.y,o.z),quaternion:new n.Quaternion(a.x,a.y,a.z,a.w),linearDamping:e.linearDamping,angularDamping:e.angularDamping,type:"dynamic"===e.type?n.Body.DYNAMIC:n.Body.STATIC}),this.el.object3D.updateMatrixWorld(!0),"none"!==e.shape){var l="auto"===e.shape?void 0:AFRAME.utils.extend({},this.data,{type:r[e.shape.toUpperCase()]}),{shape:c,offset:h,orientation:u}=function(t,e){return s(t,e)}(this.el.object3D,l);if(!c)return void t.addEventListener("object3dset",this.initBody.bind(this));this.body.addShape(c,h,u),this.system.debug&&(this.shouldUpdateWireframe=!0),this.isLoaded=!0}this.el.body=this.body,this.body.el=t,this.isPlaying&&this._play(),this.isLoaded&&this.el.emit("body-loaded",{body:this.el.body})},addShape:function(t,e,i){"none"===this.data.shape?t?this.body?(this.body.addShape(t,e,i),this.system.debug&&(this.shouldUpdateWireframe=!0),this.shouldUpdateBody=!0):console.warn("shape cannot be added before body is loaded"):console.warn("shape cannot be null"):console.warn("shape can only be added if shape property is none")},tick:function(){this.shouldUpdateBody&&(this.isLoaded=!0,this._play(),this.el.emit("body-loaded",{body:this.el.body}),this.shouldUpdateBody=!1),this.shouldUpdateWireframe&&(this.createWireframe(this.body),this.shouldUpdateWireframe=!1)},play:function(){this.isLoaded&&this._play()},_play:function(){this.syncToPhysics(),this.system.addComponent(this),this.system.addBody(this.body),this.wireframe&&this.el.sceneEl.object3D.add(this.wireframe)},pause:function(){this.isLoaded&&this._pause()},_pause:function(){this.system.removeComponent(this),this.body&&this.system.removeBody(this.body),this.wireframe&&this.el.sceneEl.object3D.remove(this.wireframe)},update:function(t){if(this.body){var e=this.data;null!=t.type&&e.type!=t.type&&(this.body.type="dynamic"===e.type?n.Body.DYNAMIC:n.Body.STATIC),this.body.mass=e.mass||0,"dynamic"===e.type&&(this.body.linearDamping=e.linearDamping,this.body.angularDamping=e.angularDamping),e.mass!==t.mass&&this.body.updateMassProperties(),this.body.updateProperties&&this.body.updateProperties()}},remove:function(){this.body&&(delete this.body.el,delete this.body),delete this.el.body,delete this.wireframe},beforeStep:function(){0===this.body.mass&&this.syncToPhysics()},step:function(){0!==this.body.mass&&this.syncFromPhysics()},createWireframe:function(t){var e,i;this.wireframe&&(this.el.sceneEl.object3D.remove(this.wireframe),delete this.wireframe),this.wireframe=new THREE.Object3D,this.el.sceneEl.object3D.add(this.wireframe);for(var s=new THREE.Quaternion,r=0;r<this.body.shapes.length;r++){e=this.body.shapeOffsets[r],s.copy(this.body.shapeOrientations[r]),i=n.shape2mesh(this.body).children[r];var o=new THREE.LineSegments(new THREE.EdgesGeometry(i.geometry),new THREE.LineBasicMaterial({color:16711680}));e&&o.position.copy(e),s&&o.quaternion.copy(s),this.wireframe.add(o)}this.syncWireframe()},syncWireframe:function(){var t,e=this.wireframe;this.wireframe&&(e.quaternion.copy(this.body.quaternion),e.orientation&&e.quaternion.multiply(e.orientation),e.position.copy(this.body.position),e.offset&&(t=e.offset.clone().applyQuaternion(e.quaternion),e.position.add(t)),e.updateMatrix())},syncToPhysics:(o=new THREE.Quaternion,a=new THREE.Vector3,function(){var t=this.el,e=t.parentEl,i=this.body;i&&(t.components.velocity&&i.velocity.copy(t.getAttribute("velocity")),e.isScene?(i.quaternion.copy(t.object3D.quaternion),i.position.copy(t.object3D.position)):(t.object3D.getWorldQuaternion(o),i.quaternion.copy(o),t.object3D.getWorldPosition(a),i.position.copy(a)),this.body.updateProperties&&this.body.updateProperties(),this.wireframe&&this.syncWireframe())}),syncFromPhysics:function(){var t=new THREE.Vector3,e=new THREE.Quaternion,i=new THREE.Quaternion;return function(){var n=this.el,s=n.parentEl,r=this.body;r&&s&&(s.isScene?(n.object3D.quaternion.copy(r.quaternion),n.object3D.position.copy(r.position)):(e.copy(r.quaternion),s.object3D.getWorldQuaternion(i),e.premultiply(i.invert()),n.object3D.quaternion.copy(e),t.copy(r.position),s.object3D.worldToLocal(t),n.object3D.position.copy(t)),this.wireframe&&this.syncWireframe())}}()};t.exports.definition=l,t.exports.Component=AFRAME.registerComponent("body",l)},775:(t,e,i)=>{var n=i(344),s=AFRAME.utils.extend({},n.definition);t.exports=AFRAME.registerComponent("dynamic-body",s)},838:(t,e,i)=>{var n=i(344),s=AFRAME.utils.extend({},n.definition);s.schema=AFRAME.utils.extend({},n.definition.schema,{type:{default:"static",oneOf:["static","dynamic"]},mass:{default:0}}),t.exports=AFRAME.registerComponent("static-body",s)},696:(t,e,i)=>{var n=i(687);t.exports=AFRAME.registerComponent("constraint",{multiple:!0,schema:{type:{default:"lock",oneOf:["coneTwist","distance","hinge","lock","pointToPoint"]},target:{type:"selector"},maxForce:{default:1e6,min:0},collideConnected:{default:!0},wakeUpBodies:{default:!0},distance:{default:0,min:0},pivot:{type:"vec3"},targetPivot:{type:"vec3"},axis:{type:"vec3",default:{x:0,y:0,z:1}},targetAxis:{type:"vec3",default:{x:0,y:0,z:1}}},init:function(){this.system=this.el.sceneEl.systems.physics,this.constraint=null},remove:function(){this.constraint&&(this.system.removeConstraint(this.constraint),this.constraint=null)},update:function(){var t=this.el,e=this.data;this.remove(),t.body&&e.target.body?(this.constraint=this.createConstraint(),this.system.addConstraint(this.constraint)):(t.body?e.target:t).addEventListener("body-loaded",this.update.bind(this,{}))},createConstraint:function(){var t,e=this.data,i=new n.Vec3(e.pivot.x,e.pivot.y,e.pivot.z),s=new n.Vec3(e.targetPivot.x,e.targetPivot.y,e.targetPivot.z),r=new n.Vec3(e.axis.x,e.axis.y,e.axis.z),o=new n.Vec3(e.targetAxis.x,e.targetAxis.y,e.targetAxis.z);switch(e.type){case"lock":(t=new n.LockConstraint(this.el.body,e.target.body,{maxForce:e.maxForce})).type="LockConstraint";break;case"distance":(t=new n.DistanceConstraint(this.el.body,e.target.body,e.distance,e.maxForce)).type="DistanceConstraint";break;case"hinge":(t=new n.HingeConstraint(this.el.body,e.target.body,{pivotA:i,pivotB:s,axisA:r,axisB:o,maxForce:e.maxForce})).type="HingeConstraint";break;case"coneTwist":(t=new n.ConeTwistConstraint(this.el.body,e.target.body,{pivotA:i,pivotB:s,axisA:r,axisB:o,maxForce:e.maxForce})).type="ConeTwistConstraint";break;case"pointToPoint":(t=new n.PointToPointConstraint(this.el.body,i,e.target.body,s,e.maxForce)).type="PointToPointConstraint";break;default:throw new Error("[constraint] Unexpected type: "+e.type)}return t.collideConnected=e.collideConnected,t}})},421:(t,e,i)=>{t.exports={velocity:i(496),registerAll:function(t){this._registered||((t=t||window.AFRAME).components.velocity||t.registerComponent("velocity",this.velocity),this._registered=!0)}}},496:t=>{t.exports=AFRAME.registerComponent("velocity",{schema:{type:"vec3"},init:function(){this.system=this.el.sceneEl.systems.physics,this.system&&this.system.addComponent(this)},remove:function(){this.system&&this.system.removeComponent(this)},tick:function(t,e){e&&(this.system||this.afterStep(t,e))},afterStep:function(t,e){if(e){var i=this.el.sceneEl.systems.physics||{data:{maxInterval:1/60}},n=this.el.getAttribute("velocity")||{x:0,y:0,z:0},s=this.el.object3D.position||{x:0,y:0,z:0};e=Math.min(e,1e3*i.data.maxInterval),this.el.object3D.position.set(s.x+n.x*e/1e3,s.y+n.y*e/1e3,s.z+n.z*e/1e3)}}})},938:(t,e,i)=>{i(406);const n=i(279),s=n.SHAPE,r=n.FIT;var o={schema:{type:{default:s.HULL,oneOf:[s.BOX,s.CYLINDER,s.SPHERE,s.CAPSULE,s.CONE,s.HULL,s.HACD,s.VHACD,s.MESH,s.HEIGHTFIELD]},fit:{default:r.ALL,oneOf:[r.ALL,r.MANUAL]},halfExtents:{type:"vec3",default:{x:1,y:1,z:1}},minHalfExtent:{default:0},maxHalfExtent:{default:Number.POSITIVE_INFINITY},sphereRadius:{default:NaN},cylinderAxis:{default:"y",oneOf:["x","y","z"]},margin:{default:.01},offset:{type:"vec3",default:{x:0,y:0,z:0}},orientation:{type:"vec4",default:{x:0,y:0,z:0,w:1}},heightfieldData:{default:[]},heightfieldDistance:{default:1},includeInvisible:{default:!1}},multiple:!0,init:function(){this.system=this.el.sceneEl.systems.physics,this.collisionShapes=[];let t=this.el;for(this.body=t.components["ammo-body"]||null;!this.body&&t.parentNode!=this.el.sceneEl;)t=t.parentNode,t.components["ammo-body"]&&(this.body=t.components["ammo-body"]);if(this.body){if(this.data.fit!==r.MANUAL){if(!this.el.object3DMap.mesh)return void console.error("Cannot use FIT.ALL without object3DMap.mesh");this.mesh=this.el.object3DMap.mesh}this.body.addShapeComponent(this)}else console.warn("body not found")},getMesh:function(){return this.mesh||null},addShapes:function(t){this.collisionShapes=t},getShapes:function(){return this.collisionShapes},remove:function(){if(this.body)for(this.body.removeShapeComponent(this);this.collisionShapes.length>0;){const t=this.collisionShapes.pop();t.destroy(),Ammo.destroy(t.localTransform)}}};t.exports.definition=o,t.exports.Component=AFRAME.registerComponent("ammo-shape",o)},404:(t,e,i)=>{var n=i(687),s={schema:{shape:{default:"box",oneOf:["box","sphere","cylinder"]},offset:{type:"vec3",default:{x:0,y:0,z:0}},orientation:{type:"vec4",default:{x:0,y:0,z:0,w:1}},radius:{type:"number",default:1,if:{shape:["sphere"]}},halfExtents:{type:"vec3",default:{x:.5,y:.5,z:.5},if:{shape:["box"]}},radiusTop:{type:"number",default:1,if:{shape:["cylinder"]}},radiusBottom:{type:"number",default:1,if:{shape:["cylinder"]}},height:{type:"number",default:1,if:{shape:["cylinder"]}},numSegments:{type:"int",default:8,if:{shape:["cylinder"]}}},multiple:!0,init:function(){this.el.sceneEl.hasLoaded?this.initShape():this.el.sceneEl.addEventListener("loaded",this.initShape.bind(this))},initShape:function(){this.bodyEl=this.el;for(var t=this._findType(this.bodyEl),e=this.data;!t&&this.bodyEl.parentNode!=this.el.sceneEl;)this.bodyEl=this.bodyEl.parentNode,t=this._findType(this.bodyEl);if(t){var i,s,r,o=new THREE.Vector3;switch(this.bodyEl.object3D.getWorldScale(o),e.hasOwnProperty("offset")&&(s=new n.Vec3(e.offset.x*o.x,e.offset.y*o.y,e.offset.z*o.z)),e.hasOwnProperty("orientation")&&(r=new n.Quaternion).copy(e.orientation),e.shape){case"sphere":i=new n.Sphere(e.radius*o.x);break;case"box":var a=new n.Vec3(e.halfExtents.x*o.x,e.halfExtents.y*o.y,e.halfExtents.z*o.z);i=new n.Box(a);break;case"cylinder":i=new n.Cylinder(e.radiusTop*o.x,e.radiusBottom*o.x,e.height*o.y,e.numSegments);var l=new n.Quaternion;l.setFromEuler(90*THREE.Math.DEG2RAD,0,0,"XYZ").normalize(),r.mult(l,r);break;default:return void console.warn(e.shape+" shape not supported")}this.bodyEl.body?this.bodyEl.components[t].addShape(i,s,r):this.bodyEl.addEventListener("body-loaded",(function(){this.bodyEl.components[t].addShape(i,s,r)}),{once:!0})}else console.warn("body not found")},_findType:function(t){return t.hasAttribute("body")?"body":t.hasAttribute("dynamic-body")?"dynamic-body":t.hasAttribute("static-body")?"static-body":null},remove:function(){this.bodyEl.parentNode&&console.warn("removing shape component not currently supported")}};t.exports.definition=s,t.exports.Component=AFRAME.registerComponent("shape",s)},890:(t,e,i)=>{var n=i(687);t.exports=AFRAME.registerComponent("spring",{multiple:!0,schema:{target:{type:"selector"},restLength:{default:1,min:0},stiffness:{default:100,min:0},damping:{default:1,min:0},localAnchorA:{type:"vec3",default:{x:0,y:0,z:0}},localAnchorB:{type:"vec3",default:{x:0,y:0,z:0}}},init:function(){this.system=this.el.sceneEl.systems.physics,this.system.addComponent(this),this.isActive=!0,this.spring=null},update:function(t){var e=this.el,i=this.data;i.target?e.body&&i.target.body?(this.createSpring(),this.updateSpring(t)):(e.body?i.target:e).addEventListener("body-loaded",this.update.bind(this,{})):console.warn("Spring: invalid target specified.")},updateSpring:function(t){if(this.spring){var e=this.data,i=this.spring;Object.keys(e).forEach((function(n){if(e[n]!==t[n]){if("target"===n)return void(i.bodyB=e.target.body);i[n]=e[n]}}))}else console.warn("Spring: Component attempted to change spring before its created. No changes made.")},createSpring:function(){this.spring||(this.spring=new n.Spring(this.el.body))},step:function(t,e){return this.spring&&this.isActive?this.spring.applyForce():void 0},play:function(){this.isActive=!0},pause:function(){this.isActive=!1},remove:function(){this.spring&&delete this.spring,this.spring=null}})},279:t=>{t.exports={GRAVITY:-9.8,MAX_INTERVAL:4/60,ITERATIONS:10,CONTACT_MATERIAL:{friction:.01,restitution:.3,contactEquationStiffness:1e8,contactEquationRelaxation:3,frictionEquationStiffness:1e8,frictionEquationRegularization:3},ACTIVATION_STATE:{ACTIVE_TAG:"active",ISLAND_SLEEPING:"islandSleeping",WANTS_DEACTIVATION:"wantsDeactivation",DISABLE_DEACTIVATION:"disableDeactivation",DISABLE_SIMULATION:"disableSimulation"},COLLISION_FLAG:{STATIC_OBJECT:1,KINEMATIC_OBJECT:2,NO_CONTACT_RESPONSE:4,CUSTOM_MATERIAL_CALLBACK:8,CHARACTER_OBJECT:16,DISABLE_VISUALIZE_OBJECT:32,DISABLE_SPU_COLLISION_PROCESSING:64},TYPE:{STATIC:"static",DYNAMIC:"dynamic",KINEMATIC:"kinematic"},SHAPE:{BOX:"box",CYLINDER:"cylinder",SPHERE:"sphere",CAPSULE:"capsule",CONE:"cone",HULL:"hull",HACD:"hacd",VHACD:"vhacd",MESH:"mesh",HEIGHTFIELD:"heightfield"},FIT:{ALL:"all",MANUAL:"manual"},CONSTRAINT:{LOCK:"lock",FIXED:"fixed",SPRING:"spring",SLIDER:"slider",HINGE:"hinge",CONE_TWIST:"coneTwist",POINT_TO_POINT:"pointToPoint"}}},589:(t,e,i)=>{const n=i(766);function s(){this.collisionConfiguration=null,this.dispatcher=null,this.broadphase=null,this.solver=null,this.physicsWorld=null,this.debugDrawer=null,this.els=new Map,this.eventListeners=[],this.collisions=new Map,this.collisionKeys=[],this.currentCollisions=new Map}"undefined"!=typeof window&&(window.AmmoModule=window.Ammo,window.Ammo=null),s.prototype=new n,s.prototype.constructor=s,t.exports=s,s.prototype.init=function(t){return new Promise((e=>{AmmoModule().then((i=>{Ammo=i,this.epsilon=t.epsilon||1e-5,this.debugDrawMode=t.debugDrawMode||THREE.AmmoDebugConstants.NoDebug,this.maxSubSteps=t.maxSubSteps||4,this.fixedTimeStep=t.fixedTimeStep||1/60,this.collisionConfiguration=new Ammo.btDefaultCollisionConfiguration,this.dispatcher=new Ammo.btCollisionDispatcher(this.collisionConfiguration),this.broadphase=new Ammo.btDbvtBroadphase,this.solver=new Ammo.btSequentialImpulseConstraintSolver,this.physicsWorld=new Ammo.btDiscreteDynamicsWorld(this.dispatcher,this.broadphase,this.solver,this.collisionConfiguration),this.physicsWorld.setForceUpdateAllAabbs(!1),this.physicsWorld.setGravity(new Ammo.btVector3(0,t.hasOwnProperty("gravity")?t.gravity:-9.8,0)),this.physicsWorld.getSolverInfo().set_m_numIterations(t.solverIterations),e()}))}))},s.prototype.addBody=function(t,e,i){this.physicsWorld.addRigidBody(t,e,i),this.els.set(Ammo.getPointer(t),t.el)},s.prototype.removeBody=function(t){this.physicsWorld.removeRigidBody(t),this.removeEventListener(t);const e=Ammo.getPointer(t);this.els.delete(e),this.collisions.delete(e),this.collisionKeys.splice(this.collisionKeys.indexOf(e),1),this.currentCollisions.delete(e)},s.prototype.updateBody=function(t){this.els.has(Ammo.getPointer(t))&&this.physicsWorld.updateSingleAabb(t)},s.prototype.step=function(t){this.physicsWorld.stepSimulation(t,this.maxSubSteps,this.fixedTimeStep);const e=this.dispatcher.getNumManifolds();for(let t=0;t<e;t++){const e=this.dispatcher.getManifoldByIndexInternal(t),i=e.getNumContacts(),n=Ammo.getPointer(e.getBody0()),s=Ammo.getPointer(e.getBody1());let r=!1;for(let t=0;t<i;t++)if(e.getContactPoint(t).getDistance()<=this.epsilon){r=!0;break}r&&(this.collisions.has(n)||(this.collisions.set(n,[]),this.collisionKeys.push(n)),-1===this.collisions.get(n).indexOf(s)&&(this.collisions.get(n).push(s),-1!==this.eventListeners.indexOf(n)&&this.els.get(n).emit("collidestart",{targetEl:this.els.get(s)}),-1!==this.eventListeners.indexOf(s)&&this.els.get(s).emit("collidestart",{targetEl:this.els.get(n)})),this.currentCollisions.has(n)||this.currentCollisions.set(n,new Set),this.currentCollisions.get(n).add(s))}for(let t=0;t<this.collisionKeys.length;t++){const e=this.collisionKeys[t],i=this.collisions.get(e);for(let t=i.length-1;t>=0;t--){const n=i[t];this.currentCollisions.get(e).has(n)||(-1!==this.eventListeners.indexOf(e)&&this.els.get(e).emit("collideend",{targetEl:this.els.get(n)}),-1!==this.eventListeners.indexOf(n)&&this.els.get(n).emit("collideend",{targetEl:this.els.get(e)}),i.splice(t,1))}this.currentCollisions.get(e).clear()}this.debugDrawer&&this.debugDrawer.update()},s.prototype.addConstraint=function(t){this.physicsWorld.addConstraint(t,!1)},s.prototype.removeConstraint=function(t){this.physicsWorld.removeConstraint(t)},s.prototype.addEventListener=function(t){this.eventListeners.push(Ammo.getPointer(t))},s.prototype.removeEventListener=function(t){const e=Ammo.getPointer(t);-1!==this.eventListeners.indexOf(e)&&this.eventListeners.splice(this.eventListeners.indexOf(e),1)},s.prototype.destroy=function(){Ammo.destroy(this.collisionConfiguration),Ammo.destroy(this.dispatcher),Ammo.destroy(this.broadphase),Ammo.destroy(this.solver),Ammo.destroy(this.physicsWorld),Ammo.destroy(this.debugDrawer)},s.prototype.getDebugDrawer=function(t,e){return this.debugDrawer||((e=e||{}).debugDrawMode=e.debugDrawMode||this.debugDrawMode,this.debugDrawer=new THREE.AmmoDebugDrawer(t,this.physicsWorld,e)),this.debugDrawer}},766:t=>{function e(){}function i(){throw new Error("Method not implemented.")}t.exports=e,e.prototype.init=i,e.prototype.step=i,e.prototype.destroy=i,e.prototype.addBody=i,e.prototype.removeBody=i,e.prototype.applyBodyMethod=i,e.prototype.updateBodyProperties=i,e.prototype.addMaterial=i,e.prototype.addContactMaterial=i,e.prototype.addConstraint=i,e.prototype.removeConstraint=i,e.prototype.getContacts=i},437:t=>{t.exports={INIT:"init",STEP:"step",ADD_BODY:"add-body",REMOVE_BODY:"remove-body",APPLY_BODY_METHOD:"apply-body-method",UPDATE_BODY_PROPERTIES:"update-body-properties",ADD_MATERIAL:"add-material",ADD_CONTACT_MATERIAL:"add-contact-material",ADD_CONSTRAINT:"add-constraint",REMOVE_CONSTRAINT:"remove-constraint",COLLIDE:"collide"}},369:(t,e,i)=>{var n=i(687),s=i(766);function r(){this.world=null,this.materials={},this.contactMaterial=null}r.prototype=new s,r.prototype.constructor=r,t.exports=r,r.prototype.init=function(t){var e=new n.World;e.quatNormalizeSkip=t.quatNormalizeSkip,e.quatNormalizeFast=t.quatNormalizeFast,e.solver.iterations=t.solverIterations,e.gravity.set(0,t.gravity,0),e.broadphase=new n.NaiveBroadphase,this.world=e},r.prototype.step=function(t){this.world.step(t)},r.prototype.destroy=function(){delete this.world,delete this.contactMaterial,this.materials={}},r.prototype.addBody=function(t){this.world.addBody(t)},r.prototype.removeBody=function(t){this.world.removeBody(t)},r.prototype.applyBodyMethod=function(t,e,i){t["__"+e].apply(t,i)},r.prototype.updateBodyProperties=function(){},r.prototype.getMaterial=function(t){return this.materials[t]},r.prototype.addMaterial=function(t){this.materials[t.name]=new n.Material(t),this.materials[t.name].name=t.name},r.prototype.addContactMaterial=function(t,e,i){var s=this.materials[t],r=this.materials[e];this.contactMaterial=new n.ContactMaterial(s,r,i),this.world.addContactMaterial(this.contactMaterial)},r.prototype.addConstraint=function(t){t.type||(t instanceof n.LockConstraint?t.type="LockConstraint":t instanceof n.DistanceConstraint?t.type="DistanceConstraint":t instanceof n.HingeConstraint?t.type="HingeConstraint":t instanceof n.ConeTwistConstraint?t.type="ConeTwistConstraint":t instanceof n.PointToPointConstraint&&(t.type="PointToPointConstraint")),this.world.addConstraint(t)},r.prototype.removeConstraint=function(t){this.world.removeConstraint(t)},r.prototype.getContacts=function(){return this.world.contacts}},444:(t,e,i)=>{var n=i(766);function s(){throw new Error("[NetworkDriver] Driver not implemented.")}s.prototype=new n,s.prototype.constructor=s,t.exports=s},751:t=>{function e(){this.listeners=[]}t.exports=function(t){var i=new e,n=new e;return i.setTarget(n),n.setTarget(i),t(i),n},e.prototype.setTarget=function(t){this.target=t},e.prototype.addEventListener=function(t,e){this.listeners.push(e)},e.prototype.dispatchEvent=function(t,e){for(var i=0;i<this.listeners.length;i++)this.listeners[i](e)},e.prototype.postMessage=function(t){this.target.dispatchEvent("message",{data:t})}},220:(t,e,i)=>{var n=i(122),s=i(751),r=i(766),o=i(437),a=i(705),l=i(459),c=l.ID;function h(t){this.fps=t.fps,this.engine=t.engine,this.interpolate=t.interpolate,this.interpBufferSize=t.interpolationBufferSize,this.debug=t.debug,this.bodies={},this.contacts=[],this.frameDelay=1e3*this.interpBufferSize/this.fps,this.frameBuffer=[],this.worker=this.debug?s(a):n(a),this.worker.addEventListener("message",this._onMessage.bind(this))}h.prototype=new r,h.prototype.constructor=h,t.exports=h,h.prototype.init=function(t){this.worker.postMessage({type:o.INIT,worldConfig:t,fps:this.fps,engine:this.engine})},h.prototype.step=function(){if(this.interpolate){for(var t=this.frameBuffer[0],e=this.frameBuffer[1],i=performance.now();t&&e&&i-t.timestamp>this.frameDelay;)this.frameBuffer.shift(),t=this.frameBuffer[0],e=this.frameBuffer[1];if(t&&e){var n=(i-t.timestamp)/this.frameDelay;for(var s in n=(n-(1-1/this.interpBufferSize))*this.interpBufferSize,t.bodies)t.bodies.hasOwnProperty(s)&&e.bodies.hasOwnProperty(s)&&l.deserializeInterpBodyUpdate(t.bodies[s],e.bodies[s],this.bodies[s],n)}}},h.prototype.destroy=function(){this.worker.terminate(),delete this.worker},h.prototype._onMessage=function(t){if(t.data.type===o.STEP){var e=t.data.bodies;if(this.contacts=t.data.contacts,this.interpolate)this.frameBuffer.push({timestamp:performance.now(),bodies:e});else for(var i in e)e.hasOwnProperty(i)&&l.deserializeBodyUpdate(e[i],this.bodies[i])}else{if(t.data.type!==o.COLLIDE)throw new Error("[WorkerDriver] Unexpected message type.");var n=this.bodies[t.data.bodyID],s=this.bodies[t.data.targetID],r=l.deserializeContact(t.data.contact,this.bodies);if(!n._listeners||!n._listeners.collide)return;for(var a=0;a<n._listeners.collide.length;a++)n._listeners.collide[a]({target:s,body:n,contact:r})}},h.prototype.addBody=function(t){l.assignID("body",t),this.bodies[t[c]]=t,this.worker.postMessage({type:o.ADD_BODY,body:l.serializeBody(t)})},h.prototype.removeBody=function(t){this.worker.postMessage({type:o.REMOVE_BODY,bodyID:t[c]}),delete this.bodies[t[c]]},h.prototype.applyBodyMethod=function(t,e,i){switch(e){case"applyForce":case"applyImpulse":this.worker.postMessage({type:o.APPLY_BODY_METHOD,bodyID:t[c],methodName:e,args:[i[0].toArray(),i[1].toArray()]});break;default:throw new Error("Unexpected methodName: %s",e)}},h.prototype.updateBodyProperties=function(t){this.worker.postMessage({type:o.UPDATE_BODY_PROPERTIES,body:l.serializeBody(t)})},h.prototype.getMaterial=function(t){},h.prototype.addMaterial=function(t){this.worker.postMessage({type:o.ADD_MATERIAL,materialConfig:t})},h.prototype.addContactMaterial=function(t,e,i){this.worker.postMessage({type:o.ADD_CONTACT_MATERIAL,materialName1:t,materialName2:e,contactMaterialConfig:i})},h.prototype.addConstraint=function(t){t.type||(t instanceof CANNON.LockConstraint?t.type="LockConstraint":t instanceof CANNON.DistanceConstraint?t.type="DistanceConstraint":t instanceof CANNON.HingeConstraint?t.type="HingeConstraint":t instanceof CANNON.ConeTwistConstraint?t.type="ConeTwistConstraint":t instanceof CANNON.PointToPointConstraint&&(t.type="PointToPointConstraint")),l.assignID("constraint",t),this.worker.postMessage({type:o.ADD_CONSTRAINT,constraint:l.serializeConstraint(t)})},h.prototype.removeConstraint=function(t){this.worker.postMessage({type:o.REMOVE_CONSTRAINT,constraintID:t[c]})},h.prototype.getContacts=function(){var t=this.bodies;return this.contacts.map((function(e){return l.deserializeContact(e,t)}))}},705:(t,e,i)=>{var n=i(437),s=i(369),r=i(589),o=i(459),a=o.ID;t.exports=function(t){var e,i=null,l={},c={};function h(){i.step(e);var s={};Object.keys(l).forEach((function(t){s[t]=o.serializeBody(l[t])})),t.postMessage({type:n.STEP,bodies:s,contacts:i.getContacts().map(o.serializeContact)})}t.addEventListener("message",(function(u){var d=u.data;switch(d.type){case n.INIT:(i="cannon"===d.engine?new s:new r).init(d.worldConfig),e=1/d.fps,setInterval(h,1e3/d.fps);break;case n.ADD_BODY:var p=o.deserializeBody(d.body);p.material=i.getMaterial("defaultMaterial"),l[p[a]]=p,p.addEventListener("collide",(function(e){var i={type:n.COLLIDE,bodyID:e.target[a],targetID:e.body[a],contact:o.serializeContact(e.contact)};t.postMessage(i)})),i.addBody(p);break;case n.REMOVE_BODY:i.removeBody(l[d.bodyID]),delete l[d.bodyID];break;case n.APPLY_BODY_METHOD:l[d.bodyID][d.methodName](o.deserializeVec3(d.args[0]),o.deserializeVec3(d.args[1]));break;case n.UPDATE_BODY_PROPERTIES:o.deserializeBodyUpdate(d.body,l[d.body.id]);break;case n.ADD_MATERIAL:i.addMaterial(d.materialConfig);break;case n.ADD_CONTACT_MATERIAL:i.addContactMaterial(d.materialName1,d.materialName2,d.contactMaterialConfig);break;case n.ADD_CONSTRAINT:var m=o.deserializeConstraint(d.constraint,l);c[m[a]]=m,i.addConstraint(m);break;case n.REMOVE_CONSTRAINT:i.removeConstraint(c[d.constraintID]),delete c[d.constraintID];break;default:throw new Error("[Worker] Unexpected event type: %s",d.type)}}))}},855:(t,e,i)=>{var n=i(687),s=i(279),r=s.GRAVITY,o=s.CONTACT_MATERIAL;const{TYPE:a}=i(279);var l=i(369),c=i(220),h=i(444),u=i(589);i(261),t.exports=AFRAME.registerSystem("physics",{schema:{driver:{default:"local",oneOf:["local","worker","network","ammo"]},networkUrl:{default:"",if:{driver:"network"}},workerFps:{default:60,if:{driver:"worker"}},workerInterpolate:{default:!0,if:{driver:"worker"}},workerInterpBufferSize:{default:2,if:{driver:"worker"}},workerEngine:{default:"cannon",if:{driver:"worker"},oneOf:["cannon"]},workerDebug:{default:!1,if:{driver:"worker"}},gravity:{default:r},iterations:{default:s.ITERATIONS},friction:{default:o.friction},restitution:{default:o.restitution},contactEquationStiffness:{default:o.contactEquationStiffness},contactEquationRelaxation:{default:o.contactEquationRelaxation},frictionEquationStiffness:{default:o.frictionEquationStiffness},frictionEquationRegularization:{default:o.frictionEquationRegularization},maxInterval:{default:4/60},debug:{default:!1},debugDrawMode:{default:THREE.AmmoDebugConstants.NoDebug},maxSubSteps:{default:4},fixedTimeStep:{default:1/60},stats:{type:"array",default:[]}},async init(){var t=this.data;switch(this.debug=t.debug,this.initStats(),this.callbacks={beforeStep:[],step:[],afterStep:[]},this.listeners={},this.driver=null,t.driver){case"local":this.driver=new l;break;case"ammo":this.driver=new u;break;case"network":this.driver=new h(t.networkUrl);break;case"worker":this.driver=new c({fps:t.workerFps,engine:t.workerEngine,interpolate:t.workerInterpolate,interpolationBufferSize:t.workerInterpBufferSize,debug:t.workerDebug});break;default:throw new Error('[physics] Driver not recognized: "%s".',t.driver)}"ammo"!==t.driver?(await this.driver.init({quatNormalizeSkip:0,quatNormalizeFast:!1,solverIterations:t.iterations,gravity:t.gravity}),this.driver.addMaterial({name:"defaultMaterial"}),this.driver.addMaterial({name:"staticMaterial"}),this.driver.addContactMaterial("defaultMaterial","defaultMaterial",{friction:t.friction,restitution:t.restitution,contactEquationStiffness:t.contactEquationStiffness,contactEquationRelaxation:t.contactEquationRelaxation,frictionEquationStiffness:t.frictionEquationStiffness,frictionEquationRegularization:t.frictionEquationRegularization}),this.driver.addContactMaterial("staticMaterial","defaultMaterial",{friction:1,restitution:0,contactEquationStiffness:t.contactEquationStiffness,contactEquationRelaxation:t.contactEquationRelaxation,frictionEquationStiffness:t.frictionEquationStiffness,frictionEquationRegularization:t.frictionEquationRegularization})):await this.driver.init({gravity:t.gravity,debugDrawMode:t.debugDrawMode,solverIterations:t.iterations,maxSubSteps:t.maxSubSteps,fixedTimeStep:t.fixedTimeStep}),this.initialized=!0,this.debug&&this.setDebug(!0)},initStats(){if(this.statsToConsole=this.data.stats.includes("console"),this.statsToEvents=this.data.stats.includes("events"),this.statsToPanel=this.data.stats.includes("panel"),(this.statsToConsole||this.statsToEvents||this.statsToPanel)&&(this.trackPerf=!0,this.tickCounter=0,this.statsTickData={},this.statsBodyData={},this.countBodies={ammo:()=>this.countBodiesAmmo(),local:()=>this.countBodiesCannon(!1),worker:()=>this.countBodiesCannon(!0)},this.bodyTypeToStatsPropertyMap={ammo:{[a.STATIC]:"staticBodies",[a.KINEMATIC]:"kinematicBodies",[a.DYNAMIC]:"dynamicBodies"},cannon:{[n.Body.STATIC]:"staticBodies",[n.Body.DYNAMIC]:"dynamicBodies"}},this.el.sceneEl.setAttribute("stats-collector","inEvent: physics-tick-data;\n                                             properties: before, after, engine, total;\n                                             outputFrequency: 100;\n                                             outEvent: physics-tick-summary;\n                                             outputs: percentile__50, percentile__90, max")),this.statsToPanel){const t=this.el.sceneEl,e="&nbsp&nbsp&nbsp";t.setAttribute("stats-panel",""),t.setAttribute("stats-group__bodies","label: Physics Bodies"),t.setAttribute("stats-row__b1","group: bodies;\n                                           event:physics-body-data;\n                                           properties: staticBodies;\n                                           label: Static"),t.setAttribute("stats-row__b2","group: bodies;\n                                           event:physics-body-data;\n                                           properties: dynamicBodies;\n                                           label: Dynamic"),"local"===this.data.driver||"worker"===this.data.driver?t.setAttribute("stats-row__b3","group: bodies;\n                                             event:physics-body-data;\n                                             properties: contacts;\n                                             label: Contacts"):"ammo"===this.data.driver&&(t.setAttribute("stats-row__b3","group: bodies;\n                                             event:physics-body-data;\n                                             properties: kinematicBodies;\n                                             label: Kinematic"),t.setAttribute("stats-row__b4","group: bodies;\n                                             event: physics-body-data;\n                                             properties: manifolds;\n                                             label: Manifolds"),t.setAttribute("stats-row__b5","group: bodies;\n                                             event: physics-body-data;\n                                             properties: manifoldContacts;\n                                             label: Contacts"),t.setAttribute("stats-row__b6","group: bodies;\n                                             event: physics-body-data;\n                                             properties: collisions;\n                                             label: Collisions"),t.setAttribute("stats-row__b7","group: bodies;\n                                             event: physics-body-data;\n                                             properties: collisionKeys;\n                                             label: Coll Keys")),t.setAttribute("stats-group__tick",`label: Physics Ticks: Median${e}90th%${e}99th%`),t.setAttribute("stats-row__1","group: tick;\n                                          event:physics-tick-summary;\n                                          properties: before.percentile__50, \n                                                      before.percentile__90, \n                                                      before.max;\n                                          label: Before"),t.setAttribute("stats-row__2","group: tick;\n                                          event:physics-tick-summary;\n                                          properties: after.percentile__50, \n                                                      after.percentile__90, \n                                                      after.max; \n                                          label: After"),t.setAttribute("stats-row__3","group: tick; \n                                          event:physics-tick-summary; \n                                          properties: engine.percentile__50, \n                                                      engine.percentile__90, \n                                                      engine.max;\n                                          label: Engine"),t.setAttribute("stats-row__4","group: tick;\n                                          event:physics-tick-summary;\n                                          properties: total.percentile__50, \n                                                      total.percentile__90, \n                                                      total.max;\n                                          label: Total")}},tick:function(t,e){if(!this.initialized||!e)return;const i=performance.now();var n,s=this.callbacks;for(n=0;n<this.callbacks.beforeStep.length;n++)this.callbacks.beforeStep[n].beforeStep(t,e);const r=performance.now();this.driver.step(Math.min(e/1e3,this.data.maxInterval));const o=performance.now();for(n=0;n<s.step.length;n++)s.step[n].step(t,e);for(n=0;n<s.afterStep.length;n++)s.afterStep[n].afterStep(t,e);if(this.trackPerf){const t=performance.now();this.statsTickData.before=r-i,this.statsTickData.engine=o-r,this.statsTickData.after=t-o,this.statsTickData.total=t-i,this.el.emit("physics-tick-data",this.statsTickData),this.tickCounter++,100===this.tickCounter&&(this.countBodies[this.data.driver](),this.statsToConsole&&console.log("Physics body stats:",this.statsBodyData),(this.statsToEvents||this.statsToPanel)&&this.el.emit("physics-body-data",this.statsBodyData),this.tickCounter=0)}},countBodiesAmmo(){const t=this.statsBodyData;t.manifolds=this.driver.dispatcher.getNumManifolds(),t.manifoldContacts=0;for(let e=0;e<t.manifolds;e++){const i=this.driver.dispatcher.getManifoldByIndexInternal(e);t.manifoldContacts+=i.getNumContacts()}t.collisions=this.driver.collisions.size,t.collisionKeys=this.driver.collisionKeys.length,t.staticBodies=0,t.kinematicBodies=0,t.dynamicBodies=0,this.driver.els.forEach((e=>{const i=this.bodyTypeToStatsPropertyMap.ammo[function(t){return t.components["ammo-body"].data.type}(e)];t[i]++}))},countBodiesCannon(t){const e=this.statsBodyData;e.contacts=t?this.driver.contacts.length:this.driver.world.contacts.length,e.staticBodies=0,e.dynamicBodies=0,(t?Object.values(this.driver.bodies):this.driver.world.bodies).forEach((t=>{const i=this.bodyTypeToStatsPropertyMap.cannon[t.type];e[i]++}))},setDebug:function(t){this.debug=t,"ammo"===this.data.driver&&this.initialized&&(t&&!this.debugDrawer?(this.debugDrawer=this.driver.getDebugDrawer(this.el.object3D),this.debugDrawer.enable()):this.debugDrawer&&(this.debugDrawer.disable(),this.debugDrawer=null))},addBody:function(t,e,i){var n=this.driver;"local"===this.data.driver&&(t.__applyImpulse=t.applyImpulse,t.applyImpulse=function(){n.applyBodyMethod(t,"applyImpulse",arguments)},t.__applyForce=t.applyForce,t.applyForce=function(){n.applyBodyMethod(t,"applyForce",arguments)},t.updateProperties=function(){n.updateBodyProperties(t)},this.listeners[t.id]=function(e){t.el.emit("collide",e)},t.addEventListener("collide",this.listeners[t.id])),this.driver.addBody(t,e,i)},removeBody:function(t){this.driver.removeBody(t),"local"!==this.data.driver&&"worker"!==this.data.driver||(t.removeEventListener("collide",this.listeners[t.id]),delete this.listeners[t.id],t.applyImpulse=t.__applyImpulse,delete t.__applyImpulse,t.applyForce=t.__applyForce,delete t.__applyForce,delete t.updateProperties)},addConstraint:function(t){this.driver.addConstraint(t)},removeConstraint:function(t){this.driver.removeConstraint(t)},addComponent:function(t){var e=this.callbacks;t.beforeStep&&e.beforeStep.push(t),t.step&&e.step.push(t),t.afterStep&&e.afterStep.push(t)},removeComponent:function(t){var e=this.callbacks;t.beforeStep&&e.beforeStep.splice(e.beforeStep.indexOf(t),1),t.step&&e.step.splice(e.step.indexOf(t),1),t.afterStep&&e.afterStep.splice(e.afterStep.indexOf(t),1)},getContacts:function(){return this.driver.getContacts()},getMaterial:function(t){return this.driver.getMaterial(t)}})},229:t=>{t.exports.slerp=function(t,e,i){if(i<=0)return t;if(i>=1)return e;var n=t[0],s=t[1],r=t[2],o=t[3],a=o*e[3]+n*e[0]+s*e[1]+r*e[2];if(!(a<0))return e;if((t=t.slice())[3]=-e[3],t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],(a=-a)>=1)return t[3]=o,t[0]=n,t[1]=s,t[2]=r,this;var l=Math.sqrt(1-a*a);if(Math.abs(l)<.001)return t[3]=.5*(o+t[3]),t[0]=.5*(n+t[0]),t[1]=.5*(s+t[1]),t[2]=.5*(r+t[2]),this;var c=Math.atan2(l,a),h=Math.sin((1-i)*c)/l,u=Math.sin(i*c)/l;return t[3]=o*h+t[3]*u,t[0]=n*h+t[0]*u,t[1]=s*h+t[1]*u,t[2]=r*h+t[2]*u,t}},459:(t,e,i)=>{var n=i(687),s=i(229),r="__id";t.exports.ID=r;var o={};function a(t){var e={type:t.type};if(t.type===n.Shape.types.BOX)e.halfExtents=c(t.halfExtents);else if(t.type===n.Shape.types.SPHERE)e.radius=t.radius;else{if(t._type!==n.Shape.types.CYLINDER)throw new Error("Unimplemented shape type: %s",t.type);e.type=n.Shape.types.CYLINDER,e.radiusTop=t.radiusTop,e.radiusBottom=t.radiusBottom,e.height=t.height,e.numSegments=t.numSegments}return e}function l(t){var e;if(t.type===n.Shape.types.BOX)e=new n.Box(h(t.halfExtents));else if(t.type===n.Shape.types.SPHERE)e=new n.Sphere(t.radius);else{if(t.type!==n.Shape.types.CYLINDER)throw new Error("Unimplemented shape type: %s",t.type);(e=new n.Cylinder(t.radiusTop,t.radiusBottom,t.height,t.numSegments))._type=n.Shape.types.CYLINDER}return e}function c(t){return t.toArray()}function h(t){return new n.Vec3(t[0],t[1],t[2])}function u(t){return t.toArray()}function d(t){return new n.Quaternion(t[0],t[1],t[2],t[3])}t.exports.assignID=function(t,e){e[r]||(o[t]=o[t]||1,e[r]=t+"_"+o[t]++)},t.exports.serializeBody=function(t){return{shapes:t.shapes.map(a),shapeOffsets:t.shapeOffsets.map(c),shapeOrientations:t.shapeOrientations.map(u),position:c(t.position),quaternion:t.quaternion.toArray(),velocity:c(t.velocity),angularVelocity:c(t.angularVelocity),id:t[r],mass:t.mass,linearDamping:t.linearDamping,angularDamping:t.angularDamping,fixedRotation:t.fixedRotation,allowSleep:t.allowSleep,sleepSpeedLimit:t.sleepSpeedLimit,sleepTimeLimit:t.sleepTimeLimit}},t.exports.deserializeBodyUpdate=function(t,e){return e.position.set(t.position[0],t.position[1],t.position[2]),e.quaternion.set(t.quaternion[0],t.quaternion[1],t.quaternion[2],t.quaternion[3]),e.velocity.set(t.velocity[0],t.velocity[1],t.velocity[2]),e.angularVelocity.set(t.angularVelocity[0],t.angularVelocity[1],t.angularVelocity[2]),e.linearDamping=t.linearDamping,e.angularDamping=t.angularDamping,e.fixedRotation=t.fixedRotation,e.allowSleep=t.allowSleep,e.sleepSpeedLimit=t.sleepSpeedLimit,e.sleepTimeLimit=t.sleepTimeLimit,e.mass!==t.mass&&(e.mass=t.mass,e.updateMassProperties()),e},t.exports.deserializeInterpBodyUpdate=function(t,e,i,n){var r=1-n,o=n;i.position.set(t.position[0]*r+e.position[0]*o,t.position[1]*r+e.position[1]*o,t.position[2]*r+e.position[2]*o);var a=s.slerp(t.quaternion,e.quaternion,n);return i.quaternion.set(a[0],a[1],a[2],a[3]),i.velocity.set(t.velocity[0]*r+e.velocity[0]*o,t.velocity[1]*r+e.velocity[1]*o,t.velocity[2]*r+e.velocity[2]*o),i.angularVelocity.set(t.angularVelocity[0]*r+e.angularVelocity[0]*o,t.angularVelocity[1]*r+e.angularVelocity[1]*o,t.angularVelocity[2]*r+e.angularVelocity[2]*o),i.linearDamping=e.linearDamping,i.angularDamping=e.angularDamping,i.fixedRotation=e.fixedRotation,i.allowSleep=e.allowSleep,i.sleepSpeedLimit=e.sleepSpeedLimit,i.sleepTimeLimit=e.sleepTimeLimit,i.mass!==e.mass&&(i.mass=e.mass,i.updateMassProperties()),i},t.exports.deserializeBody=function(t){for(var e,i=new n.Body({mass:t.mass,position:h(t.position),quaternion:d(t.quaternion),velocity:h(t.velocity),angularVelocity:h(t.angularVelocity),linearDamping:t.linearDamping,angularDamping:t.angularDamping,fixedRotation:t.fixedRotation,allowSleep:t.allowSleep,sleepSpeedLimit:t.sleepSpeedLimit,sleepTimeLimit:t.sleepTimeLimit}),s=0;e=t.shapes[s];s++)i.addShape(l(e),h(t.shapeOffsets[s]),d(t.shapeOrientations[s]));return i[r]=t.id,i},t.exports.serializeShape=a,t.exports.deserializeShape=l,t.exports.serializeConstraint=function(t){var e={id:t[r],type:t.type,maxForce:t.maxForce,bodyA:t.bodyA[r],bodyB:t.bodyB[r]};switch(t.type){case"LockConstraint":break;case"DistanceConstraint":e.distance=t.distance;break;case"HingeConstraint":case"ConeTwistConstraint":e.axisA=c(t.axisA),e.axisB=c(t.axisB),e.pivotA=c(t.pivotA),e.pivotB=c(t.pivotB);break;case"PointToPointConstraint":e.pivotA=c(t.pivotA),e.pivotB=c(t.pivotB);break;default:throw new Error("Unexpected constraint type: "+t.type+'. You may need to manually set `constraint.type = "FooConstraint";`.')}return e},t.exports.deserializeConstraint=function(t,e){var i,s=n[t.type],o=e[t.bodyA],a=e[t.bodyB];switch(t.type){case"LockConstraint":i=new n.LockConstraint(o,a,t);break;case"DistanceConstraint":i=new n.DistanceConstraint(o,a,t.distance,t.maxForce);break;case"HingeConstraint":case"ConeTwistConstraint":i=new s(o,a,{pivotA:h(t.pivotA),pivotB:h(t.pivotB),axisA:h(t.axisA),axisB:h(t.axisB),maxForce:t.maxForce});break;case"PointToPointConstraint":i=new n.PointToPointConstraint(o,h(t.pivotA),a,h(t.pivotB),t.maxForce);break;default:throw new Error("Unexpected constraint type: "+t.type)}return i[r]=t.id,i},t.exports.serializeContact=function(t){return{bi:t.bi[r],bj:t.bj[r],ni:c(t.ni),ri:c(t.ri),rj:c(t.rj)}},t.exports.deserializeContact=function(t,e){return{bi:e[t.bi],bj:e[t.bj],ni:h(t.ni),ri:h(t.ri),rj:h(t.rj)}},t.exports.serializeVec3=c,t.exports.deserializeVec3=h,t.exports.serializeQuaternion=u,t.exports.deserializeQuaternion=d},264:(t,e,i)=>{var n=i(687),s=i(232),r=function(){var t,e,i,n,r=new s.Vector3;function o(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new h,this.unassigned=new h,this.vertices=[]}function a(){this.normal=new s.Vector3,this.midpoint=new s.Vector3,this.area=0,this.constant=0,this.outside=null,this.mark=0,this.edge=null}function l(t,e){this.vertex=t,this.prev=null,this.next=null,this.twin=null,this.face=e}function c(t){this.point=t,this.prev=null,this.next=null,this.face=null}function h(){this.head=null,this.tail=null}return Object.assign(o.prototype,{setFromPoints:function(t){!0!==Array.isArray(t)&&console.error("THREE.ConvexHull: Points parameter is not an array."),t.length<4&&console.error("THREE.ConvexHull: The algorithm needs at least four points."),this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.vertices.push(new c(t[e]));return this.compute(),this},setFromObject:function(t){var e=[];return t.updateMatrixWorld(!0),t.traverse((function(t){var i,n,r,o=t.geometry;if(void 0!==o&&(o.isGeometry&&(o=o.toBufferGeometry?o.toBufferGeometry():(new s.BufferGeometry).fromGeometry(o)),o.isBufferGeometry)){var a=o.attributes.position;if(void 0!==a)for(i=0,n=a.count;i<n;i++)(r=new s.Vector3).fromBufferAttribute(a,i).applyMatrix4(t.matrixWorld),e.push(r)}})),this.setFromPoints(e)},containsPoint:function(t){for(var e=this.faces,i=0,n=e.length;i<n;i++)if(e[i].distanceToPoint(t)>this.tolerance)return!1;return!0},intersectRay:function(t,e){for(var i=this.faces,n=-1/0,s=1/0,r=0,o=i.length;r<o;r++){var a=i[r],l=a.distanceToPoint(t.origin),c=a.normal.dot(t.direction);if(l>0&&c>=0)return null;var h=0!==c?-l/c:0;if(!(h<=0)&&(c>0?s=Math.min(h,s):n=Math.max(h,n),n>s))return null}return n!==-1/0?t.at(n,e):t.at(s,e),e},intersectsRay:function(t){return null!==this.intersectRay(t,r)},makeEmpty:function(){return this.faces=[],this.vertices=[],this},addVertexToFace:function(t,e){return t.face=e,null===e.outside?this.assigned.append(t):this.assigned.insertBefore(e.outside,t),e.outside=t,this},removeVertexFromFace:function(t,e){return t===e.outside&&(null!==t.next&&t.next.face===e?e.outside=t.next:e.outside=null),this.assigned.remove(t),this},removeAllVerticesFromFace:function(t){if(null!==t.outside){for(var e=t.outside,i=t.outside;null!==i.next&&i.next.face===t;)i=i.next;return this.assigned.removeSubList(e,i),e.prev=i.next=null,t.outside=null,e}},deleteFaceVertices:function(t,e){var i=this.removeAllVerticesFromFace(t);if(void 0!==i)if(void 0===e)this.unassigned.appendChain(i);else{var n=i;do{var s=n.next;e.distanceToPoint(n.point)>this.tolerance?this.addVertexToFace(n,e):this.unassigned.append(n),n=s}while(null!==n)}return this},resolveUnassignedPoints:function(t){if(!1===this.unassigned.isEmpty()){var e=this.unassigned.first();do{for(var i=e.next,n=this.tolerance,s=null,r=0;r<t.length;r++){var o=t[r];if(0===o.mark){var a=o.distanceToPoint(e.point);if(a>n&&(n=a,s=o),n>1e3*this.tolerance)break}}null!==s&&this.addVertexToFace(e,s),e=i}while(null!==e)}return this},computeExtremes:function(){var t,e,i,n=new s.Vector3,r=new s.Vector3,o=[],a=[];for(t=0;t<3;t++)o[t]=a[t]=this.vertices[0];for(n.copy(this.vertices[0].point),r.copy(this.vertices[0].point),t=0,e=this.vertices.length;t<e;t++){var l=this.vertices[t],c=l.point;for(i=0;i<3;i++)c.getComponent(i)<n.getComponent(i)&&(n.setComponent(i,c.getComponent(i)),o[i]=l);for(i=0;i<3;i++)c.getComponent(i)>r.getComponent(i)&&(r.setComponent(i,c.getComponent(i)),a[i]=l)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(n.x),Math.abs(r.x))+Math.max(Math.abs(n.y),Math.abs(r.y))+Math.max(Math.abs(n.z),Math.abs(r.z))),{min:o,max:a}},computeInitialHull:function(){void 0===t&&(t=new s.Line3,e=new s.Plane,i=new s.Vector3);var n,r,o,l,c,h,u,d,p,m=this.vertices,f=this.computeExtremes(),g=f.min,y=f.max,v=0,x=0;for(h=0;h<3;h++)(p=y[h].point.getComponent(h)-g[h].point.getComponent(h))>v&&(v=p,x=h);for(r=g[x],o=y[x],v=0,t.set(r.point,o.point),h=0,u=this.vertices.length;h<u;h++)(n=m[h])!==r&&n!==o&&(t.closestPointToPoint(n.point,!0,i),(p=i.distanceToSquared(n.point))>v&&(v=p,l=n));for(v=-1,e.setFromCoplanarPoints(r.point,o.point,l.point),h=0,u=this.vertices.length;h<u;h++)(n=m[h])!==r&&n!==o&&n!==l&&(p=Math.abs(e.distanceToPoint(n.point)))>v&&(v=p,c=n);var _=[];if(e.distanceToPoint(c.point)<0)for(_.push(a.create(r,o,l),a.create(c,o,r),a.create(c,l,o),a.create(c,r,l)),h=0;h<3;h++)d=(h+1)%3,_[h+1].getEdge(2).setTwin(_[0].getEdge(d)),_[h+1].getEdge(1).setTwin(_[d+1].getEdge(0));else for(_.push(a.create(r,l,o),a.create(c,r,o),a.create(c,o,l),a.create(c,l,r)),h=0;h<3;h++)d=(h+1)%3,_[h+1].getEdge(2).setTwin(_[0].getEdge((3-h)%3)),_[h+1].getEdge(0).setTwin(_[d+1].getEdge(1));for(h=0;h<4;h++)this.faces.push(_[h]);for(h=0,u=m.length;h<u;h++)if((n=m[h])!==r&&n!==o&&n!==l&&n!==c){v=this.tolerance;var b=null;for(d=0;d<4;d++)(p=this.faces[d].distanceToPoint(n.point))>v&&(v=p,b=this.faces[d]);null!==b&&this.addVertexToFace(n,b)}return this},reindexFaces:function(){for(var t=[],e=0;e<this.faces.length;e++){var i=this.faces[e];0===i.mark&&t.push(i)}return this.faces=t,this},nextVertexToAdd:function(){if(!1===this.assigned.isEmpty()){var t,e=0,i=this.assigned.first().face,n=i.outside;do{var s=i.distanceToPoint(n.point);s>e&&(e=s,t=n),n=n.next}while(null!==n&&n.face===i);return t}},computeHorizon:function(t,e,i,n){var s;this.deleteFaceVertices(i),i.mark=1,s=null===e?e=i.getEdge(0):e.next;do{var r=s.twin,o=r.face;0===o.mark&&(o.distanceToPoint(t)>this.tolerance?this.computeHorizon(t,r,o,n):n.push(s)),s=s.next}while(s!==e);return this},addAdjoiningFace:function(t,e){var i=a.create(t,e.tail(),e.head());return this.faces.push(i),i.getEdge(-1).setTwin(e.twin),i.getEdge(0)},addNewFaces:function(t,e){this.newFaces=[];for(var i=null,n=null,s=0;s<e.length;s++){var r=e[s],o=this.addAdjoiningFace(t,r);null===i?i=o:o.next.setTwin(n),this.newFaces.push(o.face),n=o}return i.next.setTwin(n),this},addVertexToHull:function(t){var e=[];return this.unassigned.clear(),this.removeVertexFromFace(t,t.face),this.computeHorizon(t.point,null,t.face,e),this.addNewFaces(t,e),this.resolveUnassignedPoints(this.newFaces),this},cleanup:function(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this},compute:function(){var t;for(this.computeInitialHull();void 0!==(t=this.nextVertexToAdd());)this.addVertexToHull(t);return this.reindexFaces(),this.cleanup(),this}}),Object.assign(a,{create:function(t,e,i){var n=new a,s=new l(t,n),r=new l(e,n),o=new l(i,n);return s.next=o.prev=r,r.next=s.prev=o,o.next=r.prev=s,n.edge=s,n.compute()}}),Object.assign(a.prototype,{getEdge:function(t){for(var e=this.edge;t>0;)e=e.next,t--;for(;t<0;)e=e.prev,t++;return e},compute:function(){void 0===n&&(n=new s.Triangle);var t=this.edge.tail(),e=this.edge.head(),i=this.edge.next.head();return n.set(t.point,e.point,i.point),n.getNormal(this.normal),n.getMidpoint(this.midpoint),this.area=n.getArea(),this.constant=this.normal.dot(this.midpoint),this},distanceToPoint:function(t){return this.normal.dot(t)-this.constant}}),Object.assign(l.prototype,{head:function(){return this.vertex},tail:function(){return this.prev?this.prev.vertex:null},length:function(){var t=this.head(),e=this.tail();return null!==e?e.point.distanceTo(t.point):-1},lengthSquared:function(){var t=this.head(),e=this.tail();return null!==e?e.point.distanceToSquared(t.point):-1},setTwin:function(t){return this.twin=t,t.twin=this,this}}),Object.assign(h.prototype,{first:function(){return this.head},last:function(){return this.tail},clear:function(){return this.head=this.tail=null,this},insertBefore:function(t,e){return e.prev=t.prev,e.next=t,null===e.prev?this.head=e:e.prev.next=e,t.prev=e,this},insertAfter:function(t,e){return e.prev=t,e.next=t.next,null===e.next?this.tail=e:e.next.prev=e,t.next=e,this},append:function(t){return null===this.head?this.head=t:this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t,this},appendChain:function(t){for(null===this.head?this.head=t:this.tail.next=t,t.prev=this.tail;null!==t.next;)t=t.next;return this.tail=t,this},remove:function(t){return null===t.prev?this.head=t.next:t.prev.next=t.next,null===t.next?this.tail=t.prev:t.next.prev=t.prev,this},removeSubList:function(t,e){return null===t.prev?this.head=e.next:t.prev.next=e.next,null===e.next?this.tail=t.prev:e.next.prev=t.prev,this},isEmpty:function(){return null===this.head}}),o}();const o=new s.Vector3,a=new s.Vector3,l=new s.Quaternion;function c(t){const e=function(t){const e=[];return t.traverse((function(t){t.isMesh&&e.push(t)})),e}(t);if(0===e.length)return null;if(1===e.length)return h(e[0]);let i;const n=[];for(;i=e.pop();)n.push(p(h(i)));return function(t){let e=0;for(let i=0;i<t.length;i++){const n=t[i].attributes.position;n&&3===n.itemSize&&(e+=n.count)}const i=new Float32Array(3*e);let n=0;for(let e=0;e<t.length;e++){const s=t[e].attributes.position;if(s&&3===s.itemSize)for(let t=0;t<s.count;t++)i[n++]=s.getX(t),i[n++]=s.getY(t),i[n++]=s.getZ(t)}return(new s.BufferGeometry).setAttribute("position",new s.BufferAttribute(i,3))}(n)}function h(t){let e=t.geometry;return e=e.toBufferGeometry?e.toBufferGeometry():e.clone(),t.updateMatrixWorld(),t.matrixWorld.decompose(o,l,a),e.scale(a.x,a.y,a.z),e}function u(t){const e=t.attributes.position,i=new Float32Array(3*e.count);for(let t=0;t<e.count;t++)i[3*t]=e.getX(t),i[3*t+1]=e.getY(t),i[3*t+2]=e.getZ(t);return i}function d(t,e){switch(e){case"x":return t.x;case"y":return t.y;case"z":return t.z}throw new Error("Unexpected component "+e)}function p(t,e=1e-4){e=Math.max(e,Number.EPSILON);const i={},n=t.getIndex(),r=t.getAttribute("position"),o=n?n.count:r.count;let a=0;const l=[],c=[],h=Math.log10(1/e),u=Math.pow(10,h);for(let t=0;t<o;t++){const e=n?n.getX(t):t;let s="";s+=~~(r.getX(e)*u)+",",s+=~~(r.getY(e)*u)+",",s+=~~(r.getZ(e)*u)+",",s in i?l.push(i[s]):(c.push(r.getX(e)),c.push(r.getY(e)),c.push(r.getZ(e)),i[s]=a,l.push(a),a++)}const d=new s.BufferAttribute(new Float32Array(c),r.itemSize,r.normalized),p=new s.BufferGeometry;return p.setAttribute("position",d),p.setIndex(l),p}const m=Math.PI/2;var f;e.ShapeType=void 0,(f=e.ShapeType||(e.ShapeType={})).BOX="Box",f.CYLINDER="Cylinder",f.SPHERE="Sphere",f.HULL="ConvexPolyhedron",f.MESH="Trimesh";const g=function(t,i={}){let o;if(i.type===e.ShapeType.BOX)return v(t);if(i.type===e.ShapeType.CYLINDER)return function(t,i){const r=["x","y","z"],o=i.cylinderAxis||"y",a=r.splice(r.indexOf(o),1)&&r,l=(new s.Box3).setFromObject(t);if(!isFinite(l.min.lengthSq()))return null;const c=l.max[o]-l.min[o],h=.5*Math.max(d(l.max,a[0])-d(l.min,a[0]),d(l.max,a[1])-d(l.min,a[1])),u="y"===o?m:0,p="z"===o?m:0;return{type:e.ShapeType.CYLINDER,params:{radiusTop:h,radiusBottom:h,height:c,segments:12},orientation:(new n.Quaternion).setFromEuler(u,p,0,"XYZ").normalize()}}(t,i);if(i.type===e.ShapeType.SPHERE)return function(t,i){if(i.sphereRadius)return{type:e.ShapeType.SPHERE,params:{radius:i.sphereRadius}};const n=c(t);return n?(n.computeBoundingSphere(),{type:e.ShapeType.SPHERE,params:{radius:n.boundingSphere.radius}}):null}(t,i);if(i.type===e.ShapeType.HULL)return function(t){const i=c(t);if(!i)return null;const n=1e-4;for(let t=0;t<i.attributes.position.count;t++)i.attributes.position.setXYZ(t,i.attributes.position.getX(t)+(Math.random()-.5)*n,i.attributes.position.getY(t)+(Math.random()-.5)*n,i.attributes.position.getZ(t)+(Math.random()-.5)*n);const o=(new r).setFromObject(new s.Mesh(i)).faces,a=[],l=[];let h=0;for(let t=0;t<o.length;t++){const e=o[t],i=[];l.push(i);let n=e.edge;do{const t=n.head().point;a.push(t.x,t.y,t.z),i.push(h),h++,n=n.next}while(n!==e.edge)}const u=new Float32Array(a.length);return u.set(a),{type:e.ShapeType.HULL,params:{vertices:u,faces:l}}}(t);if(i.type===e.ShapeType.MESH)return o=c(t),o?function(t){const i=u(t);if(!i.length)return null;const n=new Uint32Array(i.length);for(let t=0;t<i.length;t++)n[t]=t;return{type:e.ShapeType.MESH,params:{vertices:i,indices:n}}}(o):null;if(i.type)throw new Error('[CANNON.getShapeParameters] Invalid type "'+i.type+'".');if(o=c(t),!o)return null;switch(o.type){case"BoxGeometry":case"BoxBufferGeometry":return y(o);case"CylinderGeometry":case"CylinderBufferGeometry":return function(t){const i=t.parameters;return{type:e.ShapeType.CYLINDER,params:{radiusTop:i.radiusTop,radiusBottom:i.radiusBottom,height:i.height,segments:i.radialSegments},orientation:(new n.Quaternion).setFromEuler(s.MathUtils.degToRad(-90),0,0,"XYZ").normalize()}}(o);case"PlaneGeometry":case"PlaneBufferGeometry":return function(t){t.computeBoundingBox();const i=t.boundingBox;return{type:e.ShapeType.BOX,params:{x:(i.max.x-i.min.x)/2||.1,y:(i.max.y-i.min.y)/2||.1,z:(i.max.z-i.min.z)/2||.1}}}(o);case"SphereGeometry":case"SphereBufferGeometry":return function(t){return{type:e.ShapeType.SPHERE,params:{radius:t.parameters.radius}}}(o);case"TubeGeometry":case"BufferGeometry":return v(t);default:return console.warn('Unrecognized geometry: "%s". Using bounding box as shape.',o.type),y(o)}};function y(t){if(!u(t).length)return null;t.computeBoundingBox();const i=t.boundingBox;return{type:e.ShapeType.BOX,params:{x:(i.max.x-i.min.x)/2,y:(i.max.y-i.min.y)/2,z:(i.max.z-i.min.z)/2}}}function v(t){const i=t.clone();i.quaternion.set(0,0,0,1),i.updateMatrixWorld();const r=(new s.Box3).setFromObject(i);if(!isFinite(r.min.lengthSq()))return null;const o=r.translate(i.position.negate()).getCenter(new s.Vector3);return{type:e.ShapeType.BOX,params:{x:(r.max.x-r.min.x)/2,y:(r.max.y-r.min.y)/2,z:(r.max.z-r.min.z)/2},offset:o.lengthSq()?new n.Vec3(o.x,o.y,o.z):void 0}}e.getShapeParameters=g,e.threeToCannon=function(t,i={}){const s=g(t,i);if(!s)return null;const{type:r,params:o,offset:a,orientation:l}=s;let c;return c=r===e.ShapeType.BOX?function(t){const{x:e,y:i,z:s}=t;return new n.Box(new n.Vec3(e,i,s))}(o):r===e.ShapeType.CYLINDER?function(t){const{radiusTop:e,radiusBottom:i,height:s,segments:r}=t,o=new n.Cylinder(e,i,s,r);return o.radiusTop=i,o.radiusBottom=i,o.height=s,o.numSegments=r,o}(o):r===e.ShapeType.SPHERE?function(t){return new n.Sphere(t.radius)}(o):r===e.ShapeType.HULL?function(t){const{faces:e,vertices:i}=t,s=[];for(let t=0;t<i.length;t+=3)s.push(new n.Vec3(i[t],i[t+1],i[t+2]));return new n.ConvexPolyhedron({faces:e,vertices:s})}(o):function(t){const{vertices:e,indices:i}=t;return new n.Trimesh(e,i)}(o),{shape:c,offset:a,orientation:l}}},232:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i="145",n=100,s=300,r=301,o=302,a=303,l=304,c=306,h=1e3,u=1001,d=1002,p=1003,m=1004,f=1005,g=1006,y=1007,v=1008,x=1009,_=1012,b=1014,w=1015,M=1016,S=1020,E=1023,T=1026,A=1027,C=33776,R=33777,L=33778,P=33779,I=35840,D=35841,N=35842,B=35843,F=37492,O=37496,z=37808,U=37809,H=37810,V=37811,k=37812,G=37813,W=37814,q=37815,j=37816,X=37817,Y=37818,Z=37819,J=37820,K=37821,Q=36492,$=2300,tt=2301,et=2302,it=2400,nt=2401,st=2402,rt=2501,ot=3e3,at=3001,lt="srgb",ct="srgb-linear",ht=7680,ut=35044,dt="300 es",pt=1035;class mt{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const i=e.slice(0);for(let e=0,n=i.length;e<n;e++)i[e].call(this,t);t.target=null}}}const ft=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let gt=1234567;const yt=Math.PI/180,vt=180/Math.PI;function xt(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(ft[255&t]+ft[t>>8&255]+ft[t>>16&255]+ft[t>>24&255]+"-"+ft[255&e]+ft[e>>8&255]+"-"+ft[e>>16&15|64]+ft[e>>24&255]+"-"+ft[63&i|128]+ft[i>>8&255]+"-"+ft[i>>16&255]+ft[i>>24&255]+ft[255&n]+ft[n>>8&255]+ft[n>>16&255]+ft[n>>24&255]).toLowerCase()}function _t(t,e,i){return Math.max(e,Math.min(i,t))}function bt(t,e){return(t%e+e)%e}function wt(t,e,i){return(1-i)*t+i*e}function Mt(t){return 0==(t&t-1)&&0!==t}function St(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Et(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function Tt(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function At(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}var Ct=Object.freeze({__proto__:null,DEG2RAD:yt,RAD2DEG:vt,generateUUID:xt,clamp:_t,euclideanModulo:bt,mapLinear:function(t,e,i,n,s){return n+(t-e)*(s-n)/(i-e)},inverseLerp:function(t,e,i){return t!==e?(i-t)/(e-t):0},lerp:wt,damp:function(t,e,i,n){return wt(t,e,1-Math.exp(-i*n))},pingpong:function(t,e=1){return e-Math.abs(bt(t,2*e)-e)},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(gt=t);let e=gt+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*yt},radToDeg:function(t){return t*vt},isPowerOfTwo:Mt,ceilPowerOfTwo:St,floorPowerOfTwo:Et,setQuaternionFromProperEuler:function(t,e,i,n,s){const r=Math.cos,o=Math.sin,a=r(i/2),l=o(i/2),c=r((e+n)/2),h=o((e+n)/2),u=r((e-n)/2),d=o((e-n)/2),p=r((n-e)/2),m=o((n-e)/2);switch(s){case"XYX":t.set(a*h,l*u,l*d,a*c);break;case"YZY":t.set(l*d,a*h,l*u,a*c);break;case"ZXZ":t.set(l*u,l*d,a*h,a*c);break;case"XZX":t.set(a*h,l*m,l*p,a*c);break;case"YXY":t.set(l*p,a*h,l*m,a*c);break;case"ZYZ":t.set(l*m,l*p,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}},normalize:At,denormalize:Tt});class Rt{constructor(t=0,e=0){Rt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),s=this.x-t.x,r=this.y-t.y;return this.x=s*i-r*n+t.x,this.y=s*n+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Lt{constructor(){Lt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,i,n,s,r,o,a,l){const c=this.elements;return c[0]=t,c[1]=n,c[2]=o,c[3]=e,c[4]=s,c[5]=a,c[6]=i,c[7]=r,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,s=this.elements,r=i[0],o=i[3],a=i[6],l=i[1],c=i[4],h=i[7],u=i[2],d=i[5],p=i[8],m=n[0],f=n[3],g=n[6],y=n[1],v=n[4],x=n[7],_=n[2],b=n[5],w=n[8];return s[0]=r*m+o*y+a*_,s[3]=r*f+o*v+a*b,s[6]=r*g+o*x+a*w,s[1]=l*m+c*y+h*_,s[4]=l*f+c*v+h*b,s[7]=l*g+c*x+h*w,s[2]=u*m+d*y+p*_,s[5]=u*f+d*v+p*b,s[8]=u*g+d*x+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],r=t[4],o=t[5],a=t[6],l=t[7],c=t[8];return e*r*c-e*o*l-i*s*c+i*o*a+n*s*l-n*r*a}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],r=t[4],o=t[5],a=t[6],l=t[7],c=t[8],h=c*r-o*l,u=o*a-c*s,d=l*s-r*a,p=e*h+i*u+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=h*m,t[1]=(n*l-c*i)*m,t[2]=(o*i-n*r)*m,t[3]=u*m,t[4]=(c*e-n*a)*m,t[5]=(n*s-o*e)*m,t[6]=d*m,t[7]=(i*a-l*e)*m,t[8]=(r*e-i*s)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,s,r,o){const a=Math.cos(s),l=Math.sin(s);return this.set(i*a,i*l,-i*(a*r+l*o)+r+t,-n*l,n*a,-n*(-l*r+a*o)+o+e,0,0,1),this}scale(t,e){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){const e=Math.cos(t),i=Math.sin(t),n=this.elements,s=n[0],r=n[3],o=n[6],a=n[1],l=n[4],c=n[7];return n[0]=e*s+i*a,n[3]=e*r+i*l,n[6]=e*o+i*c,n[1]=-i*s+e*a,n[4]=-i*r+e*l,n[7]=-i*o+e*c,this}translate(t,e){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function Pt(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}const It={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Dt(t,e){return new It[t](e)}function Nt(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Bt(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Ft(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const Ot={[lt]:{[ct]:Bt},[ct]:{[lt]:Ft}},zt={legacyMode:!0,get workingColorSpace(){return ct},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,i){if(this.legacyMode||e===i||!e||!i)return t;if(Ot[e]&&void 0!==Ot[e][i]){const n=Ot[e][i];return t.r=n(t.r),t.g=n(t.g),t.b=n(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},Ut={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ht={r:0,g:0,b:0},Vt={h:0,s:0,l:0},kt={h:0,s:0,l:0};function Gt(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function Wt(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class qt{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=lt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,zt.toWorkingColorSpace(this,e),this}setRGB(t,e,i,n=ct){return this.r=t,this.g=e,this.b=i,zt.toWorkingColorSpace(this,n),this}setHSL(t,e,i,n=ct){if(t=bt(t,1),e=_t(e,0,1),i=_t(i,0,1),0===e)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,s=2*i-n;this.r=Gt(s,n,t+1/3),this.g=Gt(s,n,t),this.b=Gt(s,n,t-1/3)}return zt.toWorkingColorSpace(this,n),this}setStyle(t,e=lt){function i(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const s=n[1],r=n[2];switch(s){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,zt.toWorkingColorSpace(this,e),i(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,zt.toWorkingColorSpace(this,e),i(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,s=parseFloat(t[2])/100,r=parseFloat(t[3])/100;return i(t[4]),this.setHSL(n,s,r,e)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],i=t.length;if(3===i)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,zt.toWorkingColorSpace(this,e),this;if(6===i)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,zt.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=lt){const i=Ut[t.toLowerCase()];return void 0!==i?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Bt(t.r),this.g=Bt(t.g),this.b=Bt(t.b),this}copyLinearToSRGB(t){return this.r=Ft(t.r),this.g=Ft(t.g),this.b=Ft(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=lt){return zt.fromWorkingColorSpace(Wt(this,Ht),t),_t(255*Ht.r,0,255)<<16^_t(255*Ht.g,0,255)<<8^_t(255*Ht.b,0,255)<<0}getHexString(t=lt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=ct){zt.fromWorkingColorSpace(Wt(this,Ht),e);const i=Ht.r,n=Ht.g,s=Ht.b,r=Math.max(i,n,s),o=Math.min(i,n,s);let a,l;const c=(o+r)/2;if(o===r)a=0,l=0;else{const t=r-o;switch(l=c<=.5?t/(r+o):t/(2-r-o),r){case i:a=(n-s)/t+(n<s?6:0);break;case n:a=(s-i)/t+2;break;case s:a=(i-n)/t+4}a/=6}return t.h=a,t.s=l,t.l=c,t}getRGB(t,e=ct){return zt.fromWorkingColorSpace(Wt(this,Ht),e),t.r=Ht.r,t.g=Ht.g,t.b=Ht.b,t}getStyle(t=lt){return zt.fromWorkingColorSpace(Wt(this,Ht),t),t!==lt?`color(${t} ${Ht.r} ${Ht.g} ${Ht.b})`:`rgb(${255*Ht.r|0},${255*Ht.g|0},${255*Ht.b|0})`}offsetHSL(t,e,i){return this.getHSL(Vt),Vt.h+=t,Vt.s+=e,Vt.l+=i,this.setHSL(Vt.h,Vt.s,Vt.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(Vt),t.getHSL(kt);const i=wt(Vt.h,kt.h,e),n=wt(Vt.s,kt.s,e),s=wt(Vt.l,kt.l,e);return this.setHSL(i,n,s),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let jt;qt.NAMES=Ut;class Xt{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===jt&&(jt=Nt("canvas")),jt.width=t.width,jt.height=t.height;const i=jt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=jt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=Nt("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const n=i.getImageData(0,0,t.width,t.height),s=n.data;for(let t=0;t<s.length;t++)s[t]=255*Bt(s[t]/255);return i.putImageData(n,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Bt(e[t]/255)):e[t]=Bt(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Yt{constructor(t=null){this.isSource=!0,this.uuid=xt(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let t;if(Array.isArray(n)){t=[];for(let e=0,i=n.length;e<i;e++)n[e].isDataTexture?t.push(Zt(n[e].image)):t.push(Zt(n[e]))}else t=Zt(n);i.url=t}return e||(t.images[this.uuid]=i),i}}function Zt(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Xt.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Jt=0;class Kt extends mt{constructor(t=Kt.DEFAULT_IMAGE,e=Kt.DEFAULT_MAPPING,i=1001,n=1001,s=1006,r=1008,o=1023,a=1009,l=1,c=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Jt++}),this.uuid=xt(),this.name="",this.source=new Yt(t),this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=r,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new Rt(0,0),this.repeat=new Rt(1,1),this.center=new Rt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==s)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case h:t.x=t.x-Math.floor(t.x);break;case u:t.x=t.x<0?0:1;break;case d:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case h:t.y=t.y-Math.floor(t.y);break;case u:t.y=t.y<0?0:1;break;case d:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}Kt.DEFAULT_IMAGE=null,Kt.DEFAULT_MAPPING=s;class Qt{constructor(t=0,e=0,i=0,n=1){Qt.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,s=this.w,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n+r[12]*s,this.y=r[1]*e+r[5]*i+r[9]*n+r[13]*s,this.z=r[2]*e+r[6]*i+r[10]*n+r[14]*s,this.w=r[3]*e+r[7]*i+r[11]*n+r[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,s;const r=.01,o=.1,a=t.elements,l=a[0],c=a[4],h=a[8],u=a[1],d=a[5],p=a[9],m=a[2],f=a[6],g=a[10];if(Math.abs(c-u)<r&&Math.abs(h-m)<r&&Math.abs(p-f)<r){if(Math.abs(c+u)<o&&Math.abs(h+m)<o&&Math.abs(p+f)<o&&Math.abs(l+d+g-3)<o)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,a=(d+1)/2,y=(g+1)/2,v=(c+u)/4,x=(h+m)/4,_=(p+f)/4;return t>a&&t>y?t<r?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(t),n=v/i,s=x/i):a>y?a<r?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(a),i=v/n,s=_/n):y<r?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(y),i=x/s,n=_/s),this.set(i,n,s,e),this}let y=Math.sqrt((f-p)*(f-p)+(h-m)*(h-m)+(u-c)*(u-c));return Math.abs(y)<.001&&(y=1),this.x=(f-p)/y,this.y=(h-m)/y,this.z=(u-c)/y,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class $t extends mt{constructor(t,e,i={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Qt(0,0,t,e),this.scissorTest=!1,this.viewport=new Qt(0,0,t,e);const n={width:t,height:e,depth:1};this.texture=new Kt(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:g,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,this.samples=void 0!==i.samples?i.samples:0}setSize(t,e,i=1){this.width===t&&this.height===e&&this.depth===i||(this.width=t,this.height=e,this.depth=i,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Yt(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class te extends Kt{constructor(t=null,e=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=p,this.minFilter=p,this.wrapR=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ee extends Kt{constructor(t=null,e=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=p,this.minFilter=p,this.wrapR=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ie{constructor(t=0,e=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=n}static slerpFlat(t,e,i,n,s,r,o){let a=i[n+0],l=i[n+1],c=i[n+2],h=i[n+3];const u=s[r+0],d=s[r+1],p=s[r+2],m=s[r+3];if(0===o)return t[e+0]=a,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===o)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=m);if(h!==m||a!==u||l!==d||c!==p){let t=1-o;const e=a*u+l*d+c*p+h*m,i=e>=0?1:-1,n=1-e*e;if(n>Number.EPSILON){const s=Math.sqrt(n),r=Math.atan2(s,e*i);t=Math.sin(t*r)/s,o=Math.sin(o*r)/s}const s=o*i;if(a=a*t+u*s,l=l*t+d*s,c=c*t+p*s,h=h*t+m*s,t===1-o){const t=1/Math.sqrt(a*a+l*l+c*c+h*h);a*=t,l*=t,c*=t,h*=t}}t[e]=a,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,i,n,s,r){const o=i[n],a=i[n+1],l=i[n+2],c=i[n+3],h=s[r],u=s[r+1],d=s[r+2],p=s[r+3];return t[e]=o*p+c*h+a*d-l*u,t[e+1]=a*p+c*u+l*h-o*d,t[e+2]=l*p+c*d+o*u-a*h,t[e+3]=c*p-o*h-a*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const i=t._x,n=t._y,s=t._z,r=t._order,o=Math.cos,a=Math.sin,l=o(i/2),c=o(n/2),h=o(s/2),u=a(i/2),d=a(n/2),p=a(s/2);switch(r){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],s=e[8],r=e[1],o=e[5],a=e[9],l=e[2],c=e[6],h=e[10],u=i+o+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-a)*t,this._y=(s-l)*t,this._z=(r-n)*t}else if(i>o&&i>h){const t=2*Math.sqrt(1+i-o-h);this._w=(c-a)/t,this._x=.25*t,this._y=(n+r)/t,this._z=(s+l)/t}else if(o>h){const t=2*Math.sqrt(1+o-i-h);this._w=(s-l)/t,this._x=(n+r)/t,this._y=.25*t,this._z=(a+c)/t}else{const t=2*Math.sqrt(1+h-i-o);this._w=(r-n)/t,this._x=(s+l)/t,this._y=(a+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(_t(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,s=t._z,r=t._w,o=e._x,a=e._y,l=e._z,c=e._w;return this._x=i*c+r*o+n*l-s*a,this._y=n*c+r*a+s*o-i*l,this._z=s*c+r*l+i*a-n*o,this._w=r*c-i*o-n*a-s*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,n=this._y,s=this._z,r=this._w;let o=r*t._w+i*t._x+n*t._y+s*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=i,this._y=n,this._z=s,this;const a=1-o*o;if(a<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*i+e*this._x,this._y=t*n+e*this._y,this._z=t*s+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(a),c=Math.atan2(l,o),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=r*h+this._w*u,this._x=i*h+this._x*u,this._y=n*h+this._y*u,this._z=s*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),n=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(e*Math.cos(n),i*Math.sin(s),i*Math.cos(s),e*Math.sin(n))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ne{constructor(t=0,e=0,i=0){ne.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(re.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(re.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6]*n,this.y=s[1]*e+s[4]*i+s[7]*n,this.z=s[2]*e+s[5]*i+s[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,s=t.elements,r=1/(s[3]*e+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*e+s[4]*i+s[8]*n+s[12])*r,this.y=(s[1]*e+s[5]*i+s[9]*n+s[13])*r,this.z=(s[2]*e+s[6]*i+s[10]*n+s[14])*r,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,s=t.x,r=t.y,o=t.z,a=t.w,l=a*e+r*n-o*i,c=a*i+o*e-s*n,h=a*n+s*i-r*e,u=-s*e-r*i-o*n;return this.x=l*a+u*-s+c*-o-h*-r,this.y=c*a+u*-r+h*-s-l*-o,this.z=h*a+u*-o+l*-r-c*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,s=t.elements;return this.x=s[0]*e+s[4]*i+s[8]*n,this.y=s[1]*e+s[5]*i+s[9]*n,this.z=s[2]*e+s[6]*i+s[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,s=t.z,r=e.x,o=e.y,a=e.z;return this.x=n*a-s*o,this.y=s*r-i*a,this.z=i*o-n*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return se.copy(this).projectOnVector(t),this.sub(se)}reflect(t){return this.sub(se.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(_t(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const se=new ne,re=new ie;class oe{constructor(t=new ne(1/0,1/0,1/0),e=new ne(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,n=1/0,s=-1/0,r=-1/0,o=-1/0;for(let a=0,l=t.length;a<l;a+=3){const l=t[a],c=t[a+1],h=t[a+2];l<e&&(e=l),c<i&&(i=c),h<n&&(n=h),l>s&&(s=l),c>r&&(r=c),h>o&&(o=h)}return this.min.set(e,i,n),this.max.set(s,r,o),this}setFromBufferAttribute(t){let e=1/0,i=1/0,n=1/0,s=-1/0,r=-1/0,o=-1/0;for(let a=0,l=t.count;a<l;a++){const l=t.getX(a),c=t.getY(a),h=t.getZ(a);l<e&&(e=l),c<i&&(i=c),h<n&&(n=h),l>s&&(s=l),c>r&&(r=c),h>o&&(o=h)}return this.min.set(e,i,n),this.max.set(s,r,o),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=le.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i)if(e&&null!=i.attributes&&void 0!==i.attributes.position){const e=i.attributes.position;for(let i=0,n=e.count;i<n;i++)le.fromBufferAttribute(e,i).applyMatrix4(t.matrixWorld),this.expandByPoint(le)}else null===i.boundingBox&&i.computeBoundingBox(),ce.copy(i.boundingBox),ce.applyMatrix4(t.matrixWorld),this.union(ce);const n=t.children;for(let t=0,i=n.length;t<i;t++)this.expandByObject(n[t],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,le),le.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ge),ye.subVectors(this.max,ge),he.subVectors(t.a,ge),ue.subVectors(t.b,ge),de.subVectors(t.c,ge),pe.subVectors(ue,he),me.subVectors(de,ue),fe.subVectors(he,de);let e=[0,-pe.z,pe.y,0,-me.z,me.y,0,-fe.z,fe.y,pe.z,0,-pe.x,me.z,0,-me.x,fe.z,0,-fe.x,-pe.y,pe.x,0,-me.y,me.x,0,-fe.y,fe.x,0];return!!_e(e,he,ue,de,ye)&&(e=[1,0,0,0,1,0,0,0,1],!!_e(e,he,ue,de,ye)&&(ve.crossVectors(pe,me),e=[ve.x,ve.y,ve.z],_e(e,he,ue,de,ye)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return le.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(le).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(ae[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ae[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ae[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ae[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ae[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ae[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ae[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ae[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ae)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const ae=[new ne,new ne,new ne,new ne,new ne,new ne,new ne,new ne],le=new ne,ce=new oe,he=new ne,ue=new ne,de=new ne,pe=new ne,me=new ne,fe=new ne,ge=new ne,ye=new ne,ve=new ne,xe=new ne;function _e(t,e,i,n,s){for(let r=0,o=t.length-3;r<=o;r+=3){xe.fromArray(t,r);const o=s.x*Math.abs(xe.x)+s.y*Math.abs(xe.y)+s.z*Math.abs(xe.z),a=e.dot(xe),l=i.dot(xe),c=n.dot(xe);if(Math.max(-Math.max(a,l,c),Math.min(a,l,c))>o)return!1}return!0}const be=new oe,we=new ne,Me=new ne,Se=new ne;class Ee{constructor(t=new ne,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):be.setFromPoints(t).getCenter(i);let n=0;for(let e=0,s=t.length;e<s;e++)n=Math.max(n,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Se.subVectors(t,this.center);const e=Se.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.add(Se.multiplyScalar(i/t)),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?Me.set(0,0,1).multiplyScalar(t.radius):Me.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(we.copy(t.center).add(Me)),this.expandByPoint(we.copy(t.center).sub(Me)),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Te=new ne,Ae=new ne,Ce=new ne,Re=new ne,Le=new ne,Pe=new ne,Ie=new ne;class De{constructor(t=new ne,e=new ne(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Te)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Te.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Te.copy(this.direction).multiplyScalar(e).add(this.origin),Te.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){Ae.copy(t).add(e).multiplyScalar(.5),Ce.copy(e).sub(t).normalize(),Re.copy(this.origin).sub(Ae);const s=.5*t.distanceTo(e),r=-this.direction.dot(Ce),o=Re.dot(this.direction),a=-Re.dot(Ce),l=Re.lengthSq(),c=Math.abs(1-r*r);let h,u,d,p;if(c>0)if(h=r*a-o,u=r*o-a,p=s*c,h>=0)if(u>=-p)if(u<=p){const t=1/c;h*=t,u*=t,d=h*(h+r*u+2*o)+u*(r*h+u+2*a)+l}else u=s,h=Math.max(0,-(r*u+o)),d=-h*h+u*(u+2*a)+l;else u=-s,h=Math.max(0,-(r*u+o)),d=-h*h+u*(u+2*a)+l;else u<=-p?(h=Math.max(0,-(-r*s+o)),u=h>0?-s:Math.min(Math.max(-s,-a),s),d=-h*h+u*(u+2*a)+l):u<=p?(h=0,u=Math.min(Math.max(-s,-a),s),d=u*(u+2*a)+l):(h=Math.max(0,-(r*s+o)),u=h>0?s:Math.min(Math.max(-s,-a),s),d=-h*h+u*(u+2*a)+l);else u=r>0?-s:s,h=Math.max(0,-(r*u+o)),d=-h*h+u*(u+2*a)+l;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),n&&n.copy(Ce).multiplyScalar(u).add(Ae),d}intersectSphere(t,e){Te.subVectors(t.center,this.origin);const i=Te.dot(this.direction),n=Te.dot(Te)-i*i,s=t.radius*t.radius;if(n>s)return null;const r=Math.sqrt(s-n),o=i-r,a=i+r;return o<0&&a<0?null:o<0?this.at(a,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,s,r,o,a;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(i=(t.min.x-u.x)*l,n=(t.max.x-u.x)*l):(i=(t.max.x-u.x)*l,n=(t.min.x-u.x)*l),c>=0?(s=(t.min.y-u.y)*c,r=(t.max.y-u.y)*c):(s=(t.max.y-u.y)*c,r=(t.min.y-u.y)*c),i>r||s>n?null:((s>i||i!=i)&&(i=s),(r<n||n!=n)&&(n=r),h>=0?(o=(t.min.z-u.z)*h,a=(t.max.z-u.z)*h):(o=(t.max.z-u.z)*h,a=(t.min.z-u.z)*h),i>a||o>n?null:((o>i||i!=i)&&(i=o),(a<n||n!=n)&&(n=a),n<0?null:this.at(i>=0?i:n,e)))}intersectsBox(t){return null!==this.intersectBox(t,Te)}intersectTriangle(t,e,i,n,s){Le.subVectors(e,t),Pe.subVectors(i,t),Ie.crossVectors(Le,Pe);let r,o=this.direction.dot(Ie);if(o>0){if(n)return null;r=1}else{if(!(o<0))return null;r=-1,o=-o}Re.subVectors(this.origin,t);const a=r*this.direction.dot(Pe.crossVectors(Re,Pe));if(a<0)return null;const l=r*this.direction.dot(Le.cross(Re));if(l<0)return null;if(a+l>o)return null;const c=-r*Re.dot(Ie);return c<0?null:this.at(c/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Ne{constructor(){Ne.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,i,n,s,r,o,a,l,c,h,u,d,p,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=s,g[5]=r,g[9]=o,g[13]=a,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ne).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/Be.setFromMatrixColumn(t,0).length(),s=1/Be.setFromMatrixColumn(t,1).length(),r=1/Be.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*s,e[5]=i[5]*s,e[6]=i[6]*s,e[7]=0,e[8]=i[8]*r,e[9]=i[9]*r,e[10]=i[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,n=t.y,s=t.z,r=Math.cos(i),o=Math.sin(i),a=Math.cos(n),l=Math.sin(n),c=Math.cos(s),h=Math.sin(s);if("XYZ"===t.order){const t=r*c,i=r*h,n=o*c,s=o*h;e[0]=a*c,e[4]=-a*h,e[8]=l,e[1]=i+n*l,e[5]=t-s*l,e[9]=-o*a,e[2]=s-t*l,e[6]=n+i*l,e[10]=r*a}else if("YXZ"===t.order){const t=a*c,i=a*h,n=l*c,s=l*h;e[0]=t+s*o,e[4]=n*o-i,e[8]=r*l,e[1]=r*h,e[5]=r*c,e[9]=-o,e[2]=i*o-n,e[6]=s+t*o,e[10]=r*a}else if("ZXY"===t.order){const t=a*c,i=a*h,n=l*c,s=l*h;e[0]=t-s*o,e[4]=-r*h,e[8]=n+i*o,e[1]=i+n*o,e[5]=r*c,e[9]=s-t*o,e[2]=-r*l,e[6]=o,e[10]=r*a}else if("ZYX"===t.order){const t=r*c,i=r*h,n=o*c,s=o*h;e[0]=a*c,e[4]=n*l-i,e[8]=t*l+s,e[1]=a*h,e[5]=s*l+t,e[9]=i*l-n,e[2]=-l,e[6]=o*a,e[10]=r*a}else if("YZX"===t.order){const t=r*a,i=r*l,n=o*a,s=o*l;e[0]=a*c,e[4]=s-t*h,e[8]=n*h+i,e[1]=h,e[5]=r*c,e[9]=-o*c,e[2]=-l*c,e[6]=i*h+n,e[10]=t-s*h}else if("XZY"===t.order){const t=r*a,i=r*l,n=o*a,s=o*l;e[0]=a*c,e[4]=-h,e[8]=l*c,e[1]=t*h+s,e[5]=r*c,e[9]=i*h-n,e[2]=n*h-i,e[6]=o*c,e[10]=s*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Oe,t,ze)}lookAt(t,e,i){const n=this.elements;return Ve.subVectors(t,e),0===Ve.lengthSq()&&(Ve.z=1),Ve.normalize(),Ue.crossVectors(i,Ve),0===Ue.lengthSq()&&(1===Math.abs(i.z)?Ve.x+=1e-4:Ve.z+=1e-4,Ve.normalize(),Ue.crossVectors(i,Ve)),Ue.normalize(),He.crossVectors(Ve,Ue),n[0]=Ue.x,n[4]=He.x,n[8]=Ve.x,n[1]=Ue.y,n[5]=He.y,n[9]=Ve.y,n[2]=Ue.z,n[6]=He.z,n[10]=Ve.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,s=this.elements,r=i[0],o=i[4],a=i[8],l=i[12],c=i[1],h=i[5],u=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],y=i[3],v=i[7],x=i[11],_=i[15],b=n[0],w=n[4],M=n[8],S=n[12],E=n[1],T=n[5],A=n[9],C=n[13],R=n[2],L=n[6],P=n[10],I=n[14],D=n[3],N=n[7],B=n[11],F=n[15];return s[0]=r*b+o*E+a*R+l*D,s[4]=r*w+o*T+a*L+l*N,s[8]=r*M+o*A+a*P+l*B,s[12]=r*S+o*C+a*I+l*F,s[1]=c*b+h*E+u*R+d*D,s[5]=c*w+h*T+u*L+d*N,s[9]=c*M+h*A+u*P+d*B,s[13]=c*S+h*C+u*I+d*F,s[2]=p*b+m*E+f*R+g*D,s[6]=p*w+m*T+f*L+g*N,s[10]=p*M+m*A+f*P+g*B,s[14]=p*S+m*C+f*I+g*F,s[3]=y*b+v*E+x*R+_*D,s[7]=y*w+v*T+x*L+_*N,s[11]=y*M+v*A+x*P+_*B,s[15]=y*S+v*C+x*I+_*F,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],s=t[12],r=t[1],o=t[5],a=t[9],l=t[13],c=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+s*a*h-n*l*h-s*o*u+i*l*u+n*o*d-i*a*d)+t[7]*(+e*a*d-e*l*u+s*r*u-n*r*d+n*l*c-s*a*c)+t[11]*(+e*l*h-e*o*d-s*r*h+i*r*d+s*o*c-i*l*c)+t[15]*(-n*o*c-e*a*h+e*o*u+n*r*h-i*r*u+i*a*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],r=t[4],o=t[5],a=t[6],l=t[7],c=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],y=h*f*l-m*u*l+m*a*d-o*f*d-h*a*g+o*u*g,v=p*u*l-c*f*l-p*a*d+r*f*d+c*a*g-r*u*g,x=c*m*l-p*h*l+p*o*d-r*m*d-c*o*g+r*h*g,_=p*h*a-c*m*a-p*o*u+r*m*u+c*o*f-r*h*f,b=e*y+i*v+n*x+s*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/b;return t[0]=y*w,t[1]=(m*u*s-h*f*s-m*n*d+i*f*d+h*n*g-i*u*g)*w,t[2]=(o*f*s-m*a*s+m*n*l-i*f*l-o*n*g+i*a*g)*w,t[3]=(h*a*s-o*u*s-h*n*l+i*u*l+o*n*d-i*a*d)*w,t[4]=v*w,t[5]=(c*f*s-p*u*s+p*n*d-e*f*d-c*n*g+e*u*g)*w,t[6]=(p*a*s-r*f*s-p*n*l+e*f*l+r*n*g-e*a*g)*w,t[7]=(r*u*s-c*a*s+c*n*l-e*u*l-r*n*d+e*a*d)*w,t[8]=x*w,t[9]=(p*h*s-c*m*s-p*i*d+e*m*d+c*i*g-e*h*g)*w,t[10]=(r*m*s-p*o*s+p*i*l-e*m*l-r*i*g+e*o*g)*w,t[11]=(c*o*s-r*h*s-c*i*l+e*h*l+r*i*d-e*o*d)*w,t[12]=_*w,t[13]=(c*m*n-p*h*n+p*i*u-e*m*u-c*i*f+e*h*f)*w,t[14]=(p*o*n-r*m*n-p*i*a+e*m*a+r*i*f-e*o*f)*w,t[15]=(r*h*n-c*o*n+c*i*a-e*h*a-r*i*u+e*o*u)*w,this}scale(t){const e=this.elements,i=t.x,n=t.y,s=t.z;return e[0]*=i,e[4]*=n,e[8]*=s,e[1]*=i,e[5]*=n,e[9]*=s,e[2]*=i,e[6]*=n,e[10]*=s,e[3]*=i,e[7]*=n,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),s=1-i,r=t.x,o=t.y,a=t.z,l=s*r,c=s*o;return this.set(l*r+i,l*o-n*a,l*a+n*o,0,l*o+n*a,c*o+i,c*a-n*r,0,l*a-n*o,c*a+n*r,s*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,s,r){return this.set(1,i,s,0,t,1,r,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,s=e._x,r=e._y,o=e._z,a=e._w,l=s+s,c=r+r,h=o+o,u=s*l,d=s*c,p=s*h,m=r*c,f=r*h,g=o*h,y=a*l,v=a*c,x=a*h,_=i.x,b=i.y,w=i.z;return n[0]=(1-(m+g))*_,n[1]=(d+x)*_,n[2]=(p-v)*_,n[3]=0,n[4]=(d-x)*b,n[5]=(1-(u+g))*b,n[6]=(f+y)*b,n[7]=0,n[8]=(p+v)*w,n[9]=(f-y)*w,n[10]=(1-(u+m))*w,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let s=Be.set(n[0],n[1],n[2]).length();const r=Be.set(n[4],n[5],n[6]).length(),o=Be.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),t.x=n[12],t.y=n[13],t.z=n[14],Fe.copy(this);const a=1/s,l=1/r,c=1/o;return Fe.elements[0]*=a,Fe.elements[1]*=a,Fe.elements[2]*=a,Fe.elements[4]*=l,Fe.elements[5]*=l,Fe.elements[6]*=l,Fe.elements[8]*=c,Fe.elements[9]*=c,Fe.elements[10]*=c,e.setFromRotationMatrix(Fe),i.x=s,i.y=r,i.z=o,this}makePerspective(t,e,i,n,s,r){const o=this.elements,a=2*s/(e-t),l=2*s/(i-n),c=(e+t)/(e-t),h=(i+n)/(i-n),u=-(r+s)/(r-s),d=-2*r*s/(r-s);return o[0]=a,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,i,n,s,r){const o=this.elements,a=1/(e-t),l=1/(i-n),c=1/(r-s),h=(e+t)*a,u=(i+n)*l,d=(r+s)*c;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Be=new ne,Fe=new Ne,Oe=new ne(0,0,0),ze=new ne(1,1,1),Ue=new ne,He=new ne,Ve=new ne,ke=new Ne,Ge=new ie;class We{constructor(t=0,e=0,i=0,n=We.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,s=n[0],r=n[4],o=n[8],a=n[1],l=n[5],c=n[9],h=n[2],u=n[6],d=n[10];switch(e){case"XYZ":this._y=Math.asin(_t(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-_t(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(a,l)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(_t(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(a,s));break;case"ZYX":this._y=Math.asin(-_t(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(a,s)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(_t(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-_t(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return ke.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ke,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ge.setFromEuler(this),this.setFromQuaternion(Ge,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}We.DefaultOrder="XYZ",We.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class qe{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let je=0;const Xe=new ne,Ye=new ie,Ze=new Ne,Je=new ne,Ke=new ne,Qe=new ne,$e=new ie,ti=new ne(1,0,0),ei=new ne(0,1,0),ii=new ne(0,0,1),ni={type:"added"},si={type:"removed"};class ri extends mt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:je++}),this.uuid=xt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ri.DefaultUp.clone();const t=new ne,e=new We,i=new ie,n=new ne(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Ne},normalMatrix:{value:new Lt}}),this.matrix=new Ne,this.matrixWorld=new Ne,this.matrixAutoUpdate=ri.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=ri.DefaultMatrixWorldAutoUpdate,this.layers=new qe,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ye.setFromAxisAngle(t,e),this.quaternion.multiply(Ye),this}rotateOnWorldAxis(t,e){return Ye.setFromAxisAngle(t,e),this.quaternion.premultiply(Ye),this}rotateX(t){return this.rotateOnAxis(ti,t)}rotateY(t){return this.rotateOnAxis(ei,t)}rotateZ(t){return this.rotateOnAxis(ii,t)}translateOnAxis(t,e){return Xe.copy(t).applyQuaternion(this.quaternion),this.position.add(Xe.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ti,t)}translateY(t){return this.translateOnAxis(ei,t)}translateZ(t){return this.translateOnAxis(ii,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Ze.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Je.copy(t):Je.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Ke.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ze.lookAt(Ke,Je,this.up):Ze.lookAt(Je,Ke,this.up),this.quaternion.setFromRotationMatrix(Ze),n&&(Ze.extractRotation(n.matrixWorld),Ye.setFromRotationMatrix(Ze),this.quaternion.premultiply(Ye.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ni)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(si)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(si)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Ze.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ze.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ze),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(t,e);if(void 0!==n)return n}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ke,t,Qe),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ke,$e,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++){const n=e[i];!0!==n.matrixWorldAutoUpdate&&!0!==t||n.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&!0===i.matrixWorldAutoUpdate&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++){const i=t[e];!0===i.matrixWorldAutoUpdate&&i.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function s(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const n=i[e];s(t.shapes,n)}else s(t.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,n=this.material.length;i<n;i++)e.push(s(t.materials,this.material[i]));n.material=e}else n.material=s(t.materials,this.material);if(this.children.length>0){n.children=[];for(let e=0;e<this.children.length;e++)n.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];n.animations.push(s(t.animations,i))}}if(e){const e=r(t.geometries),n=r(t.materials),s=r(t.textures),o=r(t.images),a=r(t.shapes),l=r(t.skeletons),c=r(t.animations),h=r(t.nodes);e.length>0&&(i.geometries=e),n.length>0&&(i.materials=n),s.length>0&&(i.textures=s),o.length>0&&(i.images=o),a.length>0&&(i.shapes=a),l.length>0&&(i.skeletons=l),c.length>0&&(i.animations=c),h.length>0&&(i.nodes=h)}return i.object=n,i;function r(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}ri.DefaultUp=new ne(0,1,0),ri.DefaultMatrixAutoUpdate=!0,ri.DefaultMatrixWorldAutoUpdate=!0;const oi=new ne,ai=new ne,li=new ne,ci=new ne,hi=new ne,ui=new ne,di=new ne,pi=new ne,mi=new ne,fi=new ne;class gi{constructor(t=new ne,e=new ne,i=new ne){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),oi.subVectors(t,e),n.cross(oi);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(t,e,i,n,s){oi.subVectors(n,e),ai.subVectors(i,e),li.subVectors(t,e);const r=oi.dot(oi),o=oi.dot(ai),a=oi.dot(li),l=ai.dot(ai),c=ai.dot(li),h=r*l-o*o;if(0===h)return s.set(-2,-1,-1);const u=1/h,d=(l*a-o*c)*u,p=(r*c-o*a)*u;return s.set(1-d-p,p,d)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,ci),ci.x>=0&&ci.y>=0&&ci.x+ci.y<=1}static getUV(t,e,i,n,s,r,o,a){return this.getBarycoord(t,e,i,n,ci),a.set(0,0),a.addScaledVector(s,ci.x),a.addScaledVector(r,ci.y),a.addScaledVector(o,ci.z),a}static isFrontFacing(t,e,i,n){return oi.subVectors(i,e),ai.subVectors(t,e),oi.cross(ai).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}setFromAttributeAndIndices(t,e,i,n){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return oi.subVectors(this.c,this.b),ai.subVectors(this.a,this.b),.5*oi.cross(ai).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return gi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return gi.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,n,s){return gi.getUV(t,this.a,this.b,this.c,e,i,n,s)}containsPoint(t){return gi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return gi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,s=this.c;let r,o;hi.subVectors(n,i),ui.subVectors(s,i),pi.subVectors(t,i);const a=hi.dot(pi),l=ui.dot(pi);if(a<=0&&l<=0)return e.copy(i);mi.subVectors(t,n);const c=hi.dot(mi),h=ui.dot(mi);if(c>=0&&h<=c)return e.copy(n);const u=a*h-c*l;if(u<=0&&a>=0&&c<=0)return r=a/(a-c),e.copy(i).addScaledVector(hi,r);fi.subVectors(t,s);const d=hi.dot(fi),p=ui.dot(fi);if(p>=0&&d<=p)return e.copy(s);const m=d*l-a*p;if(m<=0&&l>=0&&p<=0)return o=l/(l-p),e.copy(i).addScaledVector(ui,o);const f=c*p-d*h;if(f<=0&&h-c>=0&&d-p>=0)return di.subVectors(s,n),o=(h-c)/(h-c+(d-p)),e.copy(n).addScaledVector(di,o);const g=1/(f+m+u);return r=m*g,o=u*g,e.copy(i).addScaledVector(hi,r).addScaledVector(ui,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let yi=0;class vi extends mt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:yi++}),this.uuid=xt(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=n,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ht,this.stencilZFail=ht,this.stencilZPass=ht,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const i=t[e];if(void 0===i){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e){const e=n(t.textures),s=n(t.images);e.length>0&&(i.textures=e),s.length>0&&(i.images=s)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(null!==e){const t=e.length;i=new Array(t);for(let n=0;n!==t;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class xi extends vi{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new qt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const _i=new ne,bi=new Rt;class wi{constructor(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=ut,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)bi.fromBufferAttribute(this,e),bi.applyMatrix3(t),this.setXY(e,bi.x,bi.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)_i.fromBufferAttribute(this,e),_i.applyMatrix3(t),this.setXYZ(e,_i.x,_i.y,_i.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)_i.fromBufferAttribute(this,e),_i.applyMatrix4(t),this.setXYZ(e,_i.x,_i.y,_i.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)_i.fromBufferAttribute(this,e),_i.applyNormalMatrix(t),this.setXYZ(e,_i.x,_i.y,_i.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)_i.fromBufferAttribute(this,e),_i.transformDirection(t),this.setXYZ(e,_i.x,_i.y,_i.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Tt(e,this.array)),e}setX(t,e){return this.normalized&&(e=At(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Tt(e,this.array)),e}setY(t,e){return this.normalized&&(e=At(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Tt(e,this.array)),e}setZ(t,e){return this.normalized&&(e=At(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Tt(e,this.array)),e}setW(t,e){return this.normalized&&(e=At(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=At(e,this.array),i=At(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=At(e,this.array),i=At(i,this.array),n=At(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,s){return t*=this.itemSize,this.normalized&&(e=At(e,this.array),i=At(i,this.array),n=At(n,this.array),s=At(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==ut&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Mi extends wi{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Si extends wi{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Ei extends wi{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Ti=0;const Ai=new Ne,Ci=new ri,Ri=new ne,Li=new oe,Pi=new oe,Ii=new ne;class Di extends mt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ti++}),this.uuid=xt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Pt(t)?Si:Mi)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new Lt).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(t),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ai.makeRotationFromQuaternion(t),this.applyMatrix4(Ai),this}rotateX(t){return Ai.makeRotationX(t),this.applyMatrix4(Ai),this}rotateY(t){return Ai.makeRotationY(t),this.applyMatrix4(Ai),this}rotateZ(t){return Ai.makeRotationZ(t),this.applyMatrix4(Ai),this}translate(t,e,i){return Ai.makeTranslation(t,e,i),this.applyMatrix4(Ai),this}scale(t,e,i){return Ai.makeScale(t,e,i),this.applyMatrix4(Ai),this}lookAt(t){return Ci.lookAt(t),Ci.updateMatrix(),this.applyMatrix4(Ci.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ri).negate(),this.translate(Ri.x,Ri.y,Ri.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Ei(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new oe);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new ne(-1/0,-1/0,-1/0),new ne(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];Li.setFromBufferAttribute(i),this.morphTargetsRelative?(Ii.addVectors(this.boundingBox.min,Li.min),this.boundingBox.expandByPoint(Ii),Ii.addVectors(this.boundingBox.max,Li.max),this.boundingBox.expandByPoint(Ii)):(this.boundingBox.expandByPoint(Li.min),this.boundingBox.expandByPoint(Li.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ee);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new ne,1/0);if(t){const i=this.boundingSphere.center;if(Li.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];Pi.setFromBufferAttribute(i),this.morphTargetsRelative?(Ii.addVectors(Li.min,Pi.min),Li.expandByPoint(Ii),Ii.addVectors(Li.max,Pi.max),Li.expandByPoint(Ii)):(Li.expandByPoint(Pi.min),Li.expandByPoint(Pi.max))}Li.getCenter(i);let n=0;for(let e=0,s=t.count;e<s;e++)Ii.fromBufferAttribute(t,e),n=Math.max(n,i.distanceToSquared(Ii));if(e)for(let s=0,r=e.length;s<r;s++){const r=e[s],o=this.morphTargetsRelative;for(let e=0,s=r.count;e<s;e++)Ii.fromBufferAttribute(r,e),o&&(Ri.fromBufferAttribute(t,e),Ii.add(Ri)),n=Math.max(n,i.distanceToSquared(Ii))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=t.array,n=e.position.array,s=e.normal.array,r=e.uv.array,o=n.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new wi(new Float32Array(4*o),4));const a=this.getAttribute("tangent").array,l=[],c=[];for(let t=0;t<o;t++)l[t]=new ne,c[t]=new ne;const h=new ne,u=new ne,d=new ne,p=new Rt,m=new Rt,f=new Rt,g=new ne,y=new ne;function v(t,e,i){h.fromArray(n,3*t),u.fromArray(n,3*e),d.fromArray(n,3*i),p.fromArray(r,2*t),m.fromArray(r,2*e),f.fromArray(r,2*i),u.sub(h),d.sub(h),m.sub(p),f.sub(p);const s=1/(m.x*f.y-f.x*m.y);isFinite(s)&&(g.copy(u).multiplyScalar(f.y).addScaledVector(d,-m.y).multiplyScalar(s),y.copy(d).multiplyScalar(m.x).addScaledVector(u,-f.x).multiplyScalar(s),l[t].add(g),l[e].add(g),l[i].add(g),c[t].add(y),c[e].add(y),c[i].add(y))}let x=this.groups;0===x.length&&(x=[{start:0,count:i.length}]);for(let t=0,e=x.length;t<e;++t){const e=x[t],n=e.start;for(let t=n,s=n+e.count;t<s;t+=3)v(i[t+0],i[t+1],i[t+2])}const _=new ne,b=new ne,w=new ne,M=new ne;function S(t){w.fromArray(s,3*t),M.copy(w);const e=l[t];_.copy(e),_.sub(w.multiplyScalar(w.dot(e))).normalize(),b.crossVectors(M,e);const i=b.dot(c[t])<0?-1:1;a[4*t]=_.x,a[4*t+1]=_.y,a[4*t+2]=_.z,a[4*t+3]=i}for(let t=0,e=x.length;t<e;++t){const e=x[t],n=e.start;for(let t=n,s=n+e.count;t<s;t+=3)S(i[t+0]),S(i[t+1]),S(i[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new wi(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const n=new ne,s=new ne,r=new ne,o=new ne,a=new ne,l=new ne,c=new ne,h=new ne;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),m=t.getX(u+2);n.fromBufferAttribute(e,d),s.fromBufferAttribute(e,p),r.fromBufferAttribute(e,m),c.subVectors(r,s),h.subVectors(n,s),c.cross(h),o.fromBufferAttribute(i,d),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),o.add(c),a.add(c),l.add(c),i.setXYZ(d,o.x,o.y,o.z),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,o=e.count;t<o;t+=3)n.fromBufferAttribute(e,t+0),s.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),c.subVectors(r,s),h.subVectors(n,s),c.cross(h),i.setXYZ(t+0,c.x,c.y,c.z),i.setXYZ(t+1,c.x,c.y,c.z),i.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Ii.fromBufferAttribute(t,e),Ii.normalize(),t.setXYZ(e,Ii.x,Ii.y,Ii.z)}toNonIndexed(){function t(t,e){const i=t.array,n=t.itemSize,s=t.normalized,r=new i.constructor(e.length*n);let o=0,a=0;for(let s=0,l=e.length;s<l;s++){o=t.isInterleavedBufferAttribute?e[s]*t.data.stride+t.offset:e[s]*n;for(let t=0;t<n;t++)r[a++]=i[o++]}return new wi(r,n,s)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Di,i=this.index.array,n=this.attributes;for(const s in n){const r=t(n[s],i);e.setAttribute(s,r)}const s=this.morphAttributes;for(const n in s){const r=[],o=s[n];for(let e=0,n=o.length;e<n;e++){const n=t(o[e],i);r.push(n)}e.morphAttributes[n]=r}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let t=0,i=r.length;t<i;t++){const i=r[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const e in i){const n=i[e];t.data.attributes[e]=n.toJSON(t.data)}const n={};let s=!1;for(const e in this.morphAttributes){const i=this.morphAttributes[e],r=[];for(let e=0,n=i.length;e<n;e++){const n=i[e];r.push(n.toJSON(t.data))}r.length>0&&(n[e]=r,s=!0)}s&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return null!==o&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone(e));const n=t.attributes;for(const t in n){const i=n[t];this.setAttribute(t,i.clone(e))}const s=t.morphAttributes;for(const t in s){const i=[],n=s[t];for(let t=0,s=n.length;t<s;t++)i.push(n[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let t=0,e=r.length;t<e;t++){const e=r[t];this.addGroup(e.start,e.count,e.materialIndex)}const o=t.boundingBox;null!==o&&(this.boundingBox=o.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ni=new Ne,Bi=new De,Fi=new Ee,Oi=new ne,zi=new ne,Ui=new ne,Hi=new ne,Vi=new ne,ki=new ne,Gi=new ne,Wi=new ne,qi=new ne,ji=new Rt,Xi=new Rt,Yi=new Rt,Zi=new ne,Ji=new ne;class Ki extends ri{constructor(t=new Di,e=new xi){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}raycast(t,e){const i=this.geometry,n=this.material,s=this.matrixWorld;if(void 0===n)return;if(null===i.boundingSphere&&i.computeBoundingSphere(),Fi.copy(i.boundingSphere),Fi.applyMatrix4(s),!1===t.ray.intersectsSphere(Fi))return;if(Ni.copy(s).invert(),Bi.copy(t.ray).applyMatrix4(Ni),null!==i.boundingBox&&!1===Bi.intersectsBox(i.boundingBox))return;let r;const o=i.index,a=i.attributes.position,l=i.morphAttributes.position,c=i.morphTargetsRelative,h=i.attributes.uv,u=i.attributes.uv2,d=i.groups,p=i.drawRange;if(null!==o)if(Array.isArray(n))for(let i=0,s=d.length;i<s;i++){const s=d[i],m=n[s.materialIndex];for(let i=Math.max(s.start,p.start),n=Math.min(o.count,Math.min(s.start+s.count,p.start+p.count));i<n;i+=3){const n=o.getX(i),d=o.getX(i+1),p=o.getX(i+2);r=Qi(this,m,t,Bi,a,l,c,h,u,n,d,p),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=s.materialIndex,e.push(r))}}else for(let i=Math.max(0,p.start),s=Math.min(o.count,p.start+p.count);i<s;i+=3){const s=o.getX(i),d=o.getX(i+1),p=o.getX(i+2);r=Qi(this,n,t,Bi,a,l,c,h,u,s,d,p),r&&(r.faceIndex=Math.floor(i/3),e.push(r))}else if(void 0!==a)if(Array.isArray(n))for(let i=0,s=d.length;i<s;i++){const s=d[i],o=n[s.materialIndex];for(let i=Math.max(s.start,p.start),n=Math.min(a.count,Math.min(s.start+s.count,p.start+p.count));i<n;i+=3)r=Qi(this,o,t,Bi,a,l,c,h,u,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=s.materialIndex,e.push(r))}else for(let i=Math.max(0,p.start),s=Math.min(a.count,p.start+p.count);i<s;i+=3)r=Qi(this,n,t,Bi,a,l,c,h,u,i,i+1,i+2),r&&(r.faceIndex=Math.floor(i/3),e.push(r))}}function Qi(t,e,i,n,s,r,o,a,l,c,h,u){Oi.fromBufferAttribute(s,c),zi.fromBufferAttribute(s,h),Ui.fromBufferAttribute(s,u);const d=t.morphTargetInfluences;if(r&&d){Gi.set(0,0,0),Wi.set(0,0,0),qi.set(0,0,0);for(let t=0,e=r.length;t<e;t++){const e=d[t],i=r[t];0!==e&&(Hi.fromBufferAttribute(i,c),Vi.fromBufferAttribute(i,h),ki.fromBufferAttribute(i,u),o?(Gi.addScaledVector(Hi,e),Wi.addScaledVector(Vi,e),qi.addScaledVector(ki,e)):(Gi.addScaledVector(Hi.sub(Oi),e),Wi.addScaledVector(Vi.sub(zi),e),qi.addScaledVector(ki.sub(Ui),e)))}Oi.add(Gi),zi.add(Wi),Ui.add(qi)}t.isSkinnedMesh&&(t.boneTransform(c,Oi),t.boneTransform(h,zi),t.boneTransform(u,Ui));const p=function(t,e,i,n,s,r,o,a){let l;if(l=1===e.side?n.intersectTriangle(o,r,s,!0,a):n.intersectTriangle(s,r,o,2!==e.side,a),null===l)return null;Ji.copy(a),Ji.applyMatrix4(t.matrixWorld);const c=i.ray.origin.distanceTo(Ji);return c<i.near||c>i.far?null:{distance:c,point:Ji.clone(),object:t}}(t,e,i,n,Oi,zi,Ui,Zi);if(p){a&&(ji.fromBufferAttribute(a,c),Xi.fromBufferAttribute(a,h),Yi.fromBufferAttribute(a,u),p.uv=gi.getUV(Zi,Oi,zi,Ui,ji,Xi,Yi,new Rt)),l&&(ji.fromBufferAttribute(l,c),Xi.fromBufferAttribute(l,h),Yi.fromBufferAttribute(l,u),p.uv2=gi.getUV(Zi,Oi,zi,Ui,ji,Xi,Yi,new Rt));const t={a:c,b:h,c:u,normal:new ne,materialIndex:0};gi.getNormal(Oi,zi,Ui,t.normal),p.face=t}return p}class $i extends Di{constructor(t=1,e=1,i=1,n=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:s,depthSegments:r};const o=this;n=Math.floor(n),s=Math.floor(s),r=Math.floor(r);const a=[],l=[],c=[],h=[];let u=0,d=0;function p(t,e,i,n,s,r,p,m,f,g,y){const v=r/f,x=p/g,_=r/2,b=p/2,w=m/2,M=f+1,S=g+1;let E=0,T=0;const A=new ne;for(let r=0;r<S;r++){const o=r*x-b;for(let a=0;a<M;a++){const u=a*v-_;A[t]=u*n,A[e]=o*s,A[i]=w,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[i]=m>0?1:-1,c.push(A.x,A.y,A.z),h.push(a/f),h.push(1-r/g),E+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){const i=u+e+M*t,n=u+e+M*(t+1),s=u+(e+1)+M*(t+1),r=u+(e+1)+M*t;a.push(i,n,r),a.push(n,s,r),T+=6}o.addGroup(d,T,y),d+=T,u+=E}p("z","y","x",-1,-1,i,e,t,r,s,0),p("z","y","x",1,-1,i,e,-t,r,s,1),p("x","z","y",1,1,t,i,e,n,r,2),p("x","z","y",1,-1,t,i,-e,n,r,3),p("x","y","z",1,-1,t,e,i,n,s,4),p("x","y","z",-1,-1,t,e,-i,n,s,5),this.setIndex(a),this.setAttribute("position",new Ei(l,3)),this.setAttribute("normal",new Ei(c,3)),this.setAttribute("uv",new Ei(h,2))}static fromJSON(t){return new $i(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function tn(t){const e={};for(const i in t){e[i]={};for(const n in t[i]){const s=t[i][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?e[i][n]=s.clone():Array.isArray(s)?e[i][n]=s.slice():e[i][n]=s}}return e}function en(t){const e={};for(let i=0;i<t.length;i++){const n=tn(t[i]);for(const t in n)e[t]=n[t]}return e}const nn={clone:tn,merge:en};class sn extends vi{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=tn(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let i=0;i<t.length;i++)e.push(t[i].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class rn extends ri{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ne,this.projectionMatrix=new Ne,this.projectionMatrixInverse=new Ne}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class on extends rn{constructor(t=50,e=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*vt*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*yt*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*vt*Math.atan(Math.tan(.5*yt*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,n,s,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*yt*this.fov)/this.zoom,i=2*e,n=this.aspect*i,s=-.5*n;const r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,o=r.fullHeight;s+=r.offsetX*n/t,e-=r.offsetY*i/o,n*=r.width/t,i*=r.height/o}const o=this.filmOffset;0!==o&&(s+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const an=90;class ln extends ri{constructor(t,e,i){super(),this.type="CubeCamera",this.renderTarget=i;const n=new on(an,1,t,e);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new ne(1,0,0)),this.add(n);const s=new on(an,1,t,e);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new ne(-1,0,0)),this.add(s);const r=new on(an,1,t,e);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new ne(0,1,0)),this.add(r);const o=new on(an,1,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new ne(0,-1,0)),this.add(o);const a=new on(an,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new ne(0,0,1)),this.add(a);const l=new on(an,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new ne(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const i=this.renderTarget,[n,s,r,o,a,l]=this.children,c=t.getRenderTarget(),h=t.toneMapping,u=t.xr.enabled;t.toneMapping=0,t.xr.enabled=!1;const d=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0),t.render(e,n),t.setRenderTarget(i,1),t.render(e,s),t.setRenderTarget(i,2),t.render(e,r),t.setRenderTarget(i,3),t.render(e,o),t.setRenderTarget(i,4),t.render(e,a),i.texture.generateMipmaps=d,t.setRenderTarget(i,5),t.render(e,l),t.setRenderTarget(c),t.toneMapping=h,t.xr.enabled=u,i.texture.needsPMREMUpdate=!0}}class cn extends Kt{constructor(t,e,i,n,s,o,a,l,c,h){super(t=void 0!==t?t:[],e=void 0!==e?e:r,i,n,s,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class hn extends $t{constructor(t,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},n=[i,i,i,i,i,i];this.texture=new cn(n,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:g}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={tEquirect:{value:null}},n="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",s="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",r=new $i(5,5,5),o=new sn({name:"CubemapFromEquirect",uniforms:tn(i),vertexShader:n,fragmentShader:s,side:1,blending:0});o.uniforms.tEquirect.value=e;const a=new Ki(r,o),l=e.minFilter;return e.minFilter===v&&(e.minFilter=g),new ln(1,10,this).update(t,a),e.minFilter=l,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,i,n){const s=t.getRenderTarget();for(let s=0;s<6;s++)t.setRenderTarget(this,s),t.clear(e,i,n);t.setRenderTarget(s)}}const un=new ne,dn=new ne,pn=new Lt;class mn{constructor(t=new ne(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const n=un.subVectors(i,e).cross(dn.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const i=t.delta(un),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:e.copy(i).multiplyScalar(s).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||pn.getNormalMatrix(t),n=this.coplanarPoint(un).applyMatrix4(t),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const fn=new Ee,gn=new ne;class yn{constructor(t=new mn,e=new mn,i=new mn,n=new mn,s=new mn,r=new mn){this.planes=[t,e,i,n,s,r]}set(t,e,i,n,s,r){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(i),o[3].copy(n),o[4].copy(s),o[5].copy(r),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,i=t.elements,n=i[0],s=i[1],r=i[2],o=i[3],a=i[4],l=i[5],c=i[6],h=i[7],u=i[8],d=i[9],p=i[10],m=i[11],f=i[12],g=i[13],y=i[14],v=i[15];return e[0].setComponents(o-n,h-a,m-u,v-f).normalize(),e[1].setComponents(o+n,h+a,m+u,v+f).normalize(),e[2].setComponents(o+s,h+l,m+d,v+g).normalize(),e[3].setComponents(o-s,h-l,m-d,v-g).normalize(),e[4].setComponents(o-r,h-c,m-p,v-y).normalize(),e[5].setComponents(o+r,h+c,m+p,v+y).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),fn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(fn)}intersectsSprite(t){return fn.center.set(0,0,0),fn.radius=.7071067811865476,fn.applyMatrix4(t.matrixWorld),this.intersectsSphere(fn)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(i)<n)return!1;return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(gn.x=n.normal.x>0?t.max.x:t.min.x,gn.y=n.normal.y>0?t.max.y:t.min.y,gn.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(gn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function vn(){let t=null,e=!1,i=null,n=null;function s(e,r){i(e,r),n=t.requestAnimationFrame(s)}return{start:function(){!0!==e&&null!==i&&(n=t.requestAnimationFrame(s),e=!0)},stop:function(){t.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function xn(t,e){const i=e.isWebGL2,n=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),n.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const i=n.get(e);i&&(t.deleteBuffer(i.buffer),n.delete(e))},update:function(e,s){if(e.isGLBufferAttribute){const t=n.get(e);return void((!t||t.version<e.version)&&n.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const r=n.get(e);void 0===r?n.set(e,function(e,n){const s=e.array,r=e.usage,o=t.createBuffer();let a;if(t.bindBuffer(n,o),t.bufferData(n,s,r),e.onUploadCallback(),s instanceof Float32Array)a=t.FLOAT;else if(s instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!i)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");a=t.HALF_FLOAT}else a=t.UNSIGNED_SHORT;else if(s instanceof Int16Array)a=t.SHORT;else if(s instanceof Uint32Array)a=t.UNSIGNED_INT;else if(s instanceof Int32Array)a=t.INT;else if(s instanceof Int8Array)a=t.BYTE;else if(s instanceof Uint8Array)a=t.UNSIGNED_BYTE;else{if(!(s instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+s);a=t.UNSIGNED_BYTE}return{buffer:o,type:a,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version}}(e,s)):r.version<e.version&&(function(e,n,s){const r=n.array,o=n.updateRange;t.bindBuffer(s,e),-1===o.count?t.bufferSubData(s,0,r):(i?t.bufferSubData(s,o.offset*r.BYTES_PER_ELEMENT,r,o.offset,o.count):t.bufferSubData(s,o.offset*r.BYTES_PER_ELEMENT,r.subarray(o.offset,o.offset+o.count)),o.count=-1)}(r.buffer,e,s),r.version=e.version)}}}class _n extends Di{constructor(t=1,e=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};const s=t/2,r=e/2,o=Math.floor(i),a=Math.floor(n),l=o+1,c=a+1,h=t/o,u=e/a,d=[],p=[],m=[],f=[];for(let t=0;t<c;t++){const e=t*u-r;for(let i=0;i<l;i++){const n=i*h-s;p.push(n,-e,0),m.push(0,0,1),f.push(i/o),f.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<o;e++){const i=e+l*t,n=e+l*(t+1),s=e+1+l*(t+1),r=e+1+l*t;d.push(i,n,r),d.push(n,s,r)}this.setIndex(d),this.setAttribute("position",new Ei(p,3)),this.setAttribute("normal",new Ei(m,3)),this.setAttribute("uv",new Ei(f,2))}static fromJSON(t){return new _n(t.width,t.height,t.widthSegments,t.heightSegments)}}const bn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n\t\tfloat x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n\t\tfloat x2 = x * x;\n\t\tfloat x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n\t\treturn ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,\t0.0556434,\n\t\t-1.5371385,\t1.8760108, -0.2040259,\n\t\t-0.4985314,\t0.0415560,\t1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\n#define Material_LightProbeLOD( material )\t(0)",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},wn={common:{diffuse:{value:new qt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Lt},uv2Transform:{value:new Lt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Rt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new qt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new qt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Lt}},sprite:{diffuse:{value:new qt(16777215)},opacity:{value:1},center:{value:new Rt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Lt}}},Mn={basic:{uniforms:en([wn.common,wn.specularmap,wn.envmap,wn.aomap,wn.lightmap,wn.fog]),vertexShader:bn.meshbasic_vert,fragmentShader:bn.meshbasic_frag},lambert:{uniforms:en([wn.common,wn.specularmap,wn.envmap,wn.aomap,wn.lightmap,wn.emissivemap,wn.bumpmap,wn.normalmap,wn.displacementmap,wn.fog,wn.lights,{emissive:{value:new qt(0)}}]),vertexShader:bn.meshlambert_vert,fragmentShader:bn.meshlambert_frag},phong:{uniforms:en([wn.common,wn.specularmap,wn.envmap,wn.aomap,wn.lightmap,wn.emissivemap,wn.bumpmap,wn.normalmap,wn.displacementmap,wn.fog,wn.lights,{emissive:{value:new qt(0)},specular:{value:new qt(1118481)},shininess:{value:30}}]),vertexShader:bn.meshphong_vert,fragmentShader:bn.meshphong_frag},standard:{uniforms:en([wn.common,wn.envmap,wn.aomap,wn.lightmap,wn.emissivemap,wn.bumpmap,wn.normalmap,wn.displacementmap,wn.roughnessmap,wn.metalnessmap,wn.fog,wn.lights,{emissive:{value:new qt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:bn.meshphysical_vert,fragmentShader:bn.meshphysical_frag},toon:{uniforms:en([wn.common,wn.aomap,wn.lightmap,wn.emissivemap,wn.bumpmap,wn.normalmap,wn.displacementmap,wn.gradientmap,wn.fog,wn.lights,{emissive:{value:new qt(0)}}]),vertexShader:bn.meshtoon_vert,fragmentShader:bn.meshtoon_frag},matcap:{uniforms:en([wn.common,wn.bumpmap,wn.normalmap,wn.displacementmap,wn.fog,{matcap:{value:null}}]),vertexShader:bn.meshmatcap_vert,fragmentShader:bn.meshmatcap_frag},points:{uniforms:en([wn.points,wn.fog]),vertexShader:bn.points_vert,fragmentShader:bn.points_frag},dashed:{uniforms:en([wn.common,wn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:bn.linedashed_vert,fragmentShader:bn.linedashed_frag},depth:{uniforms:en([wn.common,wn.displacementmap]),vertexShader:bn.depth_vert,fragmentShader:bn.depth_frag},normal:{uniforms:en([wn.common,wn.bumpmap,wn.normalmap,wn.displacementmap,{opacity:{value:1}}]),vertexShader:bn.meshnormal_vert,fragmentShader:bn.meshnormal_frag},sprite:{uniforms:en([wn.sprite,wn.fog]),vertexShader:bn.sprite_vert,fragmentShader:bn.sprite_frag},background:{uniforms:{uvTransform:{value:new Lt},t2D:{value:null}},vertexShader:bn.background_vert,fragmentShader:bn.background_frag},cube:{uniforms:en([wn.envmap,{opacity:{value:1}}]),vertexShader:bn.cube_vert,fragmentShader:bn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:bn.equirect_vert,fragmentShader:bn.equirect_frag},distanceRGBA:{uniforms:en([wn.common,wn.displacementmap,{referencePosition:{value:new ne},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:bn.distanceRGBA_vert,fragmentShader:bn.distanceRGBA_frag},shadow:{uniforms:en([wn.lights,wn.fog,{color:{value:new qt(0)},opacity:{value:1}}]),vertexShader:bn.shadow_vert,fragmentShader:bn.shadow_frag}};function Sn(t,e,i,n,s,r){const o=new qt(0);let a,l,h=!0===s?0:1,u=null,d=0,p=null;function m(t,e){i.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),h=e,m(o,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,m(o,h)},render:function(i,s){let r=!1,f=!0===s.isScene?s.background:null;f&&f.isTexture&&(f=e.get(f));const g=t.xr,y=g.getSession&&g.getSession();y&&"additive"===y.environmentBlendMode&&(f=null),null===f?m(o,h):f&&f.isColor&&(m(f,1),r=!0),(t.autoClear||r)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),f&&(f.isCubeTexture||f.mapping===c)?(void 0===l&&(l=new Ki(new $i(1,1,1),new sn({name:"BackgroundCubeMaterial",uniforms:tn(Mn.cube.uniforms),vertexShader:Mn.cube.vertexShader,fragmentShader:Mn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=f,l.material.uniforms.flipEnvMap.value=f.isCubeTexture&&!1===f.isRenderTargetTexture?-1:1,u===f&&d===f.version&&p===t.toneMapping||(l.material.needsUpdate=!0,u=f,d=f.version,p=t.toneMapping),l.layers.enableAll(),i.unshift(l,l.geometry,l.material,0,0,null)):f&&f.isTexture&&(void 0===a&&(a=new Ki(new _n(2,2),new sn({name:"BackgroundMaterial",uniforms:tn(Mn.background.uniforms),vertexShader:Mn.background.vertexShader,fragmentShader:Mn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(a)),a.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),a.material.uniforms.uvTransform.value.copy(f.matrix),u===f&&d===f.version&&p===t.toneMapping||(a.material.needsUpdate=!0,u=f,d=f.version,p=t.toneMapping),a.layers.enableAll(),i.unshift(a,a.geometry,a.material,0,0,null))}}}function En(t,e,i,n){const s=t.getParameter(t.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||null!==r,a={},l=p(null);let c=l,h=!1;function u(e){return n.isWebGL2?t.bindVertexArray(e):r.bindVertexArrayOES(e)}function d(e){return n.isWebGL2?t.deleteVertexArray(e):r.deleteVertexArrayOES(e)}function p(t){const e=[],i=[],n=[];for(let t=0;t<s;t++)e[t]=0,i[t]=0,n[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:n,object:t,attributes:{},index:null}}function m(){const t=c.newAttributes;for(let e=0,i=t.length;e<i;e++)t[e]=0}function f(t){g(t,0)}function g(i,s){const r=c.newAttributes,o=c.enabledAttributes,a=c.attributeDivisors;r[i]=1,0===o[i]&&(t.enableVertexAttribArray(i),o[i]=1),a[i]!==s&&((n.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,s),a[i]=s)}function y(){const e=c.newAttributes,i=c.enabledAttributes;for(let n=0,s=i.length;n<s;n++)i[n]!==e[n]&&(t.disableVertexAttribArray(n),i[n]=0)}function v(e,i,s,r,o,a){!0!==n.isWebGL2||s!==t.INT&&s!==t.UNSIGNED_INT?t.vertexAttribPointer(e,i,s,r,o,a):t.vertexAttribIPointer(e,i,s,o,a)}function x(){_(),h=!0,c!==l&&(c=l,u(c.object))}function _(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(s,l,d,x,_){let b=!1;if(o){const e=function(e,i,s){const o=!0===s.wireframe;let l=a[e.id];void 0===l&&(l={},a[e.id]=l);let c=l[i.id];void 0===c&&(c={},l[i.id]=c);let h=c[o];return void 0===h&&(h=p(n.isWebGL2?t.createVertexArray():r.createVertexArrayOES()),c[o]=h),h}(x,d,l);c!==e&&(c=e,u(c.object)),b=function(t,e,i,n){const s=c.attributes,r=e.attributes;let o=0;const a=i.getAttributes();for(const e in a)if(a[e].location>=0){const i=s[e];let n=r[e];if(void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor)),void 0===i)return!0;if(i.attribute!==n)return!0;if(n&&i.data!==n.data)return!0;o++}return c.attributesNum!==o||c.index!==n}(s,x,d,_),b&&function(t,e,i,n){const s={},r=e.attributes;let o=0;const a=i.getAttributes();for(const e in a)if(a[e].location>=0){let i=r[e];void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor));const n={};n.attribute=i,i&&i.data&&(n.data=i.data),s[e]=n,o++}c.attributes=s,c.attributesNum=o,c.index=n}(s,x,d,_)}else{const t=!0===l.wireframe;c.geometry===x.id&&c.program===d.id&&c.wireframe===t||(c.geometry=x.id,c.program=d.id,c.wireframe=t,b=!0)}null!==_&&i.update(_,t.ELEMENT_ARRAY_BUFFER),(b||h)&&(h=!1,function(s,r,o,a){if(!1===n.isWebGL2&&(s.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;m();const l=a.attributes,c=o.getAttributes(),h=r.defaultAttributeValues;for(const e in c){const n=c[e];if(n.location>=0){let r=l[e];if(void 0===r&&("instanceMatrix"===e&&s.instanceMatrix&&(r=s.instanceMatrix),"instanceColor"===e&&s.instanceColor&&(r=s.instanceColor)),void 0!==r){const e=r.normalized,o=r.itemSize,l=i.get(r);if(void 0===l)continue;const c=l.buffer,h=l.type,u=l.bytesPerElement;if(r.isInterleavedBufferAttribute){const i=r.data,l=i.stride,d=r.offset;if(i.isInstancedInterleavedBuffer){for(let t=0;t<n.locationSize;t++)g(n.location+t,i.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=i.meshPerAttribute*i.count)}else for(let t=0;t<n.locationSize;t++)f(n.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<n.locationSize;t++)v(n.location+t,o/n.locationSize,h,e,l*u,(d+o/n.locationSize*t)*u)}else{if(r.isInstancedBufferAttribute){for(let t=0;t<n.locationSize;t++)g(n.location+t,r.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let t=0;t<n.locationSize;t++)f(n.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<n.locationSize;t++)v(n.location+t,o/n.locationSize,h,e,o*u,o/n.locationSize*t*u)}}else if(void 0!==h){const i=h[e];if(void 0!==i)switch(i.length){case 2:t.vertexAttrib2fv(n.location,i);break;case 3:t.vertexAttrib3fv(n.location,i);break;case 4:t.vertexAttrib4fv(n.location,i);break;default:t.vertexAttrib1fv(n.location,i)}}}}y()}(s,l,d,x),null!==_&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i.get(_).buffer))},reset:x,resetDefaultState:_,dispose:function(){x();for(const t in a){const e=a[t];for(const t in e){const i=e[t];for(const t in i)d(i[t].object),delete i[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const i=e[t];for(const t in i)d(i[t].object),delete i[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const i=a[e];if(void 0===i[t.id])continue;const n=i[t.id];for(const t in n)d(n[t].object),delete n[t];delete i[t.id]}},initAttributes:m,enableAttribute:f,disableUnusedAttributes:y}}function Tn(t,e,i,n){const s=n.isWebGL2;let r;this.setMode=function(t){r=t},this.render=function(e,n){t.drawArrays(r,e,n),i.update(n,r,1)},this.renderInstances=function(n,o,a){if(0===a)return;let l,c;if(s)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](r,n,o,a),i.update(o,r,a)}}function An(t,e,i){let n;function s(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let o=void 0!==i.precision?i.precision:"highp";const a=s(o);a!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",a,"instead."),o=a);const l=r||e.has("WEBGL_draw_buffers"),c=!0===i.logarithmicDepthBuffer,h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),m=t.getParameter(t.MAX_VERTEX_ATTRIBS),f=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),g=t.getParameter(t.MAX_VARYING_VECTORS),y=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=u>0,x=r||e.has("OES_texture_float");return{isWebGL2:r,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const i=e.get("EXT_texture_filter_anisotropic");n=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:s,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:r?t.getParameter(t.MAX_SAMPLES):0}}function Cn(t){const e=this;let i=null,n=0,s=!1,r=!1;const o=new mn,a=new Lt,l={value:null,needsUpdate:!1};function c(){l.value!==i&&(l.value=i,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(t,i,n,s){const r=null!==t?t.length:0;let c=null;if(0!==r){if(c=l.value,!0!==s||null===c){const e=n+4*r,s=i.matrixWorldInverse;a.getNormalMatrix(s),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,i=n;e!==r;++e,i+=4)o.copy(t[e]).applyMatrix4(s,a),o.normal.toArray(c,i),c[i+3]=o.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=r,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,r){const o=0!==t.length||e||0!==n||s;return s=e,i=h(t,r,0),n=t.length,o},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,c()},this.setState=function(e,o,a){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,m=t.get(e);if(!s||null===u||0===u.length||r&&!p)r?h(null):c();else{const t=r?0:n,e=4*t;let s=m.clippingState||null;l.value=s,s=h(u,o,e,a);for(let t=0;t!==e;++t)s[t]=i[t];m.clippingState=s,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Rn(t){let e=new WeakMap;function i(t,e){return e===a?t.mapping=r:e===l&&(t.mapping=o),t}function n(t){const i=t.target;i.removeEventListener("dispose",n);const s=e.get(i);void 0!==s&&(e.delete(i),s.dispose())}return{get:function(s){if(s&&s.isTexture&&!1===s.isRenderTargetTexture){const r=s.mapping;if(r===a||r===l){if(e.has(s))return i(e.get(s).texture,s.mapping);{const r=s.image;if(r&&r.height>0){const o=new hn(r.height/2);return o.fromEquirectangularTexture(t,s),e.set(s,o),s.addEventListener("dispose",n),i(o.texture,s.mapping)}return null}}}return s},dispose:function(){e=new WeakMap}}}Mn.physical={uniforms:en([Mn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Rt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new qt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Rt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new qt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new qt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:bn.meshphysical_vert,fragmentShader:bn.meshphysical_frag};class Ln extends rn{constructor(t=-1,e=1,i=1,n=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,n,s,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-t,r=i+t,o=n+e,a=n-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=t*this.view.offsetX,r=s+t*this.view.width,o-=e*this.view.offsetY,a=o-e*this.view.height}this.projectionMatrix.makeOrthographic(s,r,o,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const Pn=[.125,.215,.35,.446,.526,.582],In=new Ln,Dn=new qt;let Nn=null;const Bn=(1+Math.sqrt(5))/2,Fn=1/Bn,On=[new ne(1,1,1),new ne(-1,1,1),new ne(1,1,-1),new ne(-1,1,-1),new ne(0,Bn,Fn),new ne(0,Bn,-Fn),new ne(Fn,0,Bn),new ne(-Fn,0,Bn),new ne(Bn,Fn,0),new ne(-Bn,Fn,0)];class zn{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,n=100){Nn=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(t,i,n,s),e>0&&this._blur(s,0,0,e),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=kn(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Vn(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Nn),t.scissorTest=!1,Hn(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===r||t.mapping===o?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Nn=this._renderer.getRenderTarget();const i=e||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:g,minFilter:g,generateMipmaps:!1,type:M,format:E,encoding:ot,depthBuffer:!1},n=Un(t,e,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Un(t,e,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],i=[],n=[];let s=t;const r=t-4+1+Pn.length;for(let o=0;o<r;o++){const r=Math.pow(2,s);i.push(r);let a=1/r;o>t-4?a=Pn[o-t+4-1]:0===o&&(a=0),n.push(a);const l=1/(r-2),c=-l,h=1+l,u=[c,c,h,c,h,h,c,c,h,h,c,h],d=6,p=6,m=3,f=2,g=1,y=new Float32Array(m*p*d),v=new Float32Array(f*p*d),x=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,i=t>2?0:-1,n=[e,i,0,e+2/3,i,0,e+2/3,i+1,0,e,i,0,e+2/3,i+1,0,e,i+1,0];y.set(n,m*p*t),v.set(u,f*p*t);const s=[t,t,t,t,t,t];x.set(s,g*p*t)}const _=new Di;_.setAttribute("position",new wi(y,m)),_.setAttribute("uv",new wi(v,f)),_.setAttribute("faceIndex",new wi(x,g)),e.push(_),s>4&&s--}return{lodPlanes:e,sizeLods:i,sigmas:n}}(n)),this._blurMaterial=function(t,e,i){const n=new Float32Array(20),s=new ne(0,1,0);return new sn({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(n,t,e)}return n}_compileMaterial(t){const e=new Ki(this._lodPlanes[0],t);this._renderer.compile(e,In)}_sceneToCubeUV(t,e,i,n){const s=new on(90,1,e,i),r=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],a=this._renderer,l=a.autoClear,c=a.toneMapping;a.getClearColor(Dn),a.toneMapping=0,a.autoClear=!1;const h=new xi({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),u=new Ki(new $i,h);let d=!1;const p=t.background;p?p.isColor&&(h.color.copy(p),t.background=null,d=!0):(h.color.copy(Dn),d=!0);for(let e=0;e<6;e++){const i=e%3;0===i?(s.up.set(0,r[e],0),s.lookAt(o[e],0,0)):1===i?(s.up.set(0,0,r[e]),s.lookAt(0,o[e],0)):(s.up.set(0,r[e],0),s.lookAt(0,0,o[e]));const l=this._cubeSize;Hn(n,i*l,e>2?l:0,l,l),a.setRenderTarget(n),d&&a.render(u,s),a.render(t,s)}u.geometry.dispose(),u.material.dispose(),a.toneMapping=c,a.autoClear=l,t.background=p}_textureToCubeUV(t,e){const i=this._renderer,n=t.mapping===r||t.mapping===o;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=kn()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Vn());const s=n?this._cubemapMaterial:this._equirectMaterial,a=new Ki(this._lodPlanes[0],s);s.uniforms.envMap.value=t;const l=this._cubeSize;Hn(e,0,0,3*l,2*l),i.setRenderTarget(e),i.render(a,In)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;for(let e=1;e<this._lodPlanes.length;e++){const i=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),n=On[(e-1)%On.length];this._blur(t,e-1,e,i,n)}e.autoClear=i}_blur(t,e,i,n,s){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,i,n,"latitudinal",s),this._halfBlur(r,t,i,i,n,"longitudinal",s)}_halfBlur(t,e,i,n,s,r,o){const a=this._renderer,l=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Ki(this._lodPlanes[n],l),h=l.uniforms,u=this._sizeLods[i]-1,d=isFinite(s)?Math.PI/(2*u):2*Math.PI/39,p=s/d,m=isFinite(s)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<20;++t){const e=t/p,i=Math.exp(-e*e/2);f.push(i),0===t?g+=i:t<m&&(g+=2*i)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;h.envMap.value=t.texture,h.samples.value=m,h.weights.value=f,h.latitudinal.value="latitudinal"===r,o&&(h.poleAxis.value=o);const{_lodMax:y}=this;h.dTheta.value=d,h.mipInt.value=y-i;const v=this._sizeLods[n];Hn(e,3*v*(n>y-4?n-y+4:0),4*(this._cubeSize-v),3*v,2*v),a.setRenderTarget(e),a.render(c,In)}}function Un(t,e,i){const n=new $t(t,e,i);return n.texture.mapping=c,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Hn(t,e,i,n,s){t.viewport.set(e,i,n,s),t.scissor.set(e,i,n,s)}function Vn(){return new sn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function kn(){return new sn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Gn(t){let e=new WeakMap,i=null;function n(t){const i=t.target;i.removeEventListener("dispose",n);const s=e.get(i);void 0!==s&&(e.delete(i),s.dispose())}return{get:function(s){if(s&&s.isTexture){const c=s.mapping,h=c===a||c===l,u=c===r||c===o;if(h||u){if(s.isRenderTargetTexture&&!0===s.needsPMREMUpdate){s.needsPMREMUpdate=!1;let n=e.get(s);return null===i&&(i=new zn(t)),n=h?i.fromEquirectangular(s,n):i.fromCubemap(s,n),e.set(s,n),n.texture}if(e.has(s))return e.get(s).texture;{const r=s.image;if(h&&r&&r.height>0||u&&r&&function(t){let e=0;for(let i=0;i<6;i++)void 0!==t[i]&&e++;return 6===e}(r)){null===i&&(i=new zn(t));const r=h?i.fromEquirectangular(s):i.fromCubemap(s);return e.set(s,r),s.addEventListener("dispose",n),r.texture}return null}}}return s},dispose:function(){e=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function Wn(t){const e={};function i(i){if(void 0!==e[i])return e[i];let n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(i)}return e[i]=n,n}return{has:function(t){return null!==i(t)},init:function(t){t.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(t){const e=i(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function qn(t,e,i,n){const s={},r=new WeakMap;function o(t){const a=t.target;null!==a.index&&e.remove(a.index);for(const t in a.attributes)e.remove(a.attributes[t]);a.removeEventListener("dispose",o),delete s[a.id];const l=r.get(a);l&&(e.remove(l),r.delete(a)),n.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,i.memory.geometries--}function a(t){const i=[],n=t.index,s=t.attributes.position;let o=0;if(null!==n){const t=n.array;o=n.version;for(let e=0,n=t.length;e<n;e+=3){const n=t[e+0],s=t[e+1],r=t[e+2];i.push(n,s,s,r,r,n)}}else{const t=s.array;o=s.version;for(let e=0,n=t.length/3-1;e<n;e+=3){const t=e+0,n=e+1,s=e+2;i.push(t,n,n,s,s,t)}}const a=new(Pt(i)?Si:Mi)(i,1);a.version=o;const l=r.get(t);l&&e.remove(l),r.set(t,a)}return{get:function(t,e){return!0===s[e.id]||(e.addEventListener("dispose",o),s[e.id]=!0,i.memory.geometries++),e},update:function(i){const n=i.attributes;for(const i in n)e.update(n[i],t.ARRAY_BUFFER);const s=i.morphAttributes;for(const i in s){const n=s[i];for(let i=0,s=n.length;i<s;i++)e.update(n[i],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=r.get(t);if(e){const i=t.index;null!==i&&e.version<i.version&&a(t)}else a(t);return r.get(t)}}}function jn(t,e,i,n){const s=n.isWebGL2;let r,o,a;this.setMode=function(t){r=t},this.setIndex=function(t){o=t.type,a=t.bytesPerElement},this.render=function(e,n){t.drawElements(r,n,o,e*a),i.update(n,r,1)},this.renderInstances=function(n,l,c){if(0===c)return;let h,u;if(s)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](r,l,o,n*a,c),i.update(l,r,c)}}function Xn(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(i,n,s){switch(e.calls++,n){case t.TRIANGLES:e.triangles+=s*(i/3);break;case t.LINES:e.lines+=s*(i/2);break;case t.LINE_STRIP:e.lines+=s*(i-1);break;case t.LINE_LOOP:e.lines+=s*i;break;case t.POINTS:e.points+=s*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function Yn(t,e){return t[0]-e[0]}function Zn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Jn(t,e,i){const n={},s=new Float32Array(8),r=new WeakMap,o=new Qt,a=[];for(let t=0;t<8;t++)a[t]=[t,0];return{update:function(l,c,h,u){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=void 0!==p?p.length:0;let f=r.get(c);if(void 0===f||f.count!==m){void 0!==f&&f.texture.dispose();const v=void 0!==c.morphAttributes.position,x=void 0!==c.morphAttributes.normal,_=void 0!==c.morphAttributes.color,b=c.morphAttributes.position||[],M=c.morphAttributes.normal||[],S=c.morphAttributes.color||[];let E=0;!0===v&&(E=1),!0===x&&(E=2),!0===_&&(E=3);let T=c.attributes.position.count*E,A=1;T>e.maxTextureSize&&(A=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const C=new Float32Array(T*A*4*m),R=new te(C,T,A,m);R.type=w,R.needsUpdate=!0;const L=4*E;for(let I=0;I<m;I++){const D=b[I],N=M[I],B=S[I],F=T*A*4*I;for(let O=0;O<D.count;O++){const z=O*L;!0===v&&(o.fromBufferAttribute(D,O),C[F+z+0]=o.x,C[F+z+1]=o.y,C[F+z+2]=o.z,C[F+z+3]=0),!0===x&&(o.fromBufferAttribute(N,O),C[F+z+4]=o.x,C[F+z+5]=o.y,C[F+z+6]=o.z,C[F+z+7]=0),!0===_&&(o.fromBufferAttribute(B,O),C[F+z+8]=o.x,C[F+z+9]=o.y,C[F+z+10]=o.z,C[F+z+11]=4===B.itemSize?o.w:1)}}function P(){R.dispose(),r.delete(c),c.removeEventListener("dispose",P)}f={count:m,texture:R,size:new Rt(T,A)},r.set(c,f),c.addEventListener("dispose",P)}let g=0;for(let U=0;U<d.length;U++)g+=d[U];const y=c.morphTargetsRelative?1:1-g;u.getUniforms().setValue(t,"morphTargetBaseInfluence",y),u.getUniforms().setValue(t,"morphTargetInfluences",d),u.getUniforms().setValue(t,"morphTargetsTexture",f.texture,i),u.getUniforms().setValue(t,"morphTargetsTextureSize",f.size)}else{const H=void 0===d?0:d.length;let V=n[c.id];if(void 0===V||V.length!==H){V=[];for(let j=0;j<H;j++)V[j]=[j,0];n[c.id]=V}for(let X=0;X<H;X++){const Y=V[X];Y[0]=X,Y[1]=d[X]}V.sort(Zn);for(let Z=0;Z<8;Z++)Z<H&&V[Z][1]?(a[Z][0]=V[Z][0],a[Z][1]=V[Z][1]):(a[Z][0]=Number.MAX_SAFE_INTEGER,a[Z][1]=0);a.sort(Yn);const k=c.morphAttributes.position,G=c.morphAttributes.normal;let W=0;for(let J=0;J<8;J++){const K=a[J],Q=K[0],$=K[1];Q!==Number.MAX_SAFE_INTEGER&&$?(k&&c.getAttribute("morphTarget"+J)!==k[Q]&&c.setAttribute("morphTarget"+J,k[Q]),G&&c.getAttribute("morphNormal"+J)!==G[Q]&&c.setAttribute("morphNormal"+J,G[Q]),s[J]=$,W+=$):(k&&!0===c.hasAttribute("morphTarget"+J)&&c.deleteAttribute("morphTarget"+J),G&&!0===c.hasAttribute("morphNormal"+J)&&c.deleteAttribute("morphNormal"+J),s[J]=0)}const q=c.morphTargetsRelative?1:1-W;u.getUniforms().setValue(t,"morphTargetBaseInfluence",q),u.getUniforms().setValue(t,"morphTargetInfluences",s)}}}}function Kn(t,e,i,n){let s=new WeakMap;function r(t){const e=t.target;e.removeEventListener("dispose",r),i.remove(e.instanceMatrix),null!==e.instanceColor&&i.remove(e.instanceColor)}return{update:function(o){const a=n.render.frame,l=o.geometry,c=e.get(o,l);return s.get(c)!==a&&(e.update(c),s.set(c,a)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",r)&&o.addEventListener("dispose",r),i.update(o.instanceMatrix,t.ARRAY_BUFFER),null!==o.instanceColor&&i.update(o.instanceColor,t.ARRAY_BUFFER)),c},dispose:function(){s=new WeakMap}}}const Qn=new Kt,$n=new te,ts=new ee,es=new cn,is=[],ns=[],ss=new Float32Array(16),rs=new Float32Array(9),os=new Float32Array(4);function as(t,e,i){const n=t[0];if(n<=0||n>0)return t;const s=e*i;let r=is[s];if(void 0===r&&(r=new Float32Array(s),is[s]=r),0!==e){n.toArray(r,0);for(let n=1,s=0;n!==e;++n)s+=i,t[n].toArray(r,s)}return r}function ls(t,e){if(t.length!==e.length)return!1;for(let i=0,n=t.length;i<n;i++)if(t[i]!==e[i])return!1;return!0}function cs(t,e){for(let i=0,n=e.length;i<n;i++)t[i]=e[i]}function hs(t,e){let i=ns[e];void 0===i&&(i=new Int32Array(e),ns[e]=i);for(let n=0;n!==e;++n)i[n]=t.allocateTextureUnit();return i}function us(t,e){const i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function ds(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(ls(i,e))return;t.uniform2fv(this.addr,e),cs(i,e)}}function ps(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if(ls(i,e))return;t.uniform3fv(this.addr,e),cs(i,e)}}function ms(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(ls(i,e))return;t.uniform4fv(this.addr,e),cs(i,e)}}function fs(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(ls(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),cs(i,e)}else{if(ls(i,n))return;os.set(n),t.uniformMatrix2fv(this.addr,!1,os),cs(i,n)}}function gs(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(ls(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),cs(i,e)}else{if(ls(i,n))return;rs.set(n),t.uniformMatrix3fv(this.addr,!1,rs),cs(i,n)}}function ys(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(ls(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),cs(i,e)}else{if(ls(i,n))return;ss.set(n),t.uniformMatrix4fv(this.addr,!1,ss),cs(i,n)}}function vs(t,e){const i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function xs(t,e){const i=this.cache;ls(i,e)||(t.uniform2iv(this.addr,e),cs(i,e))}function _s(t,e){const i=this.cache;ls(i,e)||(t.uniform3iv(this.addr,e),cs(i,e))}function bs(t,e){const i=this.cache;ls(i,e)||(t.uniform4iv(this.addr,e),cs(i,e))}function ws(t,e){const i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function Ms(t,e){const i=this.cache;ls(i,e)||(t.uniform2uiv(this.addr,e),cs(i,e))}function Ss(t,e){const i=this.cache;ls(i,e)||(t.uniform3uiv(this.addr,e),cs(i,e))}function Es(t,e){const i=this.cache;ls(i,e)||(t.uniform4uiv(this.addr,e),cs(i,e))}function Ts(t,e,i){const n=this.cache,s=i.allocateTextureUnit();n[0]!==s&&(t.uniform1i(this.addr,s),n[0]=s),i.setTexture2D(e||Qn,s)}function As(t,e,i){const n=this.cache,s=i.allocateTextureUnit();n[0]!==s&&(t.uniform1i(this.addr,s),n[0]=s),i.setTexture3D(e||ts,s)}function Cs(t,e,i){const n=this.cache,s=i.allocateTextureUnit();n[0]!==s&&(t.uniform1i(this.addr,s),n[0]=s),i.setTextureCube(e||es,s)}function Rs(t,e,i){const n=this.cache,s=i.allocateTextureUnit();n[0]!==s&&(t.uniform1i(this.addr,s),n[0]=s),i.setTexture2DArray(e||$n,s)}function Ls(t,e){t.uniform1fv(this.addr,e)}function Ps(t,e){const i=as(e,this.size,2);t.uniform2fv(this.addr,i)}function Is(t,e){const i=as(e,this.size,3);t.uniform3fv(this.addr,i)}function Ds(t,e){const i=as(e,this.size,4);t.uniform4fv(this.addr,i)}function Ns(t,e){const i=as(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function Bs(t,e){const i=as(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function Fs(t,e){const i=as(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function Os(t,e){t.uniform1iv(this.addr,e)}function zs(t,e){t.uniform2iv(this.addr,e)}function Us(t,e){t.uniform3iv(this.addr,e)}function Hs(t,e){t.uniform4iv(this.addr,e)}function Vs(t,e){t.uniform1uiv(this.addr,e)}function ks(t,e){t.uniform2uiv(this.addr,e)}function Gs(t,e){t.uniform3uiv(this.addr,e)}function Ws(t,e){t.uniform4uiv(this.addr,e)}function qs(t,e,i){const n=this.cache,s=e.length,r=hs(i,s);ls(n,r)||(t.uniform1iv(this.addr,r),cs(n,r));for(let t=0;t!==s;++t)i.setTexture2D(e[t]||Qn,r[t])}function js(t,e,i){const n=this.cache,s=e.length,r=hs(i,s);ls(n,r)||(t.uniform1iv(this.addr,r),cs(n,r));for(let t=0;t!==s;++t)i.setTexture3D(e[t]||ts,r[t])}function Xs(t,e,i){const n=this.cache,s=e.length,r=hs(i,s);ls(n,r)||(t.uniform1iv(this.addr,r),cs(n,r));for(let t=0;t!==s;++t)i.setTextureCube(e[t]||es,r[t])}function Ys(t,e,i){const n=this.cache,s=e.length,r=hs(i,s);ls(n,r)||(t.uniform1iv(this.addr,r),cs(n,r));for(let t=0;t!==s;++t)i.setTexture2DArray(e[t]||$n,r[t])}class Zs{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(t){switch(t){case 5126:return us;case 35664:return ds;case 35665:return ps;case 35666:return ms;case 35674:return fs;case 35675:return gs;case 35676:return ys;case 5124:case 35670:return vs;case 35667:case 35671:return xs;case 35668:case 35672:return _s;case 35669:case 35673:return bs;case 5125:return ws;case 36294:return Ms;case 36295:return Ss;case 36296:return Es;case 35678:case 36198:case 36298:case 36306:case 35682:return Ts;case 35679:case 36299:case 36307:return As;case 35680:case 36300:case 36308:case 36293:return Cs;case 36289:case 36303:case 36311:case 36292:return Rs}}(e.type)}}class Js{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Ls;case 35664:return Ps;case 35665:return Is;case 35666:return Ds;case 35674:return Ns;case 35675:return Bs;case 35676:return Fs;case 5124:case 35670:return Os;case 35667:case 35671:return zs;case 35668:case 35672:return Us;case 35669:case 35673:return Hs;case 5125:return Vs;case 36294:return ks;case 36295:return Gs;case 36296:return Ws;case 35678:case 36198:case 36298:case 36306:case 35682:return qs;case 35679:case 36299:case 36307:return js;case 35680:case 36300:case 36308:case 36293:return Xs;case 36289:case 36303:case 36311:case 36292:return Ys}}(e.type)}}class Ks{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,i){const n=this.seq;for(let s=0,r=n.length;s!==r;++s){const r=n[s];r.setValue(t,e[r.id],i)}}}const Qs=/(\w+)(\])?(\[|\.)?/g;function $s(t,e){t.seq.push(e),t.map[e.id]=e}function tr(t,e,i){const n=t.name,s=n.length;for(Qs.lastIndex=0;;){const r=Qs.exec(n),o=Qs.lastIndex;let a=r[1];const l="]"===r[2],c=r[3];if(l&&(a|=0),void 0===c||"["===c&&o+2===s){$s(i,void 0===c?new Zs(a,t,e):new Js(a,t,e));break}{let t=i.map[a];void 0===t&&(t=new Ks(a),$s(i,t)),i=t}}}class er{constructor(t,e){this.seq=[],this.map={};const i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const i=t.getActiveUniform(e,n);tr(i,t.getUniformLocation(e,i.name),this)}}setValue(t,e,i,n){const s=this.map[e];void 0!==s&&s.setValue(t,i,n)}setOptional(t,e,i){const n=e[i];void 0!==n&&this.setValue(t,i,n)}static upload(t,e,i,n){for(let s=0,r=e.length;s!==r;++s){const r=e[s],o=i[r.id];!1!==o.needsUpdate&&r.setValue(t,o.value,n)}}static seqWithValue(t,e){const i=[];for(let n=0,s=t.length;n!==s;++n){const s=t[n];s.id in e&&i.push(s)}return i}}function ir(t,e,i){const n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),n}let nr=0;function sr(t,e,i){const n=t.getShaderParameter(e,t.COMPILE_STATUS),s=t.getShaderInfoLog(e).trim();if(n&&""===s)return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const n=parseInt(r[1]);return i.toUpperCase()+"\n\n"+s+"\n\n"+function(t,e){const i=t.split("\n"),n=[],s=Math.max(e-6,0),r=Math.min(e+6,i.length);for(let t=s;t<r;t++){const s=t+1;n.push(`${s===e?">":" "} ${s}: ${i[t]}`)}return n.join("\n")}(t.getShaderSource(e),n)}return s}function rr(t,e){const i=function(t){switch(t){case ot:return["Linear","( value )"];case at:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function or(t,e){let i;switch(e){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function ar(t){return""!==t}function lr(t,e){const i=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function cr(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hr=/^[ \t]*#include +<([\w\d./]+)>/gm;function ur(t){return t.replace(hr,dr)}function dr(t,e){const i=bn[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return ur(i)}const pr=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function mr(t){return t.replace(pr,fr)}function fr(t,e,i,n){let s="";for(let t=parseInt(e);t<parseInt(i);t++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return s}function gr(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function yr(t,e,i,n){const s=t.getContext(),a=i.defines;let l=i.vertexShader,h=i.fragmentShader;const u=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(i),d=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case r:case o:e="ENVMAP_TYPE_CUBE";break;case c:e="ENVMAP_TYPE_CUBE_UV"}return e}(i),p=function(t){let e="ENVMAP_MODE_REFLECTION";return t.envMap&&t.envMapMode===o&&(e="ENVMAP_MODE_REFRACTION"),e}(i),m=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(i),f=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const i=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:n,maxMip:i}}(i),g=i.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ar).join("\n")}(i),y=function(t){const e=[];for(const i in t){const n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(a),v=s.createProgram();let x,_,b=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(x=[y].filter(ar).join("\n"),x.length>0&&(x+="\n"),_=[g,y].filter(ar).join("\n"),_.length>0&&(_+="\n")):(x=[gr(i),"#define SHADER_NAME "+i.shaderName,y,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+p:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors&&i.isWebGL2?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ar).join("\n"),_=[g,gr(i),"#define SHADER_NAME "+i.shaderName,y,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+d:"",i.envMap?"#define "+p:"",i.envMap?"#define "+m:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?bn.tonemapping_pars_fragment:"",0!==i.toneMapping?or("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",bn.encodings_pars_fragment,rr("linearToOutputTexel",i.outputEncoding),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(ar).join("\n")),l=ur(l),l=lr(l,i),l=cr(l,i),h=ur(h),h=lr(h,i),h=cr(h,i),l=mr(l),h=mr(h),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(b="#version 300 es\n",x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+x,_=["#define varying in",i.glslVersion===dt?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===dt?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+_);const w=b+x+l,M=b+_+h,S=ir(s,s.VERTEX_SHADER,w),E=ir(s,s.FRAGMENT_SHADER,M);if(s.attachShader(v,S),s.attachShader(v,E),void 0!==i.index0AttributeName?s.bindAttribLocation(v,0,i.index0AttributeName):!0===i.morphTargets&&s.bindAttribLocation(v,0,"position"),s.linkProgram(v),t.debug.checkShaderErrors){const t=s.getProgramInfoLog(v).trim(),e=s.getShaderInfoLog(S).trim(),i=s.getShaderInfoLog(E).trim();let n=!0,r=!0;if(!1===s.getProgramParameter(v,s.LINK_STATUS)){n=!1;const e=sr(s,S,"vertex"),i=sr(s,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(v,s.VALIDATE_STATUS)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+i)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==i||(r=!1);r&&(this.diagnostics={runnable:n,programLog:t,vertexShader:{log:e,prefix:x},fragmentShader:{log:i,prefix:_}})}let T,A;return s.deleteShader(S),s.deleteShader(E),this.getUniforms=function(){return void 0===T&&(T=new er(s,v)),T},this.getAttributes=function(){return void 0===A&&(A=function(t,e){const i={},n=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const n=t.getActiveAttrib(e,s),r=n.name;let o=1;n.type===t.FLOAT_MAT2&&(o=2),n.type===t.FLOAT_MAT3&&(o=3),n.type===t.FLOAT_MAT4&&(o=4),i[r]={type:n.type,location:t.getAttribLocation(e,r),locationSize:o}}return i}(s,v)),A},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(v),this.program=void 0},this.name=i.shaderName,this.id=nr++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=S,this.fragmentShader=E,this}let vr=0;class xr{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,i=t.fragmentShader,n=this._getShaderStage(e),s=this._getShaderStage(i),r=this._getShaderCacheForMaterial(t);return!1===r.has(n)&&(r.add(n),n.usedTimes++),!1===r.has(s)&&(r.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let i=e.get(t);return void 0===i&&(i=new Set,e.set(t,i)),i}_getShaderStage(t){const e=this.shaderCache;let i=e.get(t);return void 0===i&&(i=new _r(t),e.set(t,i)),i}}class _r{constructor(t){this.id=vr++,this.code=t,this.usedTimes=0}}function br(t,e,i,n,s,r,o){const a=new qe,l=new xr,h=[],u=s.isWebGL2,d=s.logarithmicDepthBuffer,p=s.vertexTextures;let m=s.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(r,a,h,g,y){const v=g.fog,x=y.geometry,_=r.isMeshStandardMaterial?g.environment:null,b=(r.isMeshStandardMaterial?i:e).get(r.envMap||_),w=b&&b.mapping===c?b.image.height:null,M=f[r.type];null!==r.precision&&(m=s.getMaxPrecision(r.precision),m!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",m,"instead."));const S=x.morphAttributes.position||x.morphAttributes.normal||x.morphAttributes.color,E=void 0!==S?S.length:0;let T,A,C,R,L=0;if(void 0!==x.morphAttributes.position&&(L=1),void 0!==x.morphAttributes.normal&&(L=2),void 0!==x.morphAttributes.color&&(L=3),M){const t=Mn[M];T=t.vertexShader,A=t.fragmentShader}else T=r.vertexShader,A=r.fragmentShader,l.update(r),C=l.getVertexShaderID(r),R=l.getFragmentShaderID(r);const P=t.getRenderTarget(),I=r.alphaTest>0,D=r.clearcoat>0,N=r.iridescence>0;return{isWebGL2:u,shaderID:M,shaderName:r.type,vertexShader:T,fragmentShader:A,defines:r.defines,customVertexShaderID:C,customFragmentShaderID:R,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:m,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:p,outputEncoding:null===P?t.outputEncoding:!0===P.isXRRenderTarget?P.texture.encoding:ot,map:!!r.map,matcap:!!r.matcap,envMap:!!b,envMapMode:b&&b.mapping,envMapCubeUVHeight:w,lightMap:!!r.lightMap,aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,decodeVideoTexture:!!r.map&&!0===r.map.isVideoTexture&&r.map.encoding===at,clearcoat:D,clearcoatMap:D&&!!r.clearcoatMap,clearcoatRoughnessMap:D&&!!r.clearcoatRoughnessMap,clearcoatNormalMap:D&&!!r.clearcoatNormalMap,iridescence:N,iridescenceMap:N&&!!r.iridescenceMap,iridescenceThicknessMap:N&&!!r.iridescenceThicknessMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,specularIntensityMap:!!r.specularIntensityMap,specularColorMap:!!r.specularColorMap,opaque:!1===r.transparent&&1===r.blending,alphaMap:!!r.alphaMap,alphaTest:I,gradientMap:!!r.gradientMap,sheen:r.sheen>0,sheenColorMap:!!r.sheenColorMap,sheenRoughnessMap:!!r.sheenRoughnessMap,transmission:r.transmission>0,transmissionMap:!!r.transmissionMap,thicknessMap:!!r.thicknessMap,combine:r.combine,vertexTangents:!!r.normalMap&&!!x.attributes.tangent,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&!!x.attributes.color&&4===x.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.iridescenceMap||r.iridescenceThicknessMap||r.displacementMap||r.transmissionMap||r.thicknessMap||r.specularIntensityMap||r.specularColorMap||r.sheenColorMap||r.sheenRoughnessMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.iridescenceMap||r.iridescenceThicknessMap||r.transmission>0||r.transmissionMap||r.thicknessMap||r.specularIntensityMap||r.specularColorMap||r.sheen>0||r.sheenColorMap||r.sheenRoughnessMap||!r.displacementMap),fog:!!v,useFog:!0===r.fog,fogExp2:v&&v.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===y.isSkinnedMesh,morphTargets:void 0!==x.morphAttributes.position,morphNormals:void 0!==x.morphAttributes.normal,morphColors:void 0!==x.morphAttributes.color,morphTargetsCount:E,morphTextureStride:L,numDirLights:a.directional.length,numPointLights:a.point.length,numSpotLights:a.spot.length,numSpotLightMaps:a.spotLightMap.length,numRectAreaLights:a.rectArea.length,numHemiLights:a.hemi.length,numDirLightShadows:a.directionalShadowMap.length,numPointLightShadows:a.pointShadowMap.length,numSpotLightShadows:a.spotShadowMap.length,numSpotLightShadowsWithMaps:a.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&h.length>0,shadowMapType:t.shadowMap.type,toneMapping:r.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,doubleSided:2===r.side,flipSided:1===r.side,useDepthPacking:!!r.depthPacking,depthPacking:r.depthPacking||0,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(e){const i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.customVertexShaderID),i.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)i.push(t),i.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(function(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(i,e),function(t,e){a.disableAll(),e.isWebGL2&&a.enable(0),e.supportsVertexTextures&&a.enable(1),e.instancing&&a.enable(2),e.instancingColor&&a.enable(3),e.map&&a.enable(4),e.matcap&&a.enable(5),e.envMap&&a.enable(6),e.lightMap&&a.enable(7),e.aoMap&&a.enable(8),e.emissiveMap&&a.enable(9),e.bumpMap&&a.enable(10),e.normalMap&&a.enable(11),e.objectSpaceNormalMap&&a.enable(12),e.tangentSpaceNormalMap&&a.enable(13),e.clearcoat&&a.enable(14),e.clearcoatMap&&a.enable(15),e.clearcoatRoughnessMap&&a.enable(16),e.clearcoatNormalMap&&a.enable(17),e.iridescence&&a.enable(18),e.iridescenceMap&&a.enable(19),e.iridescenceThicknessMap&&a.enable(20),e.displacementMap&&a.enable(21),e.specularMap&&a.enable(22),e.roughnessMap&&a.enable(23),e.metalnessMap&&a.enable(24),e.gradientMap&&a.enable(25),e.alphaMap&&a.enable(26),e.alphaTest&&a.enable(27),e.vertexColors&&a.enable(28),e.vertexAlphas&&a.enable(29),e.vertexUvs&&a.enable(30),e.vertexTangents&&a.enable(31),e.uvsVertexOnly&&a.enable(32),t.push(a.mask),a.disableAll(),e.fog&&a.enable(0),e.useFog&&a.enable(1),e.flatShading&&a.enable(2),e.logarithmicDepthBuffer&&a.enable(3),e.skinning&&a.enable(4),e.morphTargets&&a.enable(5),e.morphNormals&&a.enable(6),e.morphColors&&a.enable(7),e.premultipliedAlpha&&a.enable(8),e.shadowMapEnabled&&a.enable(9),e.physicallyCorrectLights&&a.enable(10),e.doubleSided&&a.enable(11),e.flipSided&&a.enable(12),e.useDepthPacking&&a.enable(13),e.dithering&&a.enable(14),e.specularIntensityMap&&a.enable(15),e.specularColorMap&&a.enable(16),e.transmission&&a.enable(17),e.transmissionMap&&a.enable(18),e.thicknessMap&&a.enable(19),e.sheen&&a.enable(20),e.sheenColorMap&&a.enable(21),e.sheenRoughnessMap&&a.enable(22),e.decodeVideoTexture&&a.enable(23),e.opaque&&a.enable(24),t.push(a.mask)}(i,e),i.push(t.outputEncoding)),i.push(e.customProgramCacheKey),i.join()},getUniforms:function(t){const e=f[t.type];let i;if(e){const t=Mn[e];i=nn.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function(e,i){let n;for(let t=0,e=h.length;t<e;t++){const e=h[t];if(e.cacheKey===i){n=e,++n.usedTimes;break}}return void 0===n&&(n=new yr(t,i,e,r),h.push(n)),n},releaseProgram:function(t){if(0==--t.usedTimes){const e=h.indexOf(t);h[e]=h[h.length-1],h.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:h,dispose:function(){l.dispose()}}}function wr(){let t=new WeakMap;return{get:function(e){let i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,n){t.get(e)[i]=n},dispose:function(){t=new WeakMap}}}function Mr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Sr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Er(){const t=[];let e=0;const i=[],n=[],s=[];function r(i,n,s,r,o,a){let l=t[e];return void 0===l?(l={id:i.id,object:i,geometry:n,material:s,groupOrder:r,renderOrder:i.renderOrder,z:o,group:a},t[e]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=s,l.groupOrder=r,l.renderOrder=i.renderOrder,l.z=o,l.group=a),e++,l}return{opaque:i,transmissive:n,transparent:s,init:function(){e=0,i.length=0,n.length=0,s.length=0},push:function(t,e,o,a,l,c){const h=r(t,e,o,a,l,c);o.transmission>0?n.push(h):!0===o.transparent?s.push(h):i.push(h)},unshift:function(t,e,o,a,l,c){const h=r(t,e,o,a,l,c);o.transmission>0?n.unshift(h):!0===o.transparent?s.unshift(h):i.unshift(h)},finish:function(){for(let i=e,n=t.length;i<n;i++){const e=t[i];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){i.length>1&&i.sort(t||Mr),n.length>1&&n.sort(e||Sr),s.length>1&&s.sort(e||Sr)}}}function Tr(){let t=new WeakMap;return{get:function(e,i){const n=t.get(e);let s;return void 0===n?(s=new Er,t.set(e,[s])):i>=n.length?(s=new Er,n.push(s)):s=n[i],s},dispose:function(){t=new WeakMap}}}function Ar(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new ne,color:new qt};break;case"SpotLight":i={position:new ne,direction:new ne,color:new qt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new ne,color:new qt,distance:0,decay:0};break;case"HemisphereLight":i={direction:new ne,skyColor:new qt,groundColor:new qt};break;case"RectAreaLight":i={color:new qt,position:new ne,halfWidth:new ne,halfHeight:new ne}}return t[e.id]=i,i}}}let Cr=0;function Rr(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function Lr(t,e){const i=new Ar,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Rt};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Rt,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let t=0;t<9;t++)s.probe.push(new ne);const r=new ne,o=new Ne,a=new Ne;return{setup:function(r,o){let a=0,l=0,c=0;for(let t=0;t<9;t++)s.probe[t].set(0,0,0);let h=0,u=0,d=0,p=0,m=0,f=0,g=0,y=0,v=0,x=0;r.sort(Rr);const _=!0!==o?Math.PI:1;for(let t=0,e=r.length;t<e;t++){const e=r[t],o=e.color,b=e.intensity,w=e.distance,M=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)a+=o.r*b*_,l+=o.g*b*_,c+=o.b*b*_;else if(e.isLightProbe)for(let t=0;t<9;t++)s.probe[t].addScaledVector(e.sh.coefficients[t],b);else if(e.isDirectionalLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*_),e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,s.directionalShadow[h]=i,s.directionalShadowMap[h]=M,s.directionalShadowMatrix[h]=e.shadow.matrix,f++}s.directional[h]=t,h++}else if(e.isSpotLight){const t=i.get(e);t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(o).multiplyScalar(b*_),t.distance=w,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,s.spot[d]=t;const r=e.shadow;if(e.map&&(s.spotLightMap[v]=e.map,v++,r.updateMatrices(e),e.castShadow&&x++),s.spotLightMatrix[d]=r.matrix,e.castShadow){const t=n.get(e);t.shadowBias=r.bias,t.shadowNormalBias=r.normalBias,t.shadowRadius=r.radius,t.shadowMapSize=r.mapSize,s.spotShadow[d]=t,s.spotShadowMap[d]=M,y++}d++}else if(e.isRectAreaLight){const t=i.get(e);t.color.copy(o).multiplyScalar(b),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),s.rectArea[p]=t,p++}else if(e.isPointLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*_),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,i.shadowCameraNear=t.camera.near,i.shadowCameraFar=t.camera.far,s.pointShadow[u]=i,s.pointShadowMap[u]=M,s.pointShadowMatrix[u]=e.shadow.matrix,g++}s.point[u]=t,u++}else if(e.isHemisphereLight){const t=i.get(e);t.skyColor.copy(e.color).multiplyScalar(b*_),t.groundColor.copy(e.groundColor).multiplyScalar(b*_),s.hemi[m]=t,m++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(s.rectAreaLTC1=wn.LTC_FLOAT_1,s.rectAreaLTC2=wn.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(s.rectAreaLTC1=wn.LTC_HALF_1,s.rectAreaLTC2=wn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=a,s.ambient[1]=l,s.ambient[2]=c;const b=s.hash;b.directionalLength===h&&b.pointLength===u&&b.spotLength===d&&b.rectAreaLength===p&&b.hemiLength===m&&b.numDirectionalShadows===f&&b.numPointShadows===g&&b.numSpotShadows===y&&b.numSpotMaps===v||(s.directional.length=h,s.spot.length=d,s.rectArea.length=p,s.point.length=u,s.hemi.length=m,s.directionalShadow.length=f,s.directionalShadowMap.length=f,s.pointShadow.length=g,s.pointShadowMap.length=g,s.spotShadow.length=y,s.spotShadowMap.length=y,s.directionalShadowMatrix.length=f,s.pointShadowMatrix.length=g,s.spotLightMatrix.length=y+v-x,s.spotLightMap.length=v,s.numSpotLightShadowsWithMaps=x,b.directionalLength=h,b.pointLength=u,b.spotLength=d,b.rectAreaLength=p,b.hemiLength=m,b.numDirectionalShadows=f,b.numPointShadows=g,b.numSpotShadows=y,b.numSpotMaps=v,s.version=Cr++)},setupView:function(t,e){let i=0,n=0,l=0,c=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=s.directional[i];t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),i++}else if(d.isSpotLight){const t=s.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const t=s.rectArea[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),a.identity(),o.copy(d.matrixWorld),o.premultiply(u),a.extractRotation(o),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),c++}else if(d.isPointLight){const t=s.point[n];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),n++}else if(d.isHemisphereLight){const t=s.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),h++}}},state:s}}function Pr(t,e){const i=new Lr(t,e),n=[],s=[];return{init:function(){n.length=0,s.length=0},state:{lightsArray:n,shadowsArray:s,lights:i},setupLights:function(t){i.setup(n,t)},setupLightsView:function(t){i.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){s.push(t)}}}function Ir(t,e){let i=new WeakMap;return{get:function(n,s=0){const r=i.get(n);let o;return void 0===r?(o=new Pr(t,e),i.set(n,[o])):s>=r.length?(o=new Pr(t,e),r.push(o)):o=r[s],o},dispose:function(){i=new WeakMap}}}class Dr extends vi{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Nr extends vi{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new ne,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Br(t,e,i){let n=new yn;const s=new Rt,r=new Rt,o=new Qt,a=new Dr({depthPacking:3201}),l=new Nr,c={},h=i.maxTextureSize,u={0:1,1:0,2:2},d=new sn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Rt},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),m=d.clone();m.defines.HORIZONTAL_PASS=1;const f=new Di;f.setAttribute("position",new wi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Ki(f,d),y=this;function v(i,n){const r=e.update(g);d.defines.VSM_SAMPLES!==i.blurSamples&&(d.defines.VSM_SAMPLES=i.blurSamples,m.defines.VSM_SAMPLES=i.blurSamples,d.needsUpdate=!0,m.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new $t(s.x,s.y)),d.uniforms.shadow_pass.value=i.map.texture,d.uniforms.resolution.value=i.mapSize,d.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(n,null,r,d,g,null),m.uniforms.shadow_pass.value=i.mapPass.texture,m.uniforms.resolution.value=i.mapSize,m.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(n,null,r,m,g,null)}function x(e,i,n,s,r,o){let h=null;const d=!0===n.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(h=void 0!==d?d:!0===n.isPointLight?l:a,t.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){const t=h.uuid,e=i.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let s=n[e];void 0===s&&(s=h.clone(),n[e]=s),h=s}return h.visible=i.visible,h.wireframe=i.wireframe,h.side=3===o?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:u[i.side],h.alphaMap=i.alphaMap,h.alphaTest=i.alphaTest,h.clipShadows=i.clipShadows,h.clippingPlanes=i.clippingPlanes,h.clipIntersection=i.clipIntersection,h.displacementMap=i.displacementMap,h.displacementScale=i.displacementScale,h.displacementBias=i.displacementBias,h.wireframeLinewidth=i.wireframeLinewidth,h.linewidth=i.linewidth,!0===n.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(n.matrixWorld),h.nearDistance=s,h.farDistance=r),h}function _(i,s,r,o,a){if(!1===i.visible)return;if(i.layers.test(s.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===a)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,i.matrixWorld);const n=e.update(i),s=i.material;if(Array.isArray(s)){const e=n.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],h=s[c.materialIndex];if(h&&h.visible){const e=x(i,h,o,r.near,r.far,a);t.renderBufferDirect(r,null,n,e,i,c)}}}else if(s.visible){const e=x(i,s,o,r.near,r.far,a);t.renderBufferDirect(r,null,n,e,i,null)}}const l=i.children;for(let t=0,e=l.length;t<e;t++)_(l[t],s,r,o,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,i,a){if(!1===y.enabled)return;if(!1===y.autoUpdate&&!1===y.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,c=e.length;l<c;l++){const c=e[l],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;s.copy(u.mapSize);const m=u.getFrameExtents();if(s.multiply(m),r.copy(u.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/m.x),s.x=r.x*m.x,u.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/m.y),s.y=r.y*m.y,u.mapSize.y=r.y)),null===u.map){const t=3!==this.type?{minFilter:p,magFilter:p}:{};u.map=new $t(s.x,s.y,t),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const f=u.getViewportCount();for(let t=0;t<f;t++){const e=u.getViewport(t);o.set(r.x*e.x,r.y*e.y,r.x*e.z,r.y*e.w),d.viewport(o),u.updateMatrices(c,t),n=u.getFrustum(),_(i,a,u.camera,c,this.type)}!0!==u.isPointLightShadow&&3===this.type&&v(u,a),u.needsUpdate=!1}y.needsUpdate=!1,t.setRenderTarget(l,c,u)}}function Fr(t,e,i){const s=i.isWebGL2,r=new function(){let e=!1;const i=new Qt;let n=null;const s=new Qt(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,r,o,a){!0===a&&(e*=o,n*=o,r*=o),i.set(e,n,r,o),!1===s.equals(i)&&(t.clearColor(e,n,r,o),s.copy(i))},reset:function(){e=!1,n=null,s.set(-1,0,0,0)}}},o=new function(){let e=!1,i=null,n=null,s=null;return{setTest:function(e){e?V(t.DEPTH_TEST):k(t.DEPTH_TEST)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}n=e}},setLocked:function(t){e=t},setClear:function(e){s!==e&&(t.clearDepth(e),s=e)},reset:function(){e=!1,i=null,n=null,s=null}}},a=new function(){let e=!1,i=null,n=null,s=null,r=null,o=null,a=null,l=null,c=null;return{setTest:function(i){e||(i?V(t.STENCIL_TEST):k(t.STENCIL_TEST))},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,o){n===e&&s===i&&r===o||(t.stencilFunc(e,i,o),n=e,s=i,r=o)},setOp:function(e,i,n){o===e&&a===i&&l===n||(t.stencilOp(e,i,n),o=e,a=i,l=n)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,i=null,n=null,s=null,r=null,o=null,a=null,l=null,c=null}}},l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,p=[],m=null,f=!1,g=null,y=null,v=null,x=null,_=null,b=null,w=null,M=!1,S=null,E=null,T=null,A=null,C=null;const R=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let L=!1,P=0;const I=t.getParameter(t.VERSION);-1!==I.indexOf("WebGL")?(P=parseFloat(/^WebGL (\d)/.exec(I)[1]),L=P>=1):-1!==I.indexOf("OpenGL ES")&&(P=parseFloat(/^OpenGL ES (\d)/.exec(I)[1]),L=P>=2);let D=null,N={};const B=t.getParameter(t.SCISSOR_BOX),F=t.getParameter(t.VIEWPORT),O=(new Qt).fromArray(B),z=(new Qt).fromArray(F);function U(e,i,n){const s=new Uint8Array(4),r=t.createTexture();t.bindTexture(e,r),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let e=0;e<n;e++)t.texImage2D(i+e,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,s);return r}const H={};function V(e){!0!==h[e]&&(t.enable(e),h[e]=!0)}function k(e){!1!==h[e]&&(t.disable(e),h[e]=!1)}H[t.TEXTURE_2D]=U(t.TEXTURE_2D,t.TEXTURE_2D,1),H[t.TEXTURE_CUBE_MAP]=U(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),V(t.DEPTH_TEST),o.setFunc(3),j(!1),X(1),V(t.CULL_FACE),q(0);const G={[n]:t.FUNC_ADD,101:t.FUNC_SUBTRACT,102:t.FUNC_REVERSE_SUBTRACT};if(s)G[103]=t.MIN,G[104]=t.MAX;else{const t=e.get("EXT_blend_minmax");null!==t&&(G[103]=t.MIN_EXT,G[104]=t.MAX_EXT)}const W={200:t.ZERO,201:t.ONE,202:t.SRC_COLOR,204:t.SRC_ALPHA,210:t.SRC_ALPHA_SATURATE,208:t.DST_COLOR,206:t.DST_ALPHA,203:t.ONE_MINUS_SRC_COLOR,205:t.ONE_MINUS_SRC_ALPHA,209:t.ONE_MINUS_DST_COLOR,207:t.ONE_MINUS_DST_ALPHA};function q(e,i,s,r,o,a,l,c){if(0!==e){if(!1===f&&(V(t.BLEND),f=!0),5===e)o=o||i,a=a||s,l=l||r,i===y&&o===_||(t.blendEquationSeparate(G[i],G[o]),y=i,_=o),s===v&&r===x&&a===b&&l===w||(t.blendFuncSeparate(W[s],W[r],W[a],W[l]),v=s,x=r,b=a,w=l),g=e,M=null;else if(e!==g||c!==M){if(y===n&&_===n||(t.blendEquation(t.FUNC_ADD),y=n,_=n),c)switch(e){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}v=null,x=null,b=null,w=null,g=e,M=c}}else!0===f&&(k(t.BLEND),f=!1)}function j(e){S!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),S=e)}function X(e){0!==e?(V(t.CULL_FACE),e!==E&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):k(t.CULL_FACE),E=e}function Y(e,i,n){e?(V(t.POLYGON_OFFSET_FILL),A===i&&C===n||(t.polygonOffset(i,n),A=i,C=n)):k(t.POLYGON_OFFSET_FILL)}return{buffers:{color:r,depth:o,stencil:a},enable:V,disable:k,bindFramebuffer:function(e,i){return u[e]!==i&&(t.bindFramebuffer(e,i),u[e]=i,s&&(e===t.DRAW_FRAMEBUFFER&&(u[t.FRAMEBUFFER]=i),e===t.FRAMEBUFFER&&(u[t.DRAW_FRAMEBUFFER]=i)),!0)},drawBuffers:function(n,s){let r=p,o=!1;if(n)if(r=d.get(s),void 0===r&&(r=[],d.set(s,r)),n.isWebGLMultipleRenderTargets){const e=n.texture;if(r.length!==e.length||r[0]!==t.COLOR_ATTACHMENT0){for(let i=0,n=e.length;i<n;i++)r[i]=t.COLOR_ATTACHMENT0+i;r.length=e.length,o=!0}}else r[0]!==t.COLOR_ATTACHMENT0&&(r[0]=t.COLOR_ATTACHMENT0,o=!0);else r[0]!==t.BACK&&(r[0]=t.BACK,o=!0);o&&(i.isWebGL2?t.drawBuffers(r):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(r))},useProgram:function(e){return m!==e&&(t.useProgram(e),m=e,!0)},setBlending:q,setMaterial:function(e,i){2===e.side?k(t.CULL_FACE):V(t.CULL_FACE);let n=1===e.side;i&&(n=!n),j(n),1===e.blending&&!1===e.transparent?q(0):q(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),o.setFunc(e.depthFunc),o.setTest(e.depthTest),o.setMask(e.depthWrite),r.setMask(e.colorWrite);const s=e.stencilWrite;a.setTest(s),s&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Y(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?V(t.SAMPLE_ALPHA_TO_COVERAGE):k(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:j,setCullFace:X,setLineWidth:function(e){e!==T&&(L&&t.lineWidth(e),T=e)},setPolygonOffset:Y,setScissorTest:function(e){e?V(t.SCISSOR_TEST):k(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+R-1),D!==e&&(t.activeTexture(e),D=e)},bindTexture:function(e,i,n){void 0===n&&(n=null===D?t.TEXTURE0+R-1:D);let s=N[n];void 0===s&&(s={type:void 0,texture:void 0},N[n]=s),s.type===e&&s.texture===i||(D!==n&&(t.activeTexture(n),D=n),t.bindTexture(e,i||H[e]),s.type=e,s.texture=i)},unbindTexture:function(){const e=N[D];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,i){let n=c.get(i);void 0===n&&(n=new WeakMap,c.set(i,n));let s=n.get(e);void 0===s&&(s=t.getUniformBlockIndex(i,e.name),n.set(e,s))},uniformBlockBinding:function(e,i){const n=c.get(i).get(e);l.get(e)!==n&&(t.uniformBlockBinding(i,n,e.__bindingPointIndex),l.set(e,n))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===O.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),O.copy(e))},viewport:function(e){!1===z.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),z.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),!0===s&&(t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),h={},D=null,N={},u={},d=new WeakMap,p=[],m=null,f=!1,g=null,y=null,v=null,x=null,_=null,b=null,w=null,M=!1,S=null,E=null,T=null,A=null,C=null,O.set(0,0,t.canvas.width,t.canvas.height),z.set(0,0,t.canvas.width,t.canvas.height),r.reset(),o.reset(),a.reset()}}}function Or(t,e,i,n,s,r,o){const a=s.isWebGL2,l=s.maxTextures,c=s.maxCubemapSize,C=s.maxTextureSize,R=s.maxSamples,L=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,P=/OculusBrowser/g.test(navigator.userAgent),I=new WeakMap;let D;const N=new WeakMap;let B=!1;try{B="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function F(t,e){return B?new OffscreenCanvas(t,e):Nt("canvas")}function O(t,e,i,n){let s=1;if((t.width>n||t.height>n)&&(s=n/Math.max(t.width,t.height)),s<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const n=e?Et:Math.floor,r=n(s*t.width),o=n(s*t.height);void 0===D&&(D=F(r,o));const a=i?F(r,o):D;return a.width=r,a.height=o,a.getContext("2d").drawImage(t,0,0,r,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+r+"x"+o+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function z(t){return Mt(t.width)&&Mt(t.height)}function U(t,e){return t.generateMipmaps&&e&&t.minFilter!==p&&t.minFilter!==g}function H(e){t.generateMipmap(e)}function V(i,n,s,r,o=!1){if(!1===a)return n;if(null!==i){if(void 0!==t[i])return t[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let l=n;return n===t.RED&&(s===t.FLOAT&&(l=t.R32F),s===t.HALF_FLOAT&&(l=t.R16F),s===t.UNSIGNED_BYTE&&(l=t.R8)),n===t.RG&&(s===t.FLOAT&&(l=t.RG32F),s===t.HALF_FLOAT&&(l=t.RG16F),s===t.UNSIGNED_BYTE&&(l=t.RG8)),n===t.RGBA&&(s===t.FLOAT&&(l=t.RGBA32F),s===t.HALF_FLOAT&&(l=t.RGBA16F),s===t.UNSIGNED_BYTE&&(l=r===at&&!1===o?t.SRGB8_ALPHA8:t.RGBA8),s===t.UNSIGNED_SHORT_4_4_4_4&&(l=t.RGBA4),s===t.UNSIGNED_SHORT_5_5_5_1&&(l=t.RGB5_A1)),l!==t.R16F&&l!==t.R32F&&l!==t.RG16F&&l!==t.RG32F&&l!==t.RGBA16F&&l!==t.RGBA32F||e.get("EXT_color_buffer_float"),l}function k(t,e,i){return!0===U(t,i)||t.isFramebufferTexture&&t.minFilter!==p&&t.minFilter!==g?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function G(e){return e===p||e===m||e===f?t.NEAREST:t.LINEAR}function W(t){const e=t.target;e.removeEventListener("dispose",W),function(t){const e=n.get(t);if(void 0===e.__webglInit)return;const i=t.source,s=N.get(i);if(s){const n=s[e.__cacheKey];n.usedTimes--,0===n.usedTimes&&j(t),0===Object.keys(s).length&&N.delete(i)}n.remove(t)}(e),e.isVideoTexture&&I.delete(e)}function q(e){const i=e.target;i.removeEventListener("dispose",q),function(e){const i=e.texture,s=n.get(e),r=n.get(i);if(void 0!==r.__webglTexture&&(t.deleteTexture(r.__webglTexture),o.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(s.__webglFramebuffer[e]),s.__webglDepthbuffer&&t.deleteRenderbuffer(s.__webglDepthbuffer[e]);else{if(t.deleteFramebuffer(s.__webglFramebuffer),s.__webglDepthbuffer&&t.deleteRenderbuffer(s.__webglDepthbuffer),s.__webglMultisampledFramebuffer&&t.deleteFramebuffer(s.__webglMultisampledFramebuffer),s.__webglColorRenderbuffer)for(let e=0;e<s.__webglColorRenderbuffer.length;e++)s.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(s.__webglColorRenderbuffer[e]);s.__webglDepthRenderbuffer&&t.deleteRenderbuffer(s.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let e=0,s=i.length;e<s;e++){const s=n.get(i[e]);s.__webglTexture&&(t.deleteTexture(s.__webglTexture),o.memory.textures--),n.remove(i[e])}n.remove(i),n.remove(e)}(i)}function j(e){const i=n.get(e);t.deleteTexture(i.__webglTexture);const s=e.source;delete N.get(s)[i.__cacheKey],o.memory.textures--}let X=0;function Y(e,s){const r=n.get(e);if(e.isVideoTexture&&function(t){const e=o.render.frame;I.get(t)!==e&&(I.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void $(r,e,s);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.bindTexture(t.TEXTURE_2D,r.__webglTexture,t.TEXTURE0+s)}const Z={[h]:t.REPEAT,[u]:t.CLAMP_TO_EDGE,[d]:t.MIRRORED_REPEAT},J={[p]:t.NEAREST,[m]:t.NEAREST_MIPMAP_NEAREST,[f]:t.NEAREST_MIPMAP_LINEAR,[g]:t.LINEAR,[y]:t.LINEAR_MIPMAP_NEAREST,[v]:t.LINEAR_MIPMAP_LINEAR};function K(i,r,o){if(o?(t.texParameteri(i,t.TEXTURE_WRAP_S,Z[r.wrapS]),t.texParameteri(i,t.TEXTURE_WRAP_T,Z[r.wrapT]),i!==t.TEXTURE_3D&&i!==t.TEXTURE_2D_ARRAY||t.texParameteri(i,t.TEXTURE_WRAP_R,Z[r.wrapR]),t.texParameteri(i,t.TEXTURE_MAG_FILTER,J[r.magFilter]),t.texParameteri(i,t.TEXTURE_MIN_FILTER,J[r.minFilter])):(t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),i!==t.TEXTURE_3D&&i!==t.TEXTURE_2D_ARRAY||t.texParameteri(i,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),r.wrapS===u&&r.wrapT===u||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(i,t.TEXTURE_MAG_FILTER,G(r.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,G(r.minFilter)),r.minFilter!==p&&r.minFilter!==g&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const o=e.get("EXT_texture_filter_anisotropic");if(r.type===w&&!1===e.has("OES_texture_float_linear"))return;if(!1===a&&r.type===M&&!1===e.has("OES_texture_half_float_linear"))return;(r.anisotropy>1||n.get(r).__currentAnisotropy)&&(t.texParameterf(i,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,s.getMaxAnisotropy())),n.get(r).__currentAnisotropy=r.anisotropy)}}function Q(e,i){let n=!1;void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",W));const s=i.source;let r=N.get(s);void 0===r&&(r={},N.set(s,r));const a=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.encoding),e.join()}(i);if(a!==e.__cacheKey){void 0===r[a]&&(r[a]={texture:t.createTexture(),usedTimes:0},o.memory.textures++,n=!0),r[a].usedTimes++;const s=r[e.__cacheKey];void 0!==s&&(r[e.__cacheKey].usedTimes--,0===s.usedTimes&&j(i)),e.__cacheKey=a,e.__webglTexture=r[a].texture}return n}function $(e,s,o){let l=t.TEXTURE_2D;s.isDataArrayTexture&&(l=t.TEXTURE_2D_ARRAY),s.isData3DTexture&&(l=t.TEXTURE_3D);const c=Q(e,s),h=s.source;i.bindTexture(l,e.__webglTexture,t.TEXTURE0+o);const d=n.get(h);if(h.version!==d.__version||!0===c){i.activeTexture(t.TEXTURE0+o),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,s.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);const e=function(t){return!a&&(t.wrapS!==u||t.wrapT!==u||t.minFilter!==p&&t.minFilter!==g)}(s)&&!1===z(s.image);let n=O(s.image,e,!1,C);n=rt(s,n);const m=z(n)||a,f=r.convert(s.format,s.encoding);let y,v=r.convert(s.type),x=V(s.internalFormat,f,v,s.encoding,s.isVideoTexture);K(l,s,m);const M=s.mipmaps,R=a&&!0!==s.isVideoTexture,L=void 0===d.__version||!0===c,P=k(s,n,m);if(s.isDepthTexture)x=t.DEPTH_COMPONENT,a?x=s.type===w?t.DEPTH_COMPONENT32F:s.type===b?t.DEPTH_COMPONENT24:s.type===S?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT16:s.type===w&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),s.format===T&&x===t.DEPTH_COMPONENT&&s.type!==_&&s.type!==b&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),s.type=b,v=r.convert(s.type)),s.format===A&&x===t.DEPTH_COMPONENT&&(x=t.DEPTH_STENCIL,s.type!==S&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),s.type=S,v=r.convert(s.type))),L&&(R?i.texStorage2D(t.TEXTURE_2D,1,x,n.width,n.height):i.texImage2D(t.TEXTURE_2D,0,x,n.width,n.height,0,f,v,null));else if(s.isDataTexture)if(M.length>0&&m){R&&L&&i.texStorage2D(t.TEXTURE_2D,P,x,M[0].width,M[0].height);for(let e=0,n=M.length;e<n;e++)y=M[e],R?i.texSubImage2D(t.TEXTURE_2D,e,0,0,y.width,y.height,f,v,y.data):i.texImage2D(t.TEXTURE_2D,e,x,y.width,y.height,0,f,v,y.data);s.generateMipmaps=!1}else R?(L&&i.texStorage2D(t.TEXTURE_2D,P,x,n.width,n.height),i.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,f,v,n.data)):i.texImage2D(t.TEXTURE_2D,0,x,n.width,n.height,0,f,v,n.data);else if(s.isCompressedTexture){R&&L&&i.texStorage2D(t.TEXTURE_2D,P,x,M[0].width,M[0].height);for(let e=0,n=M.length;e<n;e++)y=M[e],s.format!==E?null!==f?R?i.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,y.width,y.height,f,y.data):i.compressedTexImage2D(t.TEXTURE_2D,e,x,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):R?i.texSubImage2D(t.TEXTURE_2D,e,0,0,y.width,y.height,f,v,y.data):i.texImage2D(t.TEXTURE_2D,e,x,y.width,y.height,0,f,v,y.data)}else if(s.isDataArrayTexture)R?(L&&i.texStorage3D(t.TEXTURE_2D_ARRAY,P,x,n.width,n.height,n.depth),i.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,n.width,n.height,n.depth,f,v,n.data)):i.texImage3D(t.TEXTURE_2D_ARRAY,0,x,n.width,n.height,n.depth,0,f,v,n.data);else if(s.isData3DTexture)R?(L&&i.texStorage3D(t.TEXTURE_3D,P,x,n.width,n.height,n.depth),i.texSubImage3D(t.TEXTURE_3D,0,0,0,0,n.width,n.height,n.depth,f,v,n.data)):i.texImage3D(t.TEXTURE_3D,0,x,n.width,n.height,n.depth,0,f,v,n.data);else if(s.isFramebufferTexture){if(L)if(R)i.texStorage2D(t.TEXTURE_2D,P,x,n.width,n.height);else{let e=n.width,s=n.height;for(let n=0;n<P;n++)i.texImage2D(t.TEXTURE_2D,n,x,e,s,0,f,v,null),e>>=1,s>>=1}}else if(M.length>0&&m){R&&L&&i.texStorage2D(t.TEXTURE_2D,P,x,M[0].width,M[0].height);for(let e=0,n=M.length;e<n;e++)y=M[e],R?i.texSubImage2D(t.TEXTURE_2D,e,0,0,f,v,y):i.texImage2D(t.TEXTURE_2D,e,x,f,v,y);s.generateMipmaps=!1}else R?(L&&i.texStorage2D(t.TEXTURE_2D,P,x,n.width,n.height),i.texSubImage2D(t.TEXTURE_2D,0,0,0,f,v,n)):i.texImage2D(t.TEXTURE_2D,0,x,f,v,n);U(s,m)&&H(l),d.__version=h.version,s.onUpdate&&s.onUpdate(s)}e.__version=s.version}function tt(e,s,o,a,l){const c=r.convert(o.format,o.encoding),h=r.convert(o.type),u=V(o.internalFormat,c,h,o.encoding);n.get(s).__hasExternalTextures||(l===t.TEXTURE_3D||l===t.TEXTURE_2D_ARRAY?i.texImage3D(l,0,u,s.width,s.height,s.depth,0,c,h,null):i.texImage2D(l,0,u,s.width,s.height,0,c,h,null)),i.bindFramebuffer(t.FRAMEBUFFER,e),st(s)?L.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,a,l,n.get(o).__webglTexture,0,nt(s)):t.framebufferTexture2D(t.FRAMEBUFFER,a,l,n.get(o).__webglTexture,0),i.bindFramebuffer(t.FRAMEBUFFER,null)}function et(e,i,n){if(t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer&&!i.stencilBuffer){let s=t.DEPTH_COMPONENT16;if(n||st(i)){const e=i.depthTexture;e&&e.isDepthTexture&&(e.type===w?s=t.DEPTH_COMPONENT32F:e.type===b&&(s=t.DEPTH_COMPONENT24));const n=nt(i);st(i)?L.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,n,s,i.width,i.height):t.renderbufferStorageMultisample(t.RENDERBUFFER,n,s,i.width,i.height)}else t.renderbufferStorage(t.RENDERBUFFER,s,i.width,i.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)}else if(i.depthBuffer&&i.stencilBuffer){const s=nt(i);n&&!1===st(i)?t.renderbufferStorageMultisample(t.RENDERBUFFER,s,t.DEPTH24_STENCIL8,i.width,i.height):st(i)?L.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,s,t.DEPTH24_STENCIL8,i.width,i.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)}else{const e=!0===i.isWebGLMultipleRenderTargets?i.texture:[i.texture];for(let s=0;s<e.length;s++){const o=e[s],a=r.convert(o.format,o.encoding),l=r.convert(o.type),c=V(o.internalFormat,a,l,o.encoding),h=nt(i);n&&!1===st(i)?t.renderbufferStorageMultisample(t.RENDERBUFFER,h,c,i.width,i.height):st(i)?L.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,h,c,i.width,i.height):t.renderbufferStorage(t.RENDERBUFFER,c,i.width,i.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function it(e){const s=n.get(e),r=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!s.__autoAllocateDepthBuffer){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,s){if(s&&s.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(t.FRAMEBUFFER,e),!s.depthTexture||!s.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(s.depthTexture).__webglTexture&&s.depthTexture.image.width===s.width&&s.depthTexture.image.height===s.height||(s.depthTexture.image.width=s.width,s.depthTexture.image.height=s.height,s.depthTexture.needsUpdate=!0),Y(s.depthTexture,0);const r=n.get(s.depthTexture).__webglTexture,o=nt(s);if(s.depthTexture.format===T)st(s)?L.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0,o):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(s.depthTexture.format!==A)throw new Error("Unknown depthTexture format");st(s)?L.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0,o):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}(s.__webglFramebuffer,e)}else if(r){s.__webglDepthbuffer=[];for(let n=0;n<6;n++)i.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer[n]),s.__webglDepthbuffer[n]=t.createRenderbuffer(),et(s.__webglDepthbuffer[n],e,!1)}else i.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer),s.__webglDepthbuffer=t.createRenderbuffer(),et(s.__webglDepthbuffer,e,!1);i.bindFramebuffer(t.FRAMEBUFFER,null)}function nt(t){return Math.min(R,t.samples)}function st(t){const i=n.get(t);return a&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function rt(t,i){const n=t.encoding,s=t.format,r=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===pt||n!==ot&&(n===at?!1===a?!0===e.has("EXT_sRGB")&&s===E?(t.format=pt,t.minFilter=g,t.generateMipmaps=!1):i=Xt.sRGBToLinear(i):s===E&&r===x||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",n)),i}this.allocateTextureUnit=function(){const t=X;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),X+=1,t},this.resetTextureUnits=function(){X=0},this.setTexture2D=Y,this.setTexture2DArray=function(e,s){const r=n.get(e);e.version>0&&r.__version!==e.version?$(r,e,s):i.bindTexture(t.TEXTURE_2D_ARRAY,r.__webglTexture,t.TEXTURE0+s)},this.setTexture3D=function(e,s){const r=n.get(e);e.version>0&&r.__version!==e.version?$(r,e,s):i.bindTexture(t.TEXTURE_3D,r.__webglTexture,t.TEXTURE0+s)},this.setTextureCube=function(e,s){const o=n.get(e);e.version>0&&o.__version!==e.version?function(e,s,o){if(6!==s.image.length)return;const l=Q(e,s),h=s.source;i.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+o);const u=n.get(h);if(h.version!==u.__version||!0===l){i.activeTexture(t.TEXTURE0+o),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,s.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);const e=s.isCompressedTexture||s.image[0].isCompressedTexture,n=s.image[0]&&s.image[0].isDataTexture,d=[];for(let t=0;t<6;t++)d[t]=e||n?n?s.image[t].image:s.image[t]:O(s.image[t],!1,!0,c),d[t]=rt(s,d[t]);const p=d[0],m=z(p)||a,f=r.convert(s.format,s.encoding),g=r.convert(s.type),y=V(s.internalFormat,f,g,s.encoding),v=a&&!0!==s.isVideoTexture,x=void 0===u.__version||!0===l;let _,b=k(s,p,m);if(K(t.TEXTURE_CUBE_MAP,s,m),e){v&&x&&i.texStorage2D(t.TEXTURE_CUBE_MAP,b,y,p.width,p.height);for(let e=0;e<6;e++){_=d[e].mipmaps;for(let n=0;n<_.length;n++){const r=_[n];s.format!==E?null!==f?v?i.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n,0,0,r.width,r.height,f,r.data):i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n,y,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):v?i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n,0,0,r.width,r.height,f,g,r.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n,y,r.width,r.height,0,f,g,r.data)}}}else{_=s.mipmaps,v&&x&&(_.length>0&&b++,i.texStorage2D(t.TEXTURE_CUBE_MAP,b,y,d[0].width,d[0].height));for(let e=0;e<6;e++)if(n){v?i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,d[e].width,d[e].height,f,g,d[e].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,y,d[e].width,d[e].height,0,f,g,d[e].data);for(let n=0;n<_.length;n++){const s=_[n].image[e].image;v?i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n+1,0,0,s.width,s.height,f,g,s.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n+1,y,s.width,s.height,0,f,g,s.data)}}else{v?i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,f,g,d[e]):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,y,f,g,d[e]);for(let n=0;n<_.length;n++){const s=_[n];v?i.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n+1,0,0,f,g,s.image[e]):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,n+1,y,f,g,s.image[e])}}}U(s,m)&&H(t.TEXTURE_CUBE_MAP),u.__version=h.version,s.onUpdate&&s.onUpdate(s)}e.__version=s.version}(o,e,s):i.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture,t.TEXTURE0+s)},this.rebindTextures=function(e,i,s){const r=n.get(e);void 0!==i&&tt(r.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),void 0!==s&&it(e)},this.setupRenderTarget=function(e){const l=e.texture,c=n.get(e),h=n.get(l);e.addEventListener("dispose",q),!0!==e.isWebGLMultipleRenderTargets&&(void 0===h.__webglTexture&&(h.__webglTexture=t.createTexture()),h.__version=l.version,o.memory.textures++);const u=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=z(e)||a;if(u){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else{if(c.__webglFramebuffer=t.createFramebuffer(),d)if(s.drawBuffers){const i=e.texture;for(let e=0,s=i.length;e<s;e++){const s=n.get(i[e]);void 0===s.__webglTexture&&(s.__webglTexture=t.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&e.samples>0&&!1===st(e)){const n=d?l:[l];c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=[],i.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer);for(let i=0;i<n.length;i++){const s=n[i];c.__webglColorRenderbuffer[i]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,c.__webglColorRenderbuffer[i]);const o=r.convert(s.format,s.encoding),a=r.convert(s.type),l=V(s.internalFormat,o,a,s.encoding,!0===e.isXRRenderTarget),h=nt(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,h,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+i,t.RENDERBUFFER,c.__webglColorRenderbuffer[i])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),et(c.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(t.FRAMEBUFFER,null)}}if(u){i.bindTexture(t.TEXTURE_CUBE_MAP,h.__webglTexture),K(t.TEXTURE_CUBE_MAP,l,p);for(let i=0;i<6;i++)tt(c.__webglFramebuffer[i],e,l,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+i);U(l,p)&&H(t.TEXTURE_CUBE_MAP),i.unbindTexture()}else if(d){const s=e.texture;for(let r=0,o=s.length;r<o;r++){const o=s[r],a=n.get(o);i.bindTexture(t.TEXTURE_2D,a.__webglTexture),K(t.TEXTURE_2D,o,p),tt(c.__webglFramebuffer,e,o,t.COLOR_ATTACHMENT0+r,t.TEXTURE_2D),U(o,p)&&H(t.TEXTURE_2D)}i.unbindTexture()}else{let n=t.TEXTURE_2D;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(a?n=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),i.bindTexture(n,h.__webglTexture),K(n,l,p),tt(c.__webglFramebuffer,e,l,t.COLOR_ATTACHMENT0,n),U(l,p)&&H(n),i.unbindTexture()}e.depthBuffer&&it(e)},this.updateRenderTargetMipmap=function(e){const s=z(e)||a,r=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let o=0,a=r.length;o<a;o++){const a=r[o];if(U(a,s)){const s=e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,r=n.get(a).__webglTexture;i.bindTexture(s,r),H(s),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(a&&e.samples>0&&!1===st(e)){const s=e.isWebGLMultipleRenderTargets?e.texture:[e.texture],r=e.width,o=e.height;let a=t.COLOR_BUFFER_BIT;const l=[],c=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,h=n.get(e),u=!0===e.isWebGLMultipleRenderTargets;if(u)for(let e=0;e<s.length;e++)i.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),i.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);i.bindFramebuffer(t.READ_FRAMEBUFFER,h.__webglMultisampledFramebuffer),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglFramebuffer);for(let i=0;i<s.length;i++){l.push(t.COLOR_ATTACHMENT0+i),e.depthBuffer&&l.push(c);const d=void 0!==h.__ignoreDepthValues&&h.__ignoreDepthValues;if(!1===d&&(e.depthBuffer&&(a|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&(a|=t.STENCIL_BUFFER_BIT)),u&&t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,h.__webglColorRenderbuffer[i]),!0===d&&(t.invalidateFramebuffer(t.READ_FRAMEBUFFER,[c]),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[c])),u){const e=n.get(s[i]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,r,o,0,0,r,o,a,t.NEAREST),P&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,l)}if(i.bindFramebuffer(t.READ_FRAMEBUFFER,null),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),u)for(let e=0;e<s.length;e++){i.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,h.__webglColorRenderbuffer[e]);const r=n.get(s[e]).__webglTexture;i.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,r,0)}i.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=it,this.setupFrameBufferTexture=tt,this.useMultisampledRTT=st}function zr(t,e,i){const n=i.isWebGL2;return{convert:function(i,s=null){let r;if(i===x)return t.UNSIGNED_BYTE;if(1017===i)return t.UNSIGNED_SHORT_4_4_4_4;if(1018===i)return t.UNSIGNED_SHORT_5_5_5_1;if(1010===i)return t.BYTE;if(1011===i)return t.SHORT;if(i===_)return t.UNSIGNED_SHORT;if(1013===i)return t.INT;if(i===b)return t.UNSIGNED_INT;if(i===w)return t.FLOAT;if(i===M)return n?t.HALF_FLOAT:(r=e.get("OES_texture_half_float"),null!==r?r.HALF_FLOAT_OES:null);if(1021===i)return t.ALPHA;if(i===E)return t.RGBA;if(1024===i)return t.LUMINANCE;if(1025===i)return t.LUMINANCE_ALPHA;if(i===T)return t.DEPTH_COMPONENT;if(i===A)return t.DEPTH_STENCIL;if(1028===i)return t.RED;if(1022===i)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),t.RGBA;if(i===pt)return r=e.get("EXT_sRGB"),null!==r?r.SRGB_ALPHA_EXT:null;if(1029===i)return t.RED_INTEGER;if(1030===i)return t.RG;if(1031===i)return t.RG_INTEGER;if(1033===i)return t.RGBA_INTEGER;if(i===C||i===R||i===L||i===P)if(s===at){if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(i===C)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===R)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===L)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===P)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=e.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(i===C)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===R)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===L)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===P)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(i===I||i===D||i===N||i===B){if(r=e.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(i===I)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===D)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===N)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===B)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===i)return r=e.get("WEBGL_compressed_texture_etc1"),null!==r?r.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===F||i===O){if(r=e.get("WEBGL_compressed_texture_etc"),null===r)return null;if(i===F)return s===at?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(i===O)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(i===z||i===U||i===H||i===V||i===k||i===G||i===W||i===q||i===j||i===X||i===Y||i===Z||i===J||i===K){if(r=e.get("WEBGL_compressed_texture_astc"),null===r)return null;if(i===z)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===U)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===H)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===V)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===k)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===G)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===W)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===q)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===j)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===X)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Y)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Z)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===J)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===K)return s===at?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===Q){if(r=e.get("EXT_texture_compression_bptc"),null===r)return null;if(i===Q)return s===at?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}return i===S?n?t.UNSIGNED_INT_24_8:(r=e.get("WEBGL_depth_texture"),null!==r?r.UNSIGNED_INT_24_8_WEBGL:null):void 0!==t[i]?t[i]:null}}}class Ur extends on{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Hr extends ri{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Vr={type:"move"};class kr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Hr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Hr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ne,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ne),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Hr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ne,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ne),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,i){let n=null,s=null,r=null;const o=this._targetRay,a=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){r=!0;for(const n of t.hand.values()){const t=e.getJointPose(n,i);if(void 0===l.joints[n.jointName]){const t=new Hr;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[n.jointName]=t,l.add(t)}const s=l.joints[n.jointName];null!==t&&(s.matrix.fromArray(t.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.jointRadius=t.radius),s.visible=null!==t}const n=l.joints["index-finger-tip"],s=l.joints["thumb-tip"],o=n.position.distanceTo(s.position),a=.02,c=.005;l.inputState.pinching&&o>a+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&o<=a-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==a&&t.gripSpace&&(s=e.getPose(t.gripSpace,i),null!==s&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1));null!==o&&(n=e.getPose(t.targetRaySpace,i),null===n&&null!==s&&(n=s),null!==n&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Vr)))}return null!==o&&(o.visible=null!==n),null!==a&&(a.visible=null!==s),null!==l&&(l.visible=null!==r),this}}class Gr extends Kt{constructor(t,e,i,n,s,r,o,a,l,c){if((c=void 0!==c?c:T)!==T&&c!==A)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&c===T&&(i=b),void 0===i&&c===A&&(i=S),super(null,n,s,r,o,a,c,i,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==o?o:p,this.minFilter=void 0!==a?a:p,this.flipY=!1,this.generateMipmaps=!1}}class Wr extends mt{constructor(t,e){super();const i=this;let n=null,s=1,r=null,o="local-floor",a=null,l=null,c=null,h=null,u=null,d=null;const p=e.getContextAttributes();let m=null,f=null;const g=[],y=[],v=new on;v.layers.enable(1),v.viewport=new Qt;const _=new on;_.layers.enable(2),_.viewport=new Qt;const w=[v,_],M=new Ur;M.layers.enable(1),M.layers.enable(2);let C=null,R=null;function L(t){const e=y.indexOf(t.inputSource);if(-1===e)return;const i=g[e];void 0!==i&&i.dispatchEvent({type:t.type,data:t.inputSource})}function P(){n.removeEventListener("select",L),n.removeEventListener("selectstart",L),n.removeEventListener("selectend",L),n.removeEventListener("squeeze",L),n.removeEventListener("squeezestart",L),n.removeEventListener("squeezeend",L),n.removeEventListener("end",P),n.removeEventListener("inputsourceschange",I);for(let t=0;t<g.length;t++){const e=y[t];null!==e&&(y[t]=null,g[t].disconnect(e))}C=null,R=null,t.setRenderTarget(m),u=null,h=null,c=null,n=null,f=null,O.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function I(t){for(let e=0;e<t.removed.length;e++){const i=t.removed[e],n=y.indexOf(i);n>=0&&(y[n]=null,g[n].dispatchEvent({type:"disconnected",data:i}))}for(let e=0;e<t.added.length;e++){const i=t.added[e];let n=y.indexOf(i);if(-1===n){for(let t=0;t<g.length;t++){if(t>=y.length){y.push(i),n=t;break}if(null===y[t]){y[t]=i,n=t;break}}if(-1===n)break}const s=g[n];s&&s.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=g[t];return void 0===e&&(e=new kr,g[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=g[t];return void 0===e&&(e=new kr,g[t]=e),e.getGripSpace()},this.getHand=function(t){let e=g[t];return void 0===e&&(e=new kr,g[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){s=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a||r},this.setReferenceSpace=function(t){a=t},this.getBaseLayer=function(){return null!==h?h:u},this.getBinding=function(){return c},this.getFrame=function(){return d},this.getSession=function(){return n},this.setSession=async function(l){if(n=l,null!==n){if(m=t.getRenderTarget(),n.addEventListener("select",L),n.addEventListener("selectstart",L),n.addEventListener("selectend",L),n.addEventListener("squeeze",L),n.addEventListener("squeezestart",L),n.addEventListener("squeezeend",L),n.addEventListener("end",P),n.addEventListener("inputsourceschange",I),!0!==p.xrCompatible&&await e.makeXRCompatible(),void 0===n.renderState.layers||!1===t.capabilities.isWebGL2){const i={antialias:void 0!==n.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};u=new XRWebGLLayer(n,e,i),n.updateRenderState({baseLayer:u}),f=new $t(u.framebufferWidth,u.framebufferHeight,{format:E,type:x,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let i=null,r=null,o=null;p.depth&&(o=p.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,i=p.stencil?A:T,r=p.stencil?S:b);const a={colorFormat:e.RGBA8,depthFormat:o,scaleFactor:s};c=new XRWebGLBinding(n,e),h=c.createProjectionLayer(a),n.updateRenderState({layers:[h]}),f=new $t(h.textureWidth,h.textureHeight,{format:E,type:x,depthTexture:new Gr(h.textureWidth,h.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0}),t.properties.get(f).__ignoreDepthValues=h.ignoreDepthValues}f.isXRRenderTarget=!0,this.setFoveation(1),a=null,r=await n.requestReferenceSpace(o),O.setContext(n),O.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};const D=new ne,N=new ne;function B(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===n)return;M.near=_.near=v.near=t.near,M.far=_.far=v.far=t.far,C===M.near&&R===M.far||(n.updateRenderState({depthNear:M.near,depthFar:M.far}),C=M.near,R=M.far);const e=t.parent,i=M.cameras;B(M,e);for(let t=0;t<i.length;t++)B(i[t],e);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),t.matrix.copy(M.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const s=t.children;for(let t=0,e=s.length;t<e;t++)s[t].updateMatrixWorld(!0);2===i.length?function(t,e,i){D.setFromMatrixPosition(e.matrixWorld),N.setFromMatrixPosition(i.matrixWorld);const n=D.distanceTo(N),s=e.projectionMatrix.elements,r=i.projectionMatrix.elements,o=s[14]/(s[10]-1),a=s[14]/(s[10]+1),l=(s[9]+1)/s[5],c=(s[9]-1)/s[5],h=(s[8]-1)/s[0],u=(r[8]+1)/r[0],d=o*h,p=o*u,m=n/(-h+u),f=m*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=o+m,y=a+m,v=d-f,x=p+(n-f),_=l*a/y*g,b=c*a/y*g;t.projectionMatrix.makePerspective(v,x,_,b,g,y)}(M,v,_):M.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){return null!==h?h.fixedFoveation:null!==u?u.fixedFoveation:void 0},this.setFoveation=function(t){null!==h&&(h.fixedFoveation=t),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=t)};let F=null;const O=new vn;O.setAnimationLoop((function(e,i){if(l=i.getViewerPose(a||r),d=i,null!==l){const e=l.views;null!==u&&(t.setRenderTargetFramebuffer(f,u.framebuffer),t.setRenderTarget(f));let i=!1;e.length!==M.cameras.length&&(M.cameras.length=0,i=!0);for(let n=0;n<e.length;n++){const s=e[n];let r=null;if(null!==u)r=u.getViewport(s);else{const e=c.getViewSubImage(h,s);r=e.viewport,0===n&&(t.setRenderTargetTextures(f,e.colorTexture,h.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(f))}let o=w[n];void 0===o&&(o=new on,o.layers.enable(n),o.viewport=new Qt,w[n]=o),o.matrix.fromArray(s.transform.matrix),o.projectionMatrix.fromArray(s.projectionMatrix),o.viewport.set(r.x,r.y,r.width,r.height),0===n&&M.matrix.copy(o.matrix),!0===i&&M.cameras.push(o)}}for(let t=0;t<g.length;t++){const e=y[t],n=g[t];null!==e&&void 0!==n&&n.update(e,i,a||r)}F&&F(e,i),d=null})),this.setAnimationLoop=function(t){F=t},this.dispose=function(){}}}function qr(t,e){function i(i,n){i.opacity.value=n.opacity,n.color&&i.diffuse.value.copy(n.color),n.emissive&&i.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(i.map.value=n.map),n.alphaMap&&(i.alphaMap.value=n.alphaMap),n.bumpMap&&(i.bumpMap.value=n.bumpMap,i.bumpScale.value=n.bumpScale,1===n.side&&(i.bumpScale.value*=-1)),n.displacementMap&&(i.displacementMap.value=n.displacementMap,i.displacementScale.value=n.displacementScale,i.displacementBias.value=n.displacementBias),n.emissiveMap&&(i.emissiveMap.value=n.emissiveMap),n.normalMap&&(i.normalMap.value=n.normalMap,i.normalScale.value.copy(n.normalScale),1===n.side&&i.normalScale.value.negate()),n.specularMap&&(i.specularMap.value=n.specularMap),n.alphaTest>0&&(i.alphaTest.value=n.alphaTest);const s=e.get(n).envMap;if(s&&(i.envMap.value=s,i.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,i.reflectivity.value=n.reflectivity,i.ior.value=n.ior,i.refractionRatio.value=n.refractionRatio),n.lightMap){i.lightMap.value=n.lightMap;const e=!0!==t.physicallyCorrectLights?Math.PI:1;i.lightMapIntensity.value=n.lightMapIntensity*e}let r,o;n.aoMap&&(i.aoMap.value=n.aoMap,i.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap?r=n.clearcoatRoughnessMap:n.iridescenceMap?r=n.iridescenceMap:n.iridescenceThicknessMap?r=n.iridescenceThicknessMap:n.specularIntensityMap?r=n.specularIntensityMap:n.specularColorMap?r=n.specularColorMap:n.transmissionMap?r=n.transmissionMap:n.thicknessMap?r=n.thicknessMap:n.sheenColorMap?r=n.sheenColorMap:n.sheenRoughnessMap&&(r=n.sheenRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),i.uvTransform.value.copy(r.matrix)),n.aoMap?o=n.aoMap:n.lightMap&&(o=n.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),i.uv2Transform.value.copy(o.matrix))}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,n,s,r,o){n.isMeshBasicMaterial||n.isMeshLambertMaterial?i(t,n):n.isMeshToonMaterial?(i(t,n),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,n)):n.isMeshPhongMaterial?(i(t,n),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,n)):n.isMeshStandardMaterial?(i(t,n),function(t,i){t.roughness.value=i.roughness,t.metalness.value=i.metalness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap);e.get(i).envMap&&(t.envMapIntensity.value=i.envMapIntensity)}(t,n),n.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap)),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate())),e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap)),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,n,o)):n.isMeshMatcapMaterial?(i(t,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,n)):n.isMeshDepthMaterial?i(t,n):n.isMeshDistanceMaterial?(i(t,n),function(t,e){t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,n)):n.isMeshNormalMaterial?i(t,n):n.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,n)):n.isPointsMaterial?function(t,e,i,n){let s;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*n,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?s=e.map:e.alphaMap&&(s=e.alphaMap),void 0!==s&&(!0===s.matrixAutoUpdate&&s.updateMatrix(),t.uvTransform.value.copy(s.matrix))}(t,n,s,r):n.isSpriteMaterial?function(t,e){let i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,n):n.isShadowMaterial?(t.color.value.copy(n.color),t.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function jr(t,e,i,n){let s={},r={},o=[];const a=i.isWebGL2?t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(t,e,i){const n=t.value;if(void 0===i[e])return i[e]="number"==typeof n?n:n.clone(),!0;if("number"==typeof n){if(i[e]!==n)return i[e]=n,!0}else{const t=i[e];if(!1===t.equals(n))return t.copy(n),!0}return!1}function c(t){const e=t.value,i={boundary:0,storage:0};return"number"==typeof e?(i.boundary=4,i.storage=4):e.isVector2?(i.boundary=8,i.storage=8):e.isVector3||e.isColor?(i.boundary=16,i.storage=12):e.isVector4?(i.boundary=16,i.storage=16):e.isMatrix3?(i.boundary=48,i.storage=48):e.isMatrix4?(i.boundary=64,i.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),i}function h(e){const i=e.target;i.removeEventListener("dispose",h);const n=o.indexOf(i.__bindingPointIndex);o.splice(n,1),t.deleteBuffer(s[i.id]),delete s[i.id],delete r[i.id]}return{bind:function(t,e){const i=e.program;n.uniformBlockBinding(t,i)},update:function(i,u){let d=s[i.id];void 0===d&&(function(t){const e=t.uniforms;let i=0;let n=0;for(let t=0,s=e.length;t<s;t++){const s=e[t],r=c(s);s.__data=new Float32Array(r.storage/Float32Array.BYTES_PER_ELEMENT),s.__offset=i,t>0&&(n=i%16,0!==n&&16-n-r.boundary<0&&(i+=16-n,s.__offset=i)),i+=r.storage}n=i%16,n>0&&(i+=16-n),t.__size=i,t.__cache={}}(i),d=function(e){const i=function(){for(let t=0;t<a;t++)if(-1===o.indexOf(t))return o.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=i;const n=t.createBuffer(),s=e.__size,r=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,s,r),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,i,n),n}(i),s[i.id]=d,i.addEventListener("dispose",h));const p=u.program;n.updateUBOMapping(i,p);const m=e.render.frame;r[i.id]!==m&&(function(e){const i=s[e.id],n=e.uniforms,r=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,i);for(let e=0,i=n.length;e<i;e++){const i=n[e];if(!0===l(i,e,r)){const e=i.value,n=i.__offset;"number"==typeof e?(i.__data[0]=e,t.bufferSubData(t.UNIFORM_BUFFER,n,i.__data)):(i.value.isMatrix3?(i.__data[0]=i.value.elements[0],i.__data[1]=i.value.elements[1],i.__data[2]=i.value.elements[2],i.__data[3]=i.value.elements[0],i.__data[4]=i.value.elements[3],i.__data[5]=i.value.elements[4],i.__data[6]=i.value.elements[5],i.__data[7]=i.value.elements[0],i.__data[8]=i.value.elements[6],i.__data[9]=i.value.elements[7],i.__data[10]=i.value.elements[8],i.__data[11]=i.value.elements[0]):e.toArray(i.__data),t.bufferSubData(t.UNIFORM_BUFFER,n,i.__data))}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(i),r[i.id]=m)},dispose:function(){for(const e in s)t.deleteBuffer(s[e]);o=[],s={},r={}}}}function Xr(t={}){this.isWebGLRenderer=!0;const e=void 0!==t.canvas?t.canvas:function(){const t=Nt("canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,s=void 0===t.depth||t.depth,r=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u;u=null!==n?n.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha;let d=null,p=null;const m=[],f=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ot,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let y=!1,_=0,b=0,S=null,T=-1,A=null;const C=new Qt,R=new Qt;let L=null,P=e.width,I=e.height,D=1,N=null,B=null;const F=new Qt(0,0,P,I),O=new Qt(0,0,P,I);let z=!1;const U=new yn;let H=!1,V=!1,k=null;const G=new Ne,W=new Rt,q=new ne,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===S?D:1}let Y,Z,J,K,Q,$,tt,et,it,nt,st,rt,at,lt,ct,ht,ut,dt,pt,mt,ft,gt,yt,vt,xt=n;function _t(t,i){for(let n=0;n<t.length;n++){const s=t[n],r=e.getContext(s,i);if(null!==r)return r}return null}try{const t={alpha:!0,depth:s,stencil:r,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${i}`),e.addEventListener("webglcontextlost",Mt,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",Tt,!1),null===xt){const e=["webgl2","webgl","experimental-webgl"];if(!0===g.isWebGL1Renderer&&e.shift(),xt=_t(e,t),null===xt)throw _t(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===xt.getShaderPrecisionFormat&&(xt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function bt(){Y=new Wn(xt),Z=new An(xt,Y,t),Y.init(Z),gt=new zr(xt,Y,Z),J=new Fr(xt,Y,Z),K=new Xn(xt),Q=new wr,$=new Or(xt,Y,J,Q,Z,gt,K),tt=new Rn(g),et=new Gn(g),it=new xn(xt,Z),yt=new En(xt,Y,it,Z),nt=new qn(xt,it,K,yt),st=new Kn(xt,nt,it,K),pt=new Jn(xt,Z,$),ht=new Cn(Q),rt=new br(g,tt,et,Y,Z,yt,ht),at=new qr(g,Q),lt=new Tr,ct=new Ir(Y,Z),dt=new Sn(g,tt,J,st,u,a),ut=new Br(g,st,Z),vt=new jr(xt,K,Z,J),mt=new Tn(xt,Y,K,Z),ft=new jn(xt,Y,K,Z),K.programs=rt.programs,g.capabilities=Z,g.extensions=Y,g.properties=Q,g.renderLists=lt,g.shadowMap=ut,g.state=J,g.info=K}bt();const wt=new Wr(g,xt);function Mt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const t=K.autoReset,e=ut.enabled,i=ut.autoUpdate,n=ut.needsUpdate,s=ut.type;bt(),K.autoReset=t,ut.enabled=e,ut.autoUpdate=i,ut.needsUpdate=n,ut.type=s}function Tt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function At(t){const e=t.target;e.removeEventListener("dispose",At),function(t){(function(t){const e=Q.get(t).programs;void 0!==e&&(e.forEach((function(t){rt.releaseProgram(t)})),t.isShaderMaterial&&rt.releaseShaderCache(t))})(t),Q.remove(t)}(e)}this.xr=wt,this.getContext=function(){return xt},this.getContextAttributes=function(){return xt.getContextAttributes()},this.forceContextLoss=function(){const t=Y.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=Y.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(t){void 0!==t&&(D=t,this.setSize(P,I,!1))},this.getSize=function(t){return t.set(P,I)},this.setSize=function(t,i,n){wt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(P=t,I=i,e.width=Math.floor(t*D),e.height=Math.floor(i*D),!1!==n&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return t.set(P*D,I*D).floor()},this.setDrawingBufferSize=function(t,i,n){P=t,I=i,D=n,e.width=Math.floor(t*n),e.height=Math.floor(i*n),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return t.copy(C)},this.getViewport=function(t){return t.copy(F)},this.setViewport=function(t,e,i,n){t.isVector4?F.set(t.x,t.y,t.z,t.w):F.set(t,e,i,n),J.viewport(C.copy(F).multiplyScalar(D).floor())},this.getScissor=function(t){return t.copy(O)},this.setScissor=function(t,e,i,n){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,i,n),J.scissor(R.copy(O).multiplyScalar(D).floor())},this.getScissorTest=function(){return z},this.setScissorTest=function(t){J.setScissorTest(z=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){B=t},this.getClearColor=function(t){return t.copy(dt.getClearColor())},this.setClearColor=function(){dt.setClearColor.apply(dt,arguments)},this.getClearAlpha=function(){return dt.getClearAlpha()},this.setClearAlpha=function(){dt.setClearAlpha.apply(dt,arguments)},this.clear=function(t=!0,e=!0,i=!0){let n=0;t&&(n|=xt.COLOR_BUFFER_BIT),e&&(n|=xt.DEPTH_BUFFER_BIT),i&&(n|=xt.STENCIL_BUFFER_BIT),xt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Mt,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",Tt,!1),lt.dispose(),ct.dispose(),Q.dispose(),tt.dispose(),et.dispose(),st.dispose(),yt.dispose(),vt.dispose(),rt.dispose(),wt.dispose(),wt.removeEventListener("sessionstart",Lt),wt.removeEventListener("sessionend",Pt),k&&(k.dispose(),k=null),It.stop()},this.renderBufferDirect=function(t,e,i,n,s,r){null===e&&(e=j);const o=s.isMesh&&s.matrixWorld.determinant()<0,a=function(t,e,i,n,s){!0!==e.isScene&&(e=j),$.resetTextureUnits();const r=e.fog,o=n.isMeshStandardMaterial?e.environment:null,a=null===S?g.outputEncoding:!0===S.isXRRenderTarget?S.texture.encoding:ot,l=(n.isMeshStandardMaterial?et:tt).get(n.envMap||o),c=!0===n.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,h=!!n.normalMap&&!!i.attributes.tangent,u=!!i.morphAttributes.position,d=!!i.morphAttributes.normal,m=!!i.morphAttributes.color,f=n.toneMapped?g.toneMapping:0,y=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,v=void 0!==y?y.length:0,x=Q.get(n),_=p.state.lights;if(!0===H&&(!0===V||t!==A)){const e=t===A&&n.id===T;ht.setState(n,t,e)}let b=!1;n.version===x.__version?x.needsLights&&x.lightsStateVersion!==_.state.version||x.outputEncoding!==a||s.isInstancedMesh&&!1===x.instancing?b=!0:s.isInstancedMesh||!0!==x.instancing?s.isSkinnedMesh&&!1===x.skinning?b=!0:s.isSkinnedMesh||!0!==x.skinning?x.envMap!==l||!0===n.fog&&x.fog!==r?b=!0:void 0===x.numClippingPlanes||x.numClippingPlanes===ht.numPlanes&&x.numIntersection===ht.numIntersection?(x.vertexAlphas!==c||x.vertexTangents!==h||x.morphTargets!==u||x.morphNormals!==d||x.morphColors!==m||x.toneMapping!==f||!0===Z.isWebGL2&&x.morphTargetsCount!==v)&&(b=!0):b=!0:b=!0:b=!0:(b=!0,x.__version=n.version);let w=x.currentProgram;!0===b&&(w=zt(n,e,s));let M=!1,E=!1,C=!1;const R=w.getUniforms(),L=x.uniforms;if(J.useProgram(w.program)&&(M=!0,E=!0,C=!0),n.id!==T&&(T=n.id,E=!0),M||A!==t){if(R.setValue(xt,"projectionMatrix",t.projectionMatrix),Z.logarithmicDepthBuffer&&R.setValue(xt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),A!==t&&(A=t,E=!0,C=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=R.map.cameraPosition;void 0!==e&&e.setValue(xt,q.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&R.setValue(xt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||s.isSkinnedMesh)&&R.setValue(xt,"viewMatrix",t.matrixWorldInverse)}if(s.isSkinnedMesh){R.setOptional(xt,s,"bindMatrix"),R.setOptional(xt,s,"bindMatrixInverse");const t=s.skeleton;t&&(Z.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),R.setValue(xt,"boneTexture",t.boneTexture,$),R.setValue(xt,"boneTextureSize",t.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const P=i.morphAttributes;var N,B;if((void 0!==P.position||void 0!==P.normal||void 0!==P.color&&!0===Z.isWebGL2)&&pt.update(s,i,n,w),(E||x.receiveShadow!==s.receiveShadow)&&(x.receiveShadow=s.receiveShadow,R.setValue(xt,"receiveShadow",s.receiveShadow)),n.isMeshGouraudMaterial&&null!==n.envMap&&(L.envMap.value=l,L.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),E&&(R.setValue(xt,"toneMappingExposure",g.toneMappingExposure),x.needsLights&&(B=C,(N=L).ambientLightColor.needsUpdate=B,N.lightProbe.needsUpdate=B,N.directionalLights.needsUpdate=B,N.directionalLightShadows.needsUpdate=B,N.pointLights.needsUpdate=B,N.pointLightShadows.needsUpdate=B,N.spotLights.needsUpdate=B,N.spotLightShadows.needsUpdate=B,N.rectAreaLights.needsUpdate=B,N.hemisphereLights.needsUpdate=B),r&&!0===n.fog&&at.refreshFogUniforms(L,r),at.refreshMaterialUniforms(L,n,D,I,k),er.upload(xt,x.uniformsList,L,$)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(er.upload(xt,x.uniformsList,L,$),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&R.setValue(xt,"center",s.center),R.setValue(xt,"modelViewMatrix",s.modelViewMatrix),R.setValue(xt,"normalMatrix",s.normalMatrix),R.setValue(xt,"modelMatrix",s.matrixWorld),n.isShaderMaterial||n.isRawShaderMaterial){const t=n.uniformsGroups;for(let e=0,i=t.length;e<i;e++)if(Z.isWebGL2){const i=t[e];vt.update(i,w),vt.bind(i,w)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return w}(t,e,i,n,s);J.setMaterial(n,o);let l=i.index;const c=i.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===n.wireframe&&(l=nt.getWireframeAttribute(i),u=2),yt.setup(s,n,a,i,l);let d=mt;null!==l&&(h=it.get(l),d=ft,d.setIndex(h));const m=null!==l?l.count:c.count,f=i.drawRange.start*u,y=i.drawRange.count*u,v=null!==r?r.start*u:0,x=null!==r?r.count*u:1/0,_=Math.max(f,v),b=Math.min(m,f+y,v+x)-1,w=Math.max(0,b-_+1);if(0!==w){if(s.isMesh)!0===n.wireframe?(J.setLineWidth(n.wireframeLinewidth*X()),d.setMode(xt.LINES)):d.setMode(xt.TRIANGLES);else if(s.isLine){let t=n.linewidth;void 0===t&&(t=1),J.setLineWidth(t*X()),s.isLineSegments?d.setMode(xt.LINES):s.isLineLoop?d.setMode(xt.LINE_LOOP):d.setMode(xt.LINE_STRIP)}else s.isPoints?d.setMode(xt.POINTS):s.isSprite&&d.setMode(xt.TRIANGLES);if(s.isInstancedMesh)d.renderInstances(_,w,s.count);else if(i.isInstancedBufferGeometry){const t=Math.min(i.instanceCount,i._maxInstanceCount);d.renderInstances(_,w,t)}else d.render(_,w)}},this.compile=function(t,e){function i(t,e,i){!0===t.transparent&&2===t.side?(t.side=1,t.needsUpdate=!0,zt(t,e,i),t.side=0,t.needsUpdate=!0,zt(t,e,i),t.side=2):zt(t,e,i)}p=ct.get(t),p.init(),f.push(p),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))})),p.setupLights(g.physicallyCorrectLights),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let s=0;s<n.length;s++)i(n[s],t,e);else i(n,t,e)})),f.pop(),p=null};let Ct=null;function Lt(){It.stop()}function Pt(){It.start()}const It=new vn;function Dt(t,e,i,n){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||U.intersectsSprite(t)){n&&q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);const e=st.update(t),s=t.material;s.visible&&d.push(t,e,s,i,q.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==K.render.frame&&(t.skeleton.update(),t.skeleton.frame=K.render.frame),!t.frustumCulled||U.intersectsObject(t))){n&&q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);const e=st.update(t),s=t.material;if(Array.isArray(s)){const n=e.groups;for(let r=0,o=n.length;r<o;r++){const o=n[r],a=s[o.materialIndex];a&&a.visible&&d.push(t,e,a,i,q.z,o)}}else s.visible&&d.push(t,e,s,i,q.z,null)}const s=t.children;for(let t=0,r=s.length;t<r;t++)Dt(s[t],e,i,n)}function Bt(t,e,i,n){const s=t.opaque,r=t.transmissive,a=t.transparent;p.setupLightsView(i),r.length>0&&function(t,e,i){const n=Z.isWebGL2;null===k&&(k=new $t(1,1,{generateMipmaps:!0,type:Y.has("EXT_color_buffer_half_float")?M:x,minFilter:v,samples:n&&!0===o?4:0})),g.getDrawingBufferSize(W),n?k.setSize(W.x,W.y):k.setSize(Et(W.x),Et(W.y));const s=g.getRenderTarget();g.setRenderTarget(k),g.clear();const r=g.toneMapping;g.toneMapping=0,Ft(t,e,i),g.toneMapping=r,$.updateMultisampleRenderTarget(k),$.updateRenderTargetMipmap(k),g.setRenderTarget(s)}(s,e,i),n&&J.viewport(C.copy(n)),s.length>0&&Ft(s,e,i),r.length>0&&Ft(r,e,i),a.length>0&&Ft(a,e,i),J.buffers.depth.setTest(!0),J.buffers.depth.setMask(!0),J.buffers.color.setMask(!0),J.setPolygonOffset(!1)}function Ft(t,e,i){const n=!0===e.isScene?e.overrideMaterial:null;for(let s=0,r=t.length;s<r;s++){const r=t[s],o=r.object,a=r.geometry,l=null===n?r.material:n,c=r.group;o.layers.test(i.layers)&&Ot(o,e,i,a,l,c)}}function Ot(t,e,i,n,s,r){t.onBeforeRender(g,e,i,n,s,r),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),s.onBeforeRender(g,e,i,n,t,r),!0===s.transparent&&2===s.side?(s.side=1,s.needsUpdate=!0,g.renderBufferDirect(i,e,n,s,t,r),s.side=0,s.needsUpdate=!0,g.renderBufferDirect(i,e,n,s,t,r),s.side=2):g.renderBufferDirect(i,e,n,s,t,r),t.onAfterRender(g,e,i,n,s,r)}function zt(t,e,i){!0!==e.isScene&&(e=j);const n=Q.get(t),s=p.state.lights,r=p.state.shadowsArray,o=s.state.version,a=rt.getParameters(t,s.state,r,e,i),l=rt.getProgramCacheKey(a);let c=n.programs;n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=(t.isMeshStandardMaterial?et:tt).get(t.envMap||n.environment),void 0===c&&(t.addEventListener("dispose",At),c=new Map,n.programs=c);let h=c.get(l);if(void 0!==h){if(n.currentProgram===h&&n.lightsStateVersion===o)return Ut(t,a),h}else a.uniforms=rt.getUniforms(t),t.onBuild(i,a,g),t.onBeforeCompile(a,g),h=rt.acquireProgram(a,l),c.set(l,h),n.uniforms=a.uniforms;const u=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ht.uniform),Ut(t,a),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=o,n.needsLights&&(u.ambientLightColor.value=s.state.ambient,u.lightProbe.value=s.state.probe,u.directionalLights.value=s.state.directional,u.directionalLightShadows.value=s.state.directionalShadow,u.spotLights.value=s.state.spot,u.spotLightShadows.value=s.state.spotShadow,u.rectAreaLights.value=s.state.rectArea,u.ltc_1.value=s.state.rectAreaLTC1,u.ltc_2.value=s.state.rectAreaLTC2,u.pointLights.value=s.state.point,u.pointLightShadows.value=s.state.pointShadow,u.hemisphereLights.value=s.state.hemi,u.directionalShadowMap.value=s.state.directionalShadowMap,u.directionalShadowMatrix.value=s.state.directionalShadowMatrix,u.spotShadowMap.value=s.state.spotShadowMap,u.spotLightMatrix.value=s.state.spotLightMatrix,u.spotLightMap.value=s.state.spotLightMap,u.pointShadowMap.value=s.state.pointShadowMap,u.pointShadowMatrix.value=s.state.pointShadowMatrix);const d=h.getUniforms(),m=er.seqWithValue(d.seq,u);return n.currentProgram=h,n.uniformsList=m,h}function Ut(t,e){const i=Q.get(t);i.outputEncoding=e.outputEncoding,i.instancing=e.instancing,i.skinning=e.skinning,i.morphTargets=e.morphTargets,i.morphNormals=e.morphNormals,i.morphColors=e.morphColors,i.morphTargetsCount=e.morphTargetsCount,i.numClippingPlanes=e.numClippingPlanes,i.numIntersection=e.numClipIntersection,i.vertexAlphas=e.vertexAlphas,i.vertexTangents=e.vertexTangents,i.toneMapping=e.toneMapping}It.setAnimationLoop((function(t){Ct&&Ct(t)})),"undefined"!=typeof self&&It.setContext(self),this.setAnimationLoop=function(t){Ct=t,wt.setAnimationLoop(t),null===t?It.stop():It.start()},wt.addEventListener("sessionstart",Lt),wt.addEventListener("sessionend",Pt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===y)return;!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===wt.enabled&&!0===wt.isPresenting&&(!0===wt.cameraAutoUpdate&&wt.updateCamera(e),e=wt.getCamera()),!0===t.isScene&&t.onBeforeRender(g,t,e,S),p=ct.get(t,f.length),p.init(),f.push(p),G.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),U.setFromProjectionMatrix(G),V=this.localClippingEnabled,H=ht.init(this.clippingPlanes,V,e),d=lt.get(t,m.length),d.init(),m.push(d),Dt(t,e,0,g.sortObjects),d.finish(),!0===g.sortObjects&&d.sort(N,B),!0===H&&ht.beginShadows();const i=p.state.shadowsArray;if(ut.render(i,t,e),!0===H&&ht.endShadows(),!0===this.info.autoReset&&this.info.reset(),dt.render(d,t),p.setupLights(g.physicallyCorrectLights),e.isArrayCamera){const i=e.cameras;for(let e=0,n=i.length;e<n;e++){const n=i[e];Bt(d,t,n,n.viewport)}}else Bt(d,t,e);null!==S&&($.updateMultisampleRenderTarget(S),$.updateRenderTargetMipmap(S)),!0===t.isScene&&t.onAfterRender(g,t,e),yt.resetDefaultState(),T=-1,A=null,f.pop(),p=f.length>0?f[f.length-1]:null,m.pop(),d=m.length>0?m[m.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(t,e,i){Q.get(t.texture).__webglTexture=e,Q.get(t.depthTexture).__webglTexture=i;const n=Q.get(t);n.__hasExternalTextures=!0,n.__hasExternalTextures&&(n.__autoAllocateDepthBuffer=void 0===i,n.__autoAllocateDepthBuffer||!0===Y.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const i=Q.get(t);i.__webglFramebuffer=e,i.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,i=0){S=t,_=e,b=i;let n=!0;if(t){const e=Q.get(t);void 0!==e.__useDefaultFramebuffer?(J.bindFramebuffer(xt.FRAMEBUFFER,null),n=!1):void 0===e.__webglFramebuffer?$.setupRenderTarget(t):e.__hasExternalTextures&&$.rebindTextures(t,Q.get(t.texture).__webglTexture,Q.get(t.depthTexture).__webglTexture)}let s=null,r=!1,o=!1;if(t){const i=t.texture;(i.isData3DTexture||i.isDataArrayTexture)&&(o=!0);const n=Q.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(s=n[e],r=!0):s=Z.isWebGL2&&t.samples>0&&!1===$.useMultisampledRTT(t)?Q.get(t).__webglMultisampledFramebuffer:n,C.copy(t.viewport),R.copy(t.scissor),L=t.scissorTest}else C.copy(F).multiplyScalar(D).floor(),R.copy(O).multiplyScalar(D).floor(),L=z;if(J.bindFramebuffer(xt.FRAMEBUFFER,s)&&Z.drawBuffers&&n&&J.drawBuffers(t,s),J.viewport(C),J.scissor(R),J.setScissorTest(L),r){const n=Q.get(t.texture);xt.framebufferTexture2D(xt.FRAMEBUFFER,xt.COLOR_ATTACHMENT0,xt.TEXTURE_CUBE_MAP_POSITIVE_X+e,n.__webglTexture,i)}else if(o){const n=Q.get(t.texture),s=e||0;xt.framebufferTextureLayer(xt.FRAMEBUFFER,xt.COLOR_ATTACHMENT0,n.__webglTexture,i||0,s)}T=-1},this.readRenderTargetPixels=function(t,e,i,n,s,r,o){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=Q.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(a=a[o]),a){J.bindFramebuffer(xt.FRAMEBUFFER,a);try{const o=t.texture,a=o.format,l=o.type;if(a!==E&&gt.convert(a)!==xt.getParameter(xt.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===M&&(Y.has("EXT_color_buffer_half_float")||Z.isWebGL2&&Y.has("EXT_color_buffer_float"));if(!(l===x||gt.convert(l)===xt.getParameter(xt.IMPLEMENTATION_COLOR_READ_TYPE)||l===w&&(Z.isWebGL2||Y.has("OES_texture_float")||Y.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-n&&i>=0&&i<=t.height-s&&xt.readPixels(e,i,n,s,gt.convert(a),gt.convert(l),r)}finally{const t=null!==S?Q.get(S).__webglFramebuffer:null;J.bindFramebuffer(xt.FRAMEBUFFER,t)}}},this.copyFramebufferToTexture=function(t,e,i=0){const n=Math.pow(2,-i),s=Math.floor(e.image.width*n),r=Math.floor(e.image.height*n);$.setTexture2D(e,0),xt.copyTexSubImage2D(xt.TEXTURE_2D,i,0,0,t.x,t.y,s,r),J.unbindTexture()},this.copyTextureToTexture=function(t,e,i,n=0){const s=e.image.width,r=e.image.height,o=gt.convert(i.format),a=gt.convert(i.type);$.setTexture2D(i,0),xt.pixelStorei(xt.UNPACK_FLIP_Y_WEBGL,i.flipY),xt.pixelStorei(xt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),xt.pixelStorei(xt.UNPACK_ALIGNMENT,i.unpackAlignment),e.isDataTexture?xt.texSubImage2D(xt.TEXTURE_2D,n,t.x,t.y,s,r,o,a,e.image.data):e.isCompressedTexture?xt.compressedTexSubImage2D(xt.TEXTURE_2D,n,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,o,e.mipmaps[0].data):xt.texSubImage2D(xt.TEXTURE_2D,n,t.x,t.y,o,a,e.image),0===n&&i.generateMipmaps&&xt.generateMipmap(xt.TEXTURE_2D),J.unbindTexture()},this.copyTextureToTexture3D=function(t,e,i,n,s=0){if(g.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const r=t.max.x-t.min.x+1,o=t.max.y-t.min.y+1,a=t.max.z-t.min.z+1,l=gt.convert(n.format),c=gt.convert(n.type);let h;if(n.isData3DTexture)$.setTexture3D(n,0),h=xt.TEXTURE_3D;else{if(!n.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");$.setTexture2DArray(n,0),h=xt.TEXTURE_2D_ARRAY}xt.pixelStorei(xt.UNPACK_FLIP_Y_WEBGL,n.flipY),xt.pixelStorei(xt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),xt.pixelStorei(xt.UNPACK_ALIGNMENT,n.unpackAlignment);const u=xt.getParameter(xt.UNPACK_ROW_LENGTH),d=xt.getParameter(xt.UNPACK_IMAGE_HEIGHT),p=xt.getParameter(xt.UNPACK_SKIP_PIXELS),m=xt.getParameter(xt.UNPACK_SKIP_ROWS),f=xt.getParameter(xt.UNPACK_SKIP_IMAGES),y=i.isCompressedTexture?i.mipmaps[0]:i.image;xt.pixelStorei(xt.UNPACK_ROW_LENGTH,y.width),xt.pixelStorei(xt.UNPACK_IMAGE_HEIGHT,y.height),xt.pixelStorei(xt.UNPACK_SKIP_PIXELS,t.min.x),xt.pixelStorei(xt.UNPACK_SKIP_ROWS,t.min.y),xt.pixelStorei(xt.UNPACK_SKIP_IMAGES,t.min.z),i.isDataTexture||i.isData3DTexture?xt.texSubImage3D(h,s,e.x,e.y,e.z,r,o,a,l,c,y.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),xt.compressedTexSubImage3D(h,s,e.x,e.y,e.z,r,o,a,l,y.data)):xt.texSubImage3D(h,s,e.x,e.y,e.z,r,o,a,l,c,y),xt.pixelStorei(xt.UNPACK_ROW_LENGTH,u),xt.pixelStorei(xt.UNPACK_IMAGE_HEIGHT,d),xt.pixelStorei(xt.UNPACK_SKIP_PIXELS,p),xt.pixelStorei(xt.UNPACK_SKIP_ROWS,m),xt.pixelStorei(xt.UNPACK_SKIP_IMAGES,f),0===s&&n.generateMipmaps&&xt.generateMipmap(h),J.unbindTexture()},this.initTexture=function(t){t.isCubeTexture?$.setTextureCube(t,0):t.isData3DTexture?$.setTexture3D(t,0):t.isDataArrayTexture?$.setTexture2DArray(t,0):$.setTexture2D(t,0),J.unbindTexture()},this.resetState=function(){_=0,b=0,S=null,J.reset(),yt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Yr extends Xr{}Yr.prototype.isWebGL1Renderer=!0;class Zr{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new qt(t),this.density=e}clone(){return new Zr(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Jr{constructor(t,e=1,i=1e3){this.isFog=!0,this.name="",this.color=new qt(t),this.near=e,this.far=i}clone(){return new Jr(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Kr extends ri{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class Qr{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=ut,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=xt()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let n=0,s=this.stride;n<s;n++)this.array[t+n]=e.array[i+n];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=xt()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(e,this.stride);return i.setUsage(this.usage),i}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=xt()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const $r=new ne;class to{constructor(t,e,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)$r.fromBufferAttribute(this,e),$r.applyMatrix4(t),this.setXYZ(e,$r.x,$r.y,$r.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)$r.fromBufferAttribute(this,e),$r.applyNormalMatrix(t),this.setXYZ(e,$r.x,$r.y,$r.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)$r.fromBufferAttribute(this,e),$r.transformDirection(t),this.setXYZ(e,$r.x,$r.y,$r.z);return this}setX(t,e){return this.normalized&&(e=At(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=At(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=At(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=At(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Tt(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Tt(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Tt(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Tt(e,this.array)),e}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=At(e,this.array),i=At(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=At(e,this.array),i=At(i,this.array),n=At(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this}setXYZW(t,e,i,n,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=At(e,this.array),i=At(i,this.array),n=At(n,this.array),s=At(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=s,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return new wi(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new to(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class eo extends vi{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new qt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let io;const no=new ne,so=new ne,ro=new ne,oo=new Rt,ao=new Rt,lo=new Ne,co=new ne,ho=new ne,uo=new ne,po=new Rt,mo=new Rt,fo=new Rt;class go extends ri{constructor(t){if(super(),this.isSprite=!0,this.type="Sprite",void 0===io){io=new Di;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new Qr(t,5);io.setIndex([0,1,2,0,2,3]),io.setAttribute("position",new to(e,3,0,!1)),io.setAttribute("uv",new to(e,2,3,!1))}this.geometry=io,this.material=void 0!==t?t:new eo,this.center=new Rt(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),so.setFromMatrixScale(this.matrixWorld),lo.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),ro.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&so.multiplyScalar(-ro.z);const i=this.material.rotation;let n,s;0!==i&&(s=Math.cos(i),n=Math.sin(i));const r=this.center;yo(co.set(-.5,-.5,0),ro,r,so,n,s),yo(ho.set(.5,-.5,0),ro,r,so,n,s),yo(uo.set(.5,.5,0),ro,r,so,n,s),po.set(0,0),mo.set(1,0),fo.set(1,1);let o=t.ray.intersectTriangle(co,ho,uo,!1,no);if(null===o&&(yo(ho.set(-.5,.5,0),ro,r,so,n,s),mo.set(0,1),o=t.ray.intersectTriangle(co,uo,ho,!1,no),null===o))return;const a=t.ray.origin.distanceTo(no);a<t.near||a>t.far||e.push({distance:a,point:no.clone(),uv:gi.getUV(no,co,ho,uo,po,mo,fo,new Rt),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function yo(t,e,i,n,s,r){oo.subVectors(t,i).addScalar(.5).multiply(n),void 0!==s?(ao.x=r*oo.x-s*oo.y,ao.y=s*oo.x+r*oo.y):ao.copy(oo),t.copy(e),t.x+=ao.x,t.y+=ao.y,t.applyMatrix4(lo)}const vo=new ne,xo=new ne;class _o extends ri{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,i=e.length;t<i;t++){const i=e[t];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const i=this.levels;let n;for(n=0;n<i.length&&!(e<i[n].distance);n++);return i.splice(n,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let i,n;for(i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object}return null}raycast(t,e){if(this.levels.length>0){vo.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(vo);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){vo.setFromMatrixPosition(t.matrixWorld),xo.setFromMatrixPosition(this.matrixWorld);const i=vo.distanceTo(xo)/t.zoom;let n,s;for(e[0].object.visible=!0,n=1,s=e.length;n<s&&i>=e[n].distance;n++)e[n-1].object.visible=!1,e[n].object.visible=!0;for(this._currentLevel=n-1;n<s;n++)e[n].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const i=this.levels;for(let t=0,n=i.length;t<n;t++){const n=i[t];e.object.levels.push({object:n.object.uuid,distance:n.distance})}return e}}const bo=new ne,wo=new Qt,Mo=new Qt,So=new ne,Eo=new Ne;class To extends Ki{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ne,this.bindMatrixInverse=new Ne}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Qt,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.fromBufferAttribute(e,i);const n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const i=this.skeleton,n=this.geometry;wo.fromBufferAttribute(n.attributes.skinIndex,t),Mo.fromBufferAttribute(n.attributes.skinWeight,t),bo.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const n=Mo.getComponent(t);if(0!==n){const s=wo.getComponent(t);Eo.multiplyMatrices(i.bones[s].matrixWorld,i.boneInverses[s]),e.addScaledVector(So.copy(bo).applyMatrix4(Eo),n)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Ao extends ri{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Co extends Kt{constructor(t=null,e=1,i=1,n,s,r,o,a,l=1003,c=1003,h,u){super(null,r,o,a,l,c,n,s,h,u),this.isDataTexture=!0,this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Ro=new Ne,Lo=new Ne;class Po{constructor(t=[],e=[]){this.uuid=xt(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Ne)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Ne;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let n=0,s=t.length;n<s;n++){const s=t[n]?t[n].matrixWorld:Lo;Ro.multiplyMatrices(s,e[n]),Ro.toArray(i,16*n)}null!==n&&(n.needsUpdate=!0)}clone(){return new Po(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=St(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const i=new Co(e,t,t,E,w);return i.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=i,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,i=this.bones.length;e<i;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let i=0,n=t.bones.length;i<n;i++){const n=t.bones[i];let s=e[n];void 0===s&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),s=new Ao),this.bones.push(s),this.boneInverses.push((new Ne).fromArray(t.boneInverses[i]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,i=this.boneInverses;for(let n=0,s=e.length;n<s;n++){const s=e[n];t.bones.push(s.uuid);const r=i[n];t.boneInverses.push(r.toArray())}return t}}class Io extends wi{constructor(t,e,i,n=1){super(t,e,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Do=new Ne,No=new Ne,Bo=[],Fo=new Ki;class Oo extends Ki{constructor(t,e,i){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Io(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const i=this.matrixWorld,n=this.count;if(Fo.geometry=this.geometry,Fo.material=this.material,void 0!==Fo.material)for(let s=0;s<n;s++){this.getMatrixAt(s,Do),No.multiplyMatrices(i,Do),Fo.matrixWorld=No,Fo.raycast(t,Bo);for(let t=0,i=Bo.length;t<i;t++){const i=Bo[t];i.instanceId=s,i.object=this,e.push(i)}Bo.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Io(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class zo extends vi{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new qt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Uo=new ne,Ho=new ne,Vo=new Ne,ko=new De,Go=new Ee;class Wo extends ri{constructor(t=new Di,e=new zo){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[0];for(let t=1,n=e.count;t<n;t++)Uo.fromBufferAttribute(e,t-1),Ho.fromBufferAttribute(e,t),i[t]=i[t-1],i[t]+=Uo.distanceTo(Ho);t.setAttribute("lineDistance",new Ei(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,s=t.params.Line.threshold,r=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),Go.copy(i.boundingSphere),Go.applyMatrix4(n),Go.radius+=s,!1===t.ray.intersectsSphere(Go))return;Vo.copy(n).invert(),ko.copy(t.ray).applyMatrix4(Vo);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,l=new ne,c=new ne,h=new ne,u=new ne,d=this.isLineSegments?2:1,p=i.index,m=i.attributes.position;if(null!==p)for(let i=Math.max(0,r.start),n=Math.min(p.count,r.start+r.count)-1;i<n;i+=d){const n=p.getX(i),s=p.getX(i+1);if(l.fromBufferAttribute(m,n),c.fromBufferAttribute(m,s),ko.distanceSqToSegment(l,c,u,h)>a)continue;u.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(u);r<t.near||r>t.far||e.push({distance:r,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}else for(let i=Math.max(0,r.start),n=Math.min(m.count,r.start+r.count)-1;i<n;i+=d){if(l.fromBufferAttribute(m,i),c.fromBufferAttribute(m,i+1),ko.distanceSqToSegment(l,c,u,h)>a)continue;u.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(u);n<t.near||n>t.far||e.push({distance:n,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}const qo=new ne,jo=new ne;class Xo extends Wo{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[];for(let t=0,n=e.count;t<n;t+=2)qo.fromBufferAttribute(e,t),jo.fromBufferAttribute(e,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+qo.distanceTo(jo);t.setAttribute("lineDistance",new Ei(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Yo extends Wo{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Zo extends vi{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new qt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Jo=new Ne,Ko=new De,Qo=new Ee,$o=new ne;class ta extends ri{constructor(t=new Di,e=new Zo){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,s=t.params.Points.threshold,r=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),Qo.copy(i.boundingSphere),Qo.applyMatrix4(n),Qo.radius+=s,!1===t.ray.intersectsSphere(Qo))return;Jo.copy(n).invert(),Ko.copy(t.ray).applyMatrix4(Jo);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,l=i.index,c=i.attributes.position;if(null!==l)for(let i=Math.max(0,r.start),s=Math.min(l.count,r.start+r.count);i<s;i++){const s=l.getX(i);$o.fromBufferAttribute(c,s),ea($o,s,a,n,t,e,this)}else for(let i=Math.max(0,r.start),s=Math.min(c.count,r.start+r.count);i<s;i++)$o.fromBufferAttribute(c,i),ea($o,i,a,n,t,e,this)}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function ea(t,e,i,n,s,r,o){const a=Ko.distanceSqToPoint(t);if(a<i){const i=new ne;Ko.closestPointToPoint(t,i),i.applyMatrix4(n);const l=s.ray.origin.distanceTo(i);if(l<s.near||l>s.far)return;r.push({distance:l,distanceToRay:Math.sqrt(a),point:i,index:e,face:null,object:o})}}class ia extends Kt{constructor(t,e,i,n,s,r,o,a,l,c,h,u){super(null,r,o,a,l,c,n,s,h,u),this.isCompressedTexture=!0,this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class na{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,n=this.getPoint(0),s=0;e.push(0);for(let r=1;r<=t;r++)i=this.getPoint(r/t),s+=i.distanceTo(n),e.push(s),n=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const i=this.getLengths();let n=0;const s=i.length;let r;r=e||t*i[s-1];let o,a=0,l=s-1;for(;a<=l;)if(n=Math.floor(a+(l-a)/2),o=i[n]-r,o<0)a=n+1;else{if(!(o>0)){l=n;break}l=n-1}if(n=l,i[n]===r)return n/(s-1);const c=i[n];return(n+(r-c)/(i[n+1]-c))/(s-1)}getTangent(t,e){const i=1e-4;let n=t-i,s=t+i;n<0&&(n=0),s>1&&(s=1);const r=this.getPoint(n),o=this.getPoint(s),a=e||(r.isVector2?new Rt:new ne);return a.copy(o).sub(r).normalize(),a}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e){const i=new ne,n=[],s=[],r=[],o=new ne,a=new Ne;for(let e=0;e<=t;e++){const i=e/t;n[e]=this.getTangentAt(i,new ne)}s[0]=new ne,r[0]=new ne;let l=Number.MAX_VALUE;const c=Math.abs(n[0].x),h=Math.abs(n[0].y),u=Math.abs(n[0].z);c<=l&&(l=c,i.set(1,0,0)),h<=l&&(l=h,i.set(0,1,0)),u<=l&&i.set(0,0,1),o.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],o),r[0].crossVectors(n[0],s[0]);for(let e=1;e<=t;e++){if(s[e]=s[e-1].clone(),r[e]=r[e-1].clone(),o.crossVectors(n[e-1],n[e]),o.length()>Number.EPSILON){o.normalize();const t=Math.acos(_t(n[e-1].dot(n[e]),-1,1));s[e].applyMatrix4(a.makeRotationAxis(o,t))}r[e].crossVectors(n[e],s[e])}if(!0===e){let e=Math.acos(_t(s[0].dot(s[t]),-1,1));e/=t,n[0].dot(o.crossVectors(s[0],s[t]))>0&&(e=-e);for(let i=1;i<=t;i++)s[i].applyMatrix4(a.makeRotationAxis(n[i],e*i)),r[i].crossVectors(n[i],s[i])}return{tangents:n,normals:s,binormals:r}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class sa extends na{constructor(t=0,e=0,i=1,n=1,s=0,r=2*Math.PI,o=!1,a=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=o,this.aRotation=a}getPoint(t,e){const i=e||new Rt,n=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(s=r?0:n),!0!==this.aClockwise||r||(s===n?s=-n:s-=n);const o=this.aStartAngle+t*s;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),i=a-this.aX,n=l-this.aY;a=i*t-n*e+this.aX,l=i*e+n*t+this.aY}return i.set(a,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class ra extends sa{constructor(t,e,i,n,s,r){super(t,e,i,i,n,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function oa(){let t=0,e=0,i=0,n=0;function s(s,r,o,a){t=s,e=o,i=-3*s+3*r-2*o-a,n=2*s-2*r+o+a}return{initCatmullRom:function(t,e,i,n,r){s(e,i,r*(i-t),r*(n-e))},initNonuniformCatmullRom:function(t,e,i,n,r,o,a){let l=(e-t)/r-(i-t)/(r+o)+(i-e)/o,c=(i-e)/o-(n-e)/(o+a)+(n-i)/a;l*=o,c*=o,s(e,i,l,c)},calc:function(s){const r=s*s;return t+e*s+i*r+n*(r*s)}}}const aa=new ne,la=new oa,ca=new oa,ha=new oa;class ua extends na{constructor(t=[],e=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=n}getPoint(t,e=new ne){const i=e,n=this.points,s=n.length,r=(s-(this.closed?0:1))*t;let o,a,l=Math.floor(r),c=r-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/s)+1)*s:0===c&&l===s-1&&(l=s-2,c=1),this.closed||l>0?o=n[(l-1)%s]:(aa.subVectors(n[0],n[1]).add(n[0]),o=aa);const h=n[l%s],u=n[(l+1)%s];if(this.closed||l+2<s?a=n[(l+2)%s]:(aa.subVectors(n[s-1],n[s-2]).add(n[s-1]),a=aa),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(o.distanceToSquared(h),t),i=Math.pow(h.distanceToSquared(u),t),n=Math.pow(u.distanceToSquared(a),t);i<1e-4&&(i=1),e<1e-4&&(e=i),n<1e-4&&(n=i),la.initNonuniformCatmullRom(o.x,h.x,u.x,a.x,e,i,n),ca.initNonuniformCatmullRom(o.y,h.y,u.y,a.y,e,i,n),ha.initNonuniformCatmullRom(o.z,h.z,u.z,a.z,e,i,n)}else"catmullrom"===this.curveType&&(la.initCatmullRom(o.x,h.x,u.x,a.x,this.tension),ca.initCatmullRom(o.y,h.y,u.y,a.y,this.tension),ha.initCatmullRom(o.z,h.z,u.z,a.z,this.tension));return i.set(la.calc(c),ca.calc(c),ha.calc(c)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new ne).fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function da(t,e,i,n,s){const r=.5*(n-e),o=.5*(s-i),a=t*t;return(2*i-2*n+r+o)*(t*a)+(-3*i+3*n-2*r-o)*a+r*t+i}function pa(t,e,i,n){return function(t,e){const i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function ma(t,e,i,n,s){return function(t,e){const i=1-t;return i*i*i*e}(t,e)+function(t,e){const i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,s)}class fa extends na{constructor(t=new Rt,e=new Rt,i=new Rt,n=new Rt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new Rt){const i=e,n=this.v0,s=this.v1,r=this.v2,o=this.v3;return i.set(ma(t,n.x,s.x,r.x,o.x),ma(t,n.y,s.y,r.y,o.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class ga extends na{constructor(t=new ne,e=new ne,i=new ne,n=new ne){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new ne){const i=e,n=this.v0,s=this.v1,r=this.v2,o=this.v3;return i.set(ma(t,n.x,s.x,r.x,o.x),ma(t,n.y,s.y,r.y,o.y),ma(t,n.z,s.z,r.z,o.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class ya extends na{constructor(t=new Rt,e=new Rt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Rt){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const i=e||new Rt;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class va extends na{constructor(t=new ne,e=new ne){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new ne){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class xa extends na{constructor(t=new Rt,e=new Rt,i=new Rt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new Rt){const i=e,n=this.v0,s=this.v1,r=this.v2;return i.set(pa(t,n.x,s.x,r.x),pa(t,n.y,s.y,r.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class _a extends na{constructor(t=new ne,e=new ne,i=new ne){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new ne){const i=e,n=this.v0,s=this.v1,r=this.v2;return i.set(pa(t,n.x,s.x,r.x),pa(t,n.y,s.y,r.y),pa(t,n.z,s.z,r.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ba extends na{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Rt){const i=e,n=this.points,s=(n.length-1)*t,r=Math.floor(s),o=s-r,a=n[0===r?r:r-1],l=n[r],c=n[r>n.length-2?n.length-1:r+1],h=n[r>n.length-3?n.length-1:r+2];return i.set(da(o,a.x,l.x,c.x,h.x),da(o,a.y,l.y,c.y,h.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new Rt).fromArray(i))}return this}}var wa=Object.freeze({__proto__:null,ArcCurve:ra,CatmullRomCurve3:ua,CubicBezierCurve:fa,CubicBezierCurve3:ga,EllipseCurve:sa,LineCurve:ya,LineCurve3:va,QuadraticBezierCurve:xa,QuadraticBezierCurve3:_a,SplineCurve:ba});class Ma extends na{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new ya(e,t))}getPoint(t,e){const i=t*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const t=n[s]-i,r=this.curves[s],o=r.getLength(),a=0===o?0:1-t/o;return r.getPointAt(a,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const r=s[n],o=r.isEllipseCurve?2*t:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?t*r.points.length:t,a=r.getPoints(o);for(let t=0;t<a.length;t++){const n=a[t];i&&i.equals(n)||(e.push(n),i=n)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push((new wa[i.type]).fromJSON(i))}return this}}class Sa extends Ma{constructor(t){super(),this.type="Path",this.currentPoint=new Rt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const i=new ya(this.currentPoint.clone(),new Rt(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,n){const s=new xa(this.currentPoint.clone(),new Rt(t,e),new Rt(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(t,e,i,n,s,r){const o=new fa(this.currentPoint.clone(),new Rt(t,e),new Rt(i,n),new Rt(s,r));return this.curves.push(o),this.currentPoint.set(s,r),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),i=new ba(e);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,n,s,r){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+o,e+a,i,n,s,r),this}absarc(t,e,i,n,s,r){return this.absellipse(t,e,i,i,n,s,r),this}ellipse(t,e,i,n,s,r,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,i,n,s,r,o,a),this}absellipse(t,e,i,n,s,r,o,a){const l=new sa(t,e,i,n,s,r,o,a);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Ea extends Di{constructor(t=[new Rt(0,-.5),new Rt(.5,0),new Rt(0,.5)],e=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},e=Math.floor(e),n=_t(n,0,2*Math.PI);const s=[],r=[],o=[],a=[],l=[],c=1/e,h=new ne,u=new Rt,d=new ne,p=new ne,m=new ne;let f=0,g=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:f=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-f,d.z=0*g,m.copy(d),d.normalize(),a.push(d.x,d.y,d.z);break;case t.length-1:a.push(m.x,m.y,m.z);break;default:f=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-f,d.z=0*g,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),a.push(d.x,d.y,d.z),m.copy(p)}for(let s=0;s<=e;s++){const d=i+s*c*n,p=Math.sin(d),m=Math.cos(d);for(let i=0;i<=t.length-1;i++){h.x=t[i].x*p,h.y=t[i].y,h.z=t[i].x*m,r.push(h.x,h.y,h.z),u.x=s/e,u.y=i/(t.length-1),o.push(u.x,u.y);const n=a[3*i+0]*p,c=a[3*i+1],d=a[3*i+0]*m;l.push(n,c,d)}}for(let i=0;i<e;i++)for(let e=0;e<t.length-1;e++){const n=e+i*t.length,r=n,o=n+t.length,a=n+t.length+1,l=n+1;s.push(r,o,l),s.push(a,l,o)}this.setIndex(s),this.setAttribute("position",new Ei(r,3)),this.setAttribute("uv",new Ei(o,2)),this.setAttribute("normal",new Ei(l,3))}static fromJSON(t){return new Ea(t.points,t.segments,t.phiStart,t.phiLength)}}class Ta extends Ea{constructor(t=1,e=1,i=4,n=8){const s=new Sa;s.absarc(0,-e/2,t,1.5*Math.PI,0),s.absarc(0,e/2,t,0,.5*Math.PI),super(s.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:i,radialSegments:n}}static fromJSON(t){return new Ta(t.radius,t.length,t.capSegments,t.radialSegments)}}class Aa extends Di{constructor(t=1,e=8,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},e=Math.max(3,e);const s=[],r=[],o=[],a=[],l=new ne,c=new Rt;r.push(0,0,0),o.push(0,0,1),a.push(.5,.5);for(let s=0,h=3;s<=e;s++,h+=3){const u=i+s/e*n;l.x=t*Math.cos(u),l.y=t*Math.sin(u),r.push(l.x,l.y,l.z),o.push(0,0,1),c.x=(r[h]/t+1)/2,c.y=(r[h+1]/t+1)/2,a.push(c.x,c.y)}for(let t=1;t<=e;t++)s.push(t,t+1,0);this.setIndex(s),this.setAttribute("position",new Ei(r,3)),this.setAttribute("normal",new Ei(o,3)),this.setAttribute("uv",new Ei(a,2))}static fromJSON(t){return new Aa(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Ca extends Di{constructor(t=1,e=1,i=1,n=8,s=1,r=!1,o=0,a=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:s,openEnded:r,thetaStart:o,thetaLength:a};const l=this;n=Math.floor(n),s=Math.floor(s);const c=[],h=[],u=[],d=[];let p=0;const m=[],f=i/2;let g=0;function y(i){const s=p,r=new Rt,m=new ne;let y=0;const v=!0===i?t:e,x=!0===i?1:-1;for(let t=1;t<=n;t++)h.push(0,f*x,0),u.push(0,x,0),d.push(.5,.5),p++;const _=p;for(let t=0;t<=n;t++){const e=t/n*a+o,i=Math.cos(e),s=Math.sin(e);m.x=v*s,m.y=f*x,m.z=v*i,h.push(m.x,m.y,m.z),u.push(0,x,0),r.x=.5*i+.5,r.y=.5*s*x+.5,d.push(r.x,r.y),p++}for(let t=0;t<n;t++){const e=s+t,n=_+t;!0===i?c.push(n,n+1,e):c.push(n+1,n,e),y+=3}l.addGroup(g,y,!0===i?1:2),g+=y}!function(){const r=new ne,y=new ne;let v=0;const x=(e-t)/i;for(let l=0;l<=s;l++){const c=[],g=l/s,v=g*(e-t)+t;for(let t=0;t<=n;t++){const e=t/n,s=e*a+o,l=Math.sin(s),m=Math.cos(s);y.x=v*l,y.y=-g*i+f,y.z=v*m,h.push(y.x,y.y,y.z),r.set(l,x,m).normalize(),u.push(r.x,r.y,r.z),d.push(e,1-g),c.push(p++)}m.push(c)}for(let t=0;t<n;t++)for(let e=0;e<s;e++){const i=m[e][t],n=m[e+1][t],s=m[e+1][t+1],r=m[e][t+1];c.push(i,n,r),c.push(n,s,r),v+=6}l.addGroup(g,v,0),g+=v}(),!1===r&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(c),this.setAttribute("position",new Ei(h,3)),this.setAttribute("normal",new Ei(u,3)),this.setAttribute("uv",new Ei(d,2))}static fromJSON(t){return new Ca(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Ra extends Ca{constructor(t=1,e=1,i=8,n=1,s=!1,r=0,o=2*Math.PI){super(0,t,e,i,n,s,r,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:s,thetaStart:r,thetaLength:o}}static fromJSON(t){return new Ra(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class La extends Di{constructor(t=[],e=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n};const s=[],r=[];function o(t,e,i,n){const s=n+1,r=[];for(let n=0;n<=s;n++){r[n]=[];const o=t.clone().lerp(i,n/s),a=e.clone().lerp(i,n/s),l=s-n;for(let t=0;t<=l;t++)r[n][t]=0===t&&n===s?o:o.clone().lerp(a,t/l)}for(let t=0;t<s;t++)for(let e=0;e<2*(s-t)-1;e++){const i=Math.floor(e/2);e%2==0?(a(r[t][i+1]),a(r[t+1][i]),a(r[t][i])):(a(r[t][i+1]),a(r[t+1][i+1]),a(r[t+1][i]))}}function a(t){s.push(t.x,t.y,t.z)}function l(e,i){const n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function c(t,e,i,n){n<0&&1===t.x&&(r[e]=t.x-1),0===i.x&&0===i.z&&(r[e]=n/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}!function(t){const i=new ne,n=new ne,s=new ne;for(let r=0;r<e.length;r+=3)l(e[r+0],i),l(e[r+1],n),l(e[r+2],s),o(i,n,s,t)}(n),function(t){const e=new ne;for(let i=0;i<s.length;i+=3)e.x=s[i+0],e.y=s[i+1],e.z=s[i+2],e.normalize().multiplyScalar(t),s[i+0]=e.x,s[i+1]=e.y,s[i+2]=e.z}(i),function(){const t=new ne;for(let i=0;i<s.length;i+=3){t.x=s[i+0],t.y=s[i+1],t.z=s[i+2];const n=h(t)/2/Math.PI+.5,o=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);r.push(n,1-o)}var e;(function(){const t=new ne,e=new ne,i=new ne,n=new ne,o=new Rt,a=new Rt,l=new Rt;for(let u=0,d=0;u<s.length;u+=9,d+=6){t.set(s[u+0],s[u+1],s[u+2]),e.set(s[u+3],s[u+4],s[u+5]),i.set(s[u+6],s[u+7],s[u+8]),o.set(r[d+0],r[d+1]),a.set(r[d+2],r[d+3]),l.set(r[d+4],r[d+5]),n.copy(t).add(e).add(i).divideScalar(3);const p=h(n);c(o,d+0,t,p),c(a,d+2,e,p),c(l,d+4,i,p)}})(),function(){for(let t=0;t<r.length;t+=6){const e=r[t+0],i=r[t+2],n=r[t+4],s=Math.max(e,i,n),o=Math.min(e,i,n);s>.9&&o<.1&&(e<.2&&(r[t+0]+=1),i<.2&&(r[t+2]+=1),n<.2&&(r[t+4]+=1))}}()}(),this.setAttribute("position",new Ei(s,3)),this.setAttribute("normal",new Ei(s.slice(),3)),this.setAttribute("uv",new Ei(r,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(t){return new La(t.vertices,t.indices,t.radius,t.details)}}class Pa extends La{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Pa(t.radius,t.detail)}}const Ia=new ne,Da=new ne,Na=new ne,Ba=new gi;class Fa extends Di{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const i=4,n=Math.pow(10,i),s=Math.cos(yt*e),r=t.getIndex(),o=t.getAttribute("position"),a=r?r.count:o.count,l=[0,0,0],c=["a","b","c"],h=new Array(3),u={},d=[];for(let t=0;t<a;t+=3){r?(l[0]=r.getX(t),l[1]=r.getX(t+1),l[2]=r.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:i,c:a}=Ba;if(e.fromBufferAttribute(o,l[0]),i.fromBufferAttribute(o,l[1]),a.fromBufferAttribute(o,l[2]),Ba.getNormal(Na),h[0]=`${Math.round(e.x*n)},${Math.round(e.y*n)},${Math.round(e.z*n)}`,h[1]=`${Math.round(i.x*n)},${Math.round(i.y*n)},${Math.round(i.z*n)}`,h[2]=`${Math.round(a.x*n)},${Math.round(a.y*n)},${Math.round(a.z*n)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let t=0;t<3;t++){const e=(t+1)%3,i=h[t],n=h[e],r=Ba[c[t]],o=Ba[c[e]],a=`${i}_${n}`,p=`${n}_${i}`;p in u&&u[p]?(Na.dot(u[p].normal)<=s&&(d.push(r.x,r.y,r.z),d.push(o.x,o.y,o.z)),u[p]=null):a in u||(u[a]={index0:l[t],index1:l[e],normal:Na.clone()})}}for(const t in u)if(u[t]){const{index0:e,index1:i}=u[t];Ia.fromBufferAttribute(o,e),Da.fromBufferAttribute(o,i),d.push(Ia.x,Ia.y,Ia.z),d.push(Da.x,Da.y,Da.z)}this.setAttribute("position",new Ei(d,3))}}}class Oa extends Sa{constructor(t){super(t),this.uuid=xt(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push((new Sa).fromJSON(i))}return this}}function za(t,e,i,n,s){let r,o;if(s===function(t,e,i,n){let s=0;for(let r=e,o=i-n;r<i;r+=n)s+=(t[o]-t[r])*(t[r+1]+t[o+1]),o=r;return s}(t,e,i,n)>0)for(r=e;r<i;r+=n)o=rl(r,t[r],t[r+1],o);else for(r=i-n;r>=e;r-=n)o=rl(r,t[r],t[r+1],o);return o&&$a(o,o.next)&&(ol(o),o=o.next),o}function Ua(t,e){if(!t)return t;e||(e=t);let i,n=t;do{if(i=!1,n.steiner||!$a(n,n.next)&&0!==Qa(n.prev,n,n.next))n=n.next;else{if(ol(n),n=e=n.prev,n===n.next)break;i=!0}}while(i||n!==e);return e}function Ha(t,e,i,n,s,r,o){if(!t)return;!o&&r&&function(t,e,i,n){let s=t;do{null===s.z&&(s.z=Ya(s.x,s.y,e,i,n)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==t);s.prevZ.nextZ=null,s.prevZ=null,function(t){let e,i,n,s,r,o,a,l,c=1;do{for(i=t,t=null,r=null,o=0;i;){for(o++,n=i,a=0,e=0;e<c&&(a++,n=n.nextZ,n);e++);for(l=c;a>0||l>0&&n;)0!==a&&(0===l||!n||i.z<=n.z)?(s=i,i=i.nextZ,a--):(s=n,n=n.nextZ,l--),r?r.nextZ=s:t=s,s.prevZ=r,r=s;i=n}r.nextZ=null,c*=2}while(o>1)}(s)}(t,n,s,r);let a,l,c=t;for(;t.prev!==t.next;)if(a=t.prev,l=t.next,r?ka(t,n,s,r):Va(t))e.push(a.i/i),e.push(t.i/i),e.push(l.i/i),ol(t),t=l.next,c=l.next;else if((t=l)===c){o?1===o?Ha(t=Ga(Ua(t),e,i),e,i,n,s,r,2):2===o&&Wa(t,e,i,n,s,r):Ha(Ua(t),e,i,n,s,r,1);break}}function Va(t){const e=t.prev,i=t,n=t.next;if(Qa(e,i,n)>=0)return!1;let s=t.next.next;for(;s!==t.prev;){if(Ja(e.x,e.y,i.x,i.y,n.x,n.y,s.x,s.y)&&Qa(s.prev,s,s.next)>=0)return!1;s=s.next}return!0}function ka(t,e,i,n){const s=t.prev,r=t,o=t.next;if(Qa(s,r,o)>=0)return!1;const a=s.x<r.x?s.x<o.x?s.x:o.x:r.x<o.x?r.x:o.x,l=s.y<r.y?s.y<o.y?s.y:o.y:r.y<o.y?r.y:o.y,c=s.x>r.x?s.x>o.x?s.x:o.x:r.x>o.x?r.x:o.x,h=s.y>r.y?s.y>o.y?s.y:o.y:r.y>o.y?r.y:o.y,u=Ya(a,l,e,i,n),d=Ya(c,h,e,i,n);let p=t.prevZ,m=t.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==t.prev&&p!==t.next&&Ja(s.x,s.y,r.x,r.y,o.x,o.y,p.x,p.y)&&Qa(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==t.prev&&m!==t.next&&Ja(s.x,s.y,r.x,r.y,o.x,o.y,m.x,m.y)&&Qa(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&Ja(s.x,s.y,r.x,r.y,o.x,o.y,p.x,p.y)&&Qa(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==t.prev&&m!==t.next&&Ja(s.x,s.y,r.x,r.y,o.x,o.y,m.x,m.y)&&Qa(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Ga(t,e,i){let n=t;do{const s=n.prev,r=n.next.next;!$a(s,r)&&tl(s,n,n.next,r)&&nl(s,r)&&nl(r,s)&&(e.push(s.i/i),e.push(n.i/i),e.push(r.i/i),ol(n),ol(n.next),n=t=r),n=n.next}while(n!==t);return Ua(n)}function Wa(t,e,i,n,s,r){let o=t;do{let t=o.next.next;for(;t!==o.prev;){if(o.i!==t.i&&Ka(o,t)){let a=sl(o,t);return o=Ua(o,o.next),a=Ua(a,a.next),Ha(o,e,i,n,s,r),void Ha(a,e,i,n,s,r)}t=t.next}o=o.next}while(o!==t)}function qa(t,e){return t.x-e.x}function ja(t,e){if(e=function(t,e){let i=e;const n=t.x,s=t.y;let r,o=-1/0;do{if(s<=i.y&&s>=i.next.y&&i.next.y!==i.y){const t=i.x+(s-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=n&&t>o){if(o=t,t===n){if(s===i.y)return i;if(s===i.next.y)return i.next}r=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!r)return null;if(n===o)return r;const a=r,l=r.x,c=r.y;let h,u=1/0;i=r;do{n>=i.x&&i.x>=l&&n!==i.x&&Ja(s<c?n:o,s,l,c,s<c?o:n,s,i.x,i.y)&&(h=Math.abs(s-i.y)/(n-i.x),nl(i,t)&&(h<u||h===u&&(i.x>r.x||i.x===r.x&&Xa(r,i)))&&(r=i,u=h)),i=i.next}while(i!==a);return r}(t,e),e){const i=sl(e,t);Ua(e,e.next),Ua(i,i.next)}}function Xa(t,e){return Qa(t.prev,t,e.prev)<0&&Qa(e.next,t,t.next)<0}function Ya(t,e,i,n,s){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*s)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*s)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Za(t){let e=t,i=t;do{(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next}while(e!==t);return i}function Ja(t,e,i,n,s,r,o,a){return(s-o)*(e-a)-(t-o)*(r-a)>=0&&(t-o)*(n-a)-(i-o)*(e-a)>=0&&(i-o)*(r-a)-(s-o)*(n-a)>=0}function Ka(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&tl(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&(nl(t,e)&&nl(e,t)&&function(t,e){let i=t,n=!1;const s=(t.x+e.x)/2,r=(t.y+e.y)/2;do{i.y>r!=i.next.y>r&&i.next.y!==i.y&&s<(i.next.x-i.x)*(r-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==t);return n}(t,e)&&(Qa(t.prev,t,e.prev)||Qa(t,e.prev,e))||$a(t,e)&&Qa(t.prev,t,t.next)>0&&Qa(e.prev,e,e.next)>0)}function Qa(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function $a(t,e){return t.x===e.x&&t.y===e.y}function tl(t,e,i,n){const s=il(Qa(t,e,i)),r=il(Qa(t,e,n)),o=il(Qa(i,n,t)),a=il(Qa(i,n,e));return s!==r&&o!==a||!(0!==s||!el(t,i,e))||!(0!==r||!el(t,n,e))||!(0!==o||!el(i,t,n))||!(0!==a||!el(i,e,n))}function el(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function il(t){return t>0?1:t<0?-1:0}function nl(t,e){return Qa(t.prev,t,t.next)<0?Qa(t,e,t.next)>=0&&Qa(t,t.prev,e)>=0:Qa(t,e,t.prev)<0||Qa(t,t.next,e)<0}function sl(t,e){const i=new al(t.i,t.x,t.y),n=new al(e.i,e.x,e.y),s=t.next,r=e.prev;return t.next=e,e.prev=t,i.next=s,s.prev=i,n.next=i,i.prev=n,r.next=n,n.prev=r,n}function rl(t,e,i,n){const s=new al(t,e,i);return n?(s.next=n.next,s.prev=n,n.next.prev=s,n.next=s):(s.prev=s,s.next=s),s}function ol(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function al(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ll{static area(t){const e=t.length;let i=0;for(let n=e-1,s=0;s<e;n=s++)i+=t[n].x*t[s].y-t[s].x*t[n].y;return.5*i}static isClockWise(t){return ll.area(t)<0}static triangulateShape(t,e){const i=[],n=[],s=[];cl(t),hl(i,t);let r=t.length;e.forEach(cl);for(let t=0;t<e.length;t++)n.push(r),r+=e[t].length,hl(i,e[t]);const o=function(t,e,i=2){const n=e&&e.length,s=n?e[0]*i:t.length;let r=za(t,0,s,i,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,h,u,d,p;if(n&&(r=function(t,e,i,n){const s=[];let r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*n,l=r<o-1?e[r+1]*n:t.length,c=za(t,a,l,n,!1),c===c.next&&(c.steiner=!0),s.push(Za(c));for(s.sort(qa),r=0;r<s.length;r++)ja(s[r],i),i=Ua(i,i.next);return i}(t,e,r,i)),t.length>80*i){a=c=t[0],l=h=t[1];for(let e=i;e<s;e+=i)u=t[e],d=t[e+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-a,h-l),p=0!==p?1/p:0}return Ha(r,o,i,a,l,p),o}(i,n);for(let t=0;t<o.length;t+=3)s.push(o.slice(t,t+3));return s}}function cl(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function hl(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class ul extends Di{constructor(t=new Oa([new Rt(.5,.5),new Rt(-.5,.5),new Rt(-.5,-.5),new Rt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const i=this,n=[],s=[];for(let e=0,i=t.length;e<i;e++)r(t[e]);function r(t){const r=[],o=void 0!==e.curveSegments?e.curveSegments:12,a=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:.2,u=void 0!==e.bevelSize?e.bevelSize:h-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const m=e.extrudePath,f=void 0!==e.UVGenerator?e.UVGenerator:dl;let g,y,v,x,_,b=!1;m&&(g=m.getSpacedPoints(a),b=!0,c=!1,y=m.computeFrenetFrames(a,!1),v=new ne,x=new ne,_=new ne),c||(p=0,h=0,u=0,d=0);const w=t.extractPoints(o);let M=w.shape;const S=w.holes;if(!ll.isClockWise(M)){M=M.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];ll.isClockWise(e)&&(S[t]=e.reverse())}}const E=ll.triangulateShape(M,S),T=M;for(let t=0,e=S.length;t<e;t++){const e=S[t];M=M.concat(e)}function A(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}const C=M.length,R=E.length;function L(t,e,i){let n,s,r;const o=t.x-e.x,a=t.y-e.y,l=i.x-t.x,c=i.y-t.y,h=o*o+a*a,u=o*c-a*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=e.x-a/u,m=e.y+o/u,f=((i.x-c/d-p)*c-(i.y+l/d-m)*l)/(o*c-a*l);n=p+o*f-t.x,s=m+a*f-t.y;const g=n*n+s*s;if(g<=2)return new Rt(n,s);r=Math.sqrt(g/2)}else{let t=!1;o>Number.EPSILON?l>Number.EPSILON&&(t=!0):o<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(c)&&(t=!0),t?(n=-a,s=o,r=Math.sqrt(h)):(n=o,s=a,r=Math.sqrt(h/2))}return new Rt(n/r,s/r)}const P=[];for(let t=0,e=T.length,i=e-1,n=t+1;t<e;t++,i++,n++)i===e&&(i=0),n===e&&(n=0),P[t]=L(T[t],T[i],T[n]);const I=[];let D,N=P.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];D=[];for(let t=0,i=e.length,n=i-1,s=t+1;t<i;t++,n++,s++)n===i&&(n=0),s===i&&(s=0),D[t]=L(e[t],e[n],e[s]);I.push(D),N=N.concat(D)}for(let t=0;t<p;t++){const e=t/p,i=h*Math.cos(e*Math.PI/2),n=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=T.length;t<e;t++){const e=A(T[t],P[t],n);O(e.x,e.y,-i)}for(let t=0,e=S.length;t<e;t++){const e=S[t];D=I[t];for(let t=0,s=e.length;t<s;t++){const s=A(e[t],D[t],n);O(s.x,s.y,-i)}}}const B=u+d;for(let t=0;t<C;t++){const e=c?A(M[t],N[t],B):M[t];b?(x.copy(y.normals[0]).multiplyScalar(e.x),v.copy(y.binormals[0]).multiplyScalar(e.y),_.copy(g[0]).add(x).add(v),O(_.x,_.y,_.z)):O(e.x,e.y,0)}for(let t=1;t<=a;t++)for(let e=0;e<C;e++){const i=c?A(M[e],N[e],B):M[e];b?(x.copy(y.normals[t]).multiplyScalar(i.x),v.copy(y.binormals[t]).multiplyScalar(i.y),_.copy(g[t]).add(x).add(v),O(_.x,_.y,_.z)):O(i.x,i.y,l/a*t)}for(let t=p-1;t>=0;t--){const e=t/p,i=h*Math.cos(e*Math.PI/2),n=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=T.length;t<e;t++){const e=A(T[t],P[t],n);O(e.x,e.y,l+i)}for(let t=0,e=S.length;t<e;t++){const e=S[t];D=I[t];for(let t=0,s=e.length;t<s;t++){const s=A(e[t],D[t],n);b?O(s.x,s.y+g[a-1].y,g[a-1].x+i):O(s.x,s.y,l+i)}}}function F(t,e){let i=t.length;for(;--i>=0;){const n=i;let s=i-1;s<0&&(s=t.length-1);for(let t=0,i=a+2*p;t<i;t++){const i=C*t,r=C*(t+1);U(e+n+i,e+s+i,e+s+r,e+n+r)}}}function O(t,e,i){r.push(t),r.push(e),r.push(i)}function z(t,e,s){H(t),H(e),H(s);const r=n.length/3,o=f.generateTopUV(i,n,r-3,r-2,r-1);V(o[0]),V(o[1]),V(o[2])}function U(t,e,s,r){H(t),H(e),H(r),H(e),H(s),H(r);const o=n.length/3,a=f.generateSideWallUV(i,n,o-6,o-3,o-2,o-1);V(a[0]),V(a[1]),V(a[3]),V(a[1]),V(a[2]),V(a[3])}function H(t){n.push(r[3*t+0]),n.push(r[3*t+1]),n.push(r[3*t+2])}function V(t){s.push(t.x),s.push(t.y)}!function(){const t=n.length/3;if(c){let t=0,e=C*t;for(let t=0;t<R;t++){const i=E[t];z(i[2]+e,i[1]+e,i[0]+e)}t=a+2*p,e=C*t;for(let t=0;t<R;t++){const i=E[t];z(i[0]+e,i[1]+e,i[2]+e)}}else{for(let t=0;t<R;t++){const e=E[t];z(e[2],e[1],e[0])}for(let t=0;t<R;t++){const e=E[t];z(e[0]+C*a,e[1]+C*a,e[2]+C*a)}}i.addGroup(t,n.length/3-t,0)}(),function(){const t=n.length/3;let e=0;F(T,e),e+=T.length;for(let t=0,i=S.length;t<i;t++){const i=S[t];F(i,e),e+=i.length}i.addGroup(t,n.length/3-t,1)}()}this.setAttribute("position",new Ei(n,3)),this.setAttribute("uv",new Ei(s,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON();return function(t,e,i){if(i.shapes=[],Array.isArray(t))for(let e=0,n=t.length;e<n;e++){const n=t[e];i.shapes.push(n.uuid)}else i.shapes.push(t.uuid);return i.options=Object.assign({},e),void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON()),i}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const i=[];for(let n=0,s=t.shapes.length;n<s;n++){const s=e[t.shapes[n]];i.push(s)}const n=t.options.extrudePath;return void 0!==n&&(t.options.extrudePath=(new wa[n.type]).fromJSON(n)),new ul(i,t.options)}}const dl={generateTopUV:function(t,e,i,n,s){const r=e[3*i],o=e[3*i+1],a=e[3*n],l=e[3*n+1],c=e[3*s],h=e[3*s+1];return[new Rt(r,o),new Rt(a,l),new Rt(c,h)]},generateSideWallUV:function(t,e,i,n,s,r){const o=e[3*i],a=e[3*i+1],l=e[3*i+2],c=e[3*n],h=e[3*n+1],u=e[3*n+2],d=e[3*s],p=e[3*s+1],m=e[3*s+2],f=e[3*r],g=e[3*r+1],y=e[3*r+2];return Math.abs(a-h)<Math.abs(o-c)?[new Rt(o,1-l),new Rt(c,1-u),new Rt(d,1-m),new Rt(f,1-y)]:[new Rt(a,1-l),new Rt(h,1-u),new Rt(p,1-m),new Rt(g,1-y)]}};class pl extends La{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new pl(t.radius,t.detail)}}class ml extends La{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new ml(t.radius,t.detail)}}class fl extends Di{constructor(t=.5,e=1,i=8,n=1,s=0,r=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:s,thetaLength:r},i=Math.max(3,i);const o=[],a=[],l=[],c=[];let h=t;const u=(e-t)/(n=Math.max(1,n)),d=new ne,p=new Rt;for(let t=0;t<=n;t++){for(let t=0;t<=i;t++){const n=s+t/i*r;d.x=h*Math.cos(n),d.y=h*Math.sin(n),a.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y)}h+=u}for(let t=0;t<n;t++){const e=t*(i+1);for(let t=0;t<i;t++){const n=t+e,s=n,r=n+i+1,a=n+i+2,l=n+1;o.push(s,r,l),o.push(r,a,l)}}this.setIndex(o),this.setAttribute("position",new Ei(a,3)),this.setAttribute("normal",new Ei(l,3)),this.setAttribute("uv",new Ei(c,2))}static fromJSON(t){return new fl(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class gl extends Di{constructor(t=new Oa([new Rt(0,.5),new Rt(-.5,-.5),new Rt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const i=[],n=[],s=[],r=[];let o=0,a=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(o,a,e),o+=a,a=0;function l(t){const o=n.length/3,l=t.extractPoints(e);let c=l.shape;const h=l.holes;!1===ll.isClockWise(c)&&(c=c.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===ll.isClockWise(e)&&(h[t]=e.reverse())}const u=ll.triangulateShape(c,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];n.push(e.x,e.y,0),s.push(0,0,1),r.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],n=e[0]+o,s=e[1]+o,r=e[2]+o;i.push(n,s,r),a+=3}}this.setIndex(i),this.setAttribute("position",new Ei(n,3)),this.setAttribute("normal",new Ei(s,3)),this.setAttribute("uv",new Ei(r,2))}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let i=0,n=t.length;i<n;i++){const n=t[i];e.shapes.push(n.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const i=[];for(let n=0,s=t.shapes.length;n<s;n++){const s=e[t.shapes[n]];i.push(s)}return new gl(i,t.curveSegments)}}class yl extends Di{constructor(t=1,e=32,i=16,n=0,s=2*Math.PI,r=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:s,thetaStart:r,thetaLength:o},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const a=Math.min(r+o,Math.PI);let l=0;const c=[],h=new ne,u=new ne,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){const g=[],y=d/i;let v=0;0==d&&0==r?v=.5/e:d==i&&a==Math.PI&&(v=-.5/e);for(let i=0;i<=e;i++){const a=i/e;h.x=-t*Math.cos(n+a*s)*Math.sin(r+y*o),h.y=t*Math.cos(r+y*o),h.z=t*Math.sin(n+a*s)*Math.sin(r+y*o),p.push(h.x,h.y,h.z),u.copy(h).normalize(),m.push(u.x,u.y,u.z),f.push(a+v,1-y),g.push(l++)}c.push(g)}for(let t=0;t<i;t++)for(let n=0;n<e;n++){const e=c[t][n+1],s=c[t][n],o=c[t+1][n],l=c[t+1][n+1];(0!==t||r>0)&&d.push(e,s,l),(t!==i-1||a<Math.PI)&&d.push(s,o,l)}this.setIndex(d),this.setAttribute("position",new Ei(p,3)),this.setAttribute("normal",new Ei(m,3)),this.setAttribute("uv",new Ei(f,2))}static fromJSON(t){return new yl(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class vl extends La{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new vl(t.radius,t.detail)}}class xl extends Di{constructor(t=1,e=.4,i=8,n=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:s},i=Math.floor(i),n=Math.floor(n);const r=[],o=[],a=[],l=[],c=new ne,h=new ne,u=new ne;for(let r=0;r<=i;r++)for(let d=0;d<=n;d++){const p=d/n*s,m=r/i*Math.PI*2;h.x=(t+e*Math.cos(m))*Math.cos(p),h.y=(t+e*Math.cos(m))*Math.sin(p),h.z=e*Math.sin(m),o.push(h.x,h.y,h.z),c.x=t*Math.cos(p),c.y=t*Math.sin(p),u.subVectors(h,c).normalize(),a.push(u.x,u.y,u.z),l.push(d/n),l.push(r/i)}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*t+e-1,s=(n+1)*(t-1)+e-1,o=(n+1)*(t-1)+e,a=(n+1)*t+e;r.push(i,s,a),r.push(s,o,a)}this.setIndex(r),this.setAttribute("position",new Ei(o,3)),this.setAttribute("normal",new Ei(a,3)),this.setAttribute("uv",new Ei(l,2))}static fromJSON(t){return new xl(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class _l extends Di{constructor(t=1,e=.4,i=64,n=8,s=2,r=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:s,q:r},i=Math.floor(i),n=Math.floor(n);const o=[],a=[],l=[],c=[],h=new ne,u=new ne,d=new ne,p=new ne,m=new ne,f=new ne,g=new ne;for(let o=0;o<=i;++o){const v=o/i*s*Math.PI*2;y(v,s,r,t,d),y(v+.01,s,r,t,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=n;++t){const s=t/n*Math.PI*2,r=-e*Math.cos(s),p=e*Math.sin(s);h.x=d.x+(r*g.x+p*m.x),h.y=d.y+(r*g.y+p*m.y),h.z=d.z+(r*g.z+p*m.z),a.push(h.x,h.y,h.z),u.subVectors(h,d).normalize(),l.push(u.x,u.y,u.z),c.push(o/i),c.push(t/n)}}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*(t-1)+(e-1),s=(n+1)*t+(e-1),r=(n+1)*t+e,a=(n+1)*(t-1)+e;o.push(i,s,a),o.push(s,r,a)}function y(t,e,i,n,s){const r=Math.cos(t),o=Math.sin(t),a=i/e*t,l=Math.cos(a);s.x=n*(2+l)*.5*r,s.y=n*(2+l)*o*.5,s.z=n*Math.sin(a)*.5}this.setIndex(o),this.setAttribute("position",new Ei(a,3)),this.setAttribute("normal",new Ei(l,3)),this.setAttribute("uv",new Ei(c,2))}static fromJSON(t){return new _l(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class bl extends Di{constructor(t=new _a(new ne(-1,-1,0),new ne(-1,1,0),new ne(1,1,0)),e=64,i=1,n=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:s};const r=t.computeFrenetFrames(e,s);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals;const o=new ne,a=new ne,l=new Rt;let c=new ne;const h=[],u=[],d=[],p=[];function m(s){c=t.getPointAt(s/e,c);const l=r.normals[s],d=r.binormals[s];for(let t=0;t<=n;t++){const e=t/n*Math.PI*2,s=Math.sin(e),r=-Math.cos(e);a.x=r*l.x+s*d.x,a.y=r*l.y+s*d.y,a.z=r*l.z+s*d.z,a.normalize(),u.push(a.x,a.y,a.z),o.x=c.x+i*a.x,o.y=c.y+i*a.y,o.z=c.z+i*a.z,h.push(o.x,o.y,o.z)}}!function(){for(let t=0;t<e;t++)m(t);m(!1===s?e:0),function(){for(let t=0;t<=e;t++)for(let i=0;i<=n;i++)l.x=t/e,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=n;e++){const i=(n+1)*(t-1)+(e-1),s=(n+1)*t+(e-1),r=(n+1)*t+e,o=(n+1)*(t-1)+e;p.push(i,s,o),p.push(s,r,o)}}()}(),this.setIndex(p),this.setAttribute("position",new Ei(h,3)),this.setAttribute("normal",new Ei(u,3)),this.setAttribute("uv",new Ei(d,2))}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new bl((new wa[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class wl extends Di{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],i=new Set,n=new ne,s=new ne;if(null!==t.index){const r=t.attributes.position,o=t.index;let a=t.groups;0===a.length&&(a=[{start:0,count:o.count,materialIndex:0}]);for(let t=0,l=a.length;t<l;++t){const l=a[t],c=l.start;for(let t=c,a=c+l.count;t<a;t+=3)for(let a=0;a<3;a++){const l=o.getX(t+a),c=o.getX(t+(a+1)%3);n.fromBufferAttribute(r,l),s.fromBufferAttribute(r,c),!0===Ml(n,s,i)&&(e.push(n.x,n.y,n.z),e.push(s.x,s.y,s.z))}}}else{const r=t.attributes.position;for(let t=0,o=r.count/3;t<o;t++)for(let o=0;o<3;o++){const a=3*t+o,l=3*t+(o+1)%3;n.fromBufferAttribute(r,a),s.fromBufferAttribute(r,l),!0===Ml(n,s,i)&&(e.push(n.x,n.y,n.z),e.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ei(e,3))}}}function Ml(t,e,i){const n=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,s=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==i.has(n)&&!0!==i.has(s)&&(i.add(n),i.add(s),!0)}var Sl=Object.freeze({__proto__:null,BoxGeometry:$i,CapsuleGeometry:Ta,CircleGeometry:Aa,ConeGeometry:Ra,CylinderGeometry:Ca,DodecahedronGeometry:Pa,EdgesGeometry:Fa,ExtrudeGeometry:ul,IcosahedronGeometry:pl,LatheGeometry:Ea,OctahedronGeometry:ml,PlaneGeometry:_n,PolyhedronGeometry:La,RingGeometry:fl,ShapeGeometry:gl,SphereGeometry:yl,TetrahedronGeometry:vl,TorusGeometry:xl,TorusKnotGeometry:_l,TubeGeometry:bl,WireframeGeometry:wl});class El extends vi{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new qt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Tl extends sn{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Al extends vi{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new qt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Cl extends Al{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Rt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return _t(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new qt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new qt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new qt(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Rl extends vi{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new qt(16777215),this.specular=new qt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Ll extends vi{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new qt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Pl extends vi{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Il extends vi{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new qt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Dl extends vi{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new qt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Nl extends zo{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function Bl(t,e,i){return Ol(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)}function Fl(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}function Ol(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function zl(t){const e=t.length,i=new Array(e);for(let t=0;t!==e;++t)i[t]=t;return i.sort((function(e,i){return t[e]-t[i]})),i}function Ul(t,e,i){const n=t.length,s=new t.constructor(n);for(let r=0,o=0;o!==n;++r){const n=i[r]*e;for(let i=0;i!==e;++i)s[o++]=t[n+i]}return s}function Hl(t,e,i,n){let s=1,r=t[0];for(;void 0!==r&&void 0===r[n];)r=t[s++];if(void 0===r)return;let o=r[n];if(void 0!==o)if(Array.isArray(o))do{o=r[n],void 0!==o&&(e.push(r.time),i.push.apply(i,o)),r=t[s++]}while(void 0!==r);else if(void 0!==o.toArray)do{o=r[n],void 0!==o&&(e.push(r.time),o.toArray(i,i.length)),r=t[s++]}while(void 0!==r);else do{o=r[n],void 0!==o&&(e.push(r.time),i.push(o)),r=t[s++]}while(void 0!==r)}var Vl=Object.freeze({__proto__:null,arraySlice:Bl,convertArray:Fl,isTypedArray:Ol,getKeyframeOrder:zl,sortedArray:Ul,flattenJSON:Hl,subclip:function(t,e,i,n,s=30){const r=t.clone();r.name=e;const o=[];for(let t=0;t<r.tracks.length;++t){const e=r.tracks[t],a=e.getValueSize(),l=[],c=[];for(let t=0;t<e.times.length;++t){const r=e.times[t]*s;if(!(r<i||r>=n)){l.push(e.times[t]);for(let i=0;i<a;++i)c.push(e.values[t*a+i])}}0!==l.length&&(e.times=Fl(l,e.times.constructor),e.values=Fl(c,e.values.constructor),o.push(e))}r.tracks=o;let a=1/0;for(let t=0;t<r.tracks.length;++t)a>r.tracks[t].times[0]&&(a=r.tracks[t].times[0]);for(let t=0;t<r.tracks.length;++t)r.tracks[t].shift(-1*a);return r.resetDuration(),r},makeClipAdditive:function(t,e=0,i=t,n=30){n<=0&&(n=30);const s=i.tracks.length,r=e/n;for(let e=0;e<s;++e){const n=i.tracks[e],s=n.ValueTypeName;if("bool"===s||"string"===s)continue;const o=t.tracks.find((function(t){return t.name===n.name&&t.ValueTypeName===s}));if(void 0===o)continue;let a=0;const l=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=l/3);let c=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);const u=n.times.length-1;let d;if(r<=n.times[0]){const t=a,e=l-a;d=Bl(n.values,t,e)}else if(r>=n.times[u]){const t=u*l+a,e=t+l-a;d=Bl(n.values,t,e)}else{const t=n.createInterpolant(),e=a,i=l-a;t.evaluate(r),d=Bl(t.resultBuffer,e,i)}"quaternion"===s&&(new ie).fromArray(d).normalize().conjugate().toArray(d);const p=o.times.length;for(let t=0;t<p;++t){const e=t*h+c;if("quaternion"===s)ie.multiplyQuaternionsFlat(o.values,e,d,0,o.values,e);else{const t=h-2*c;for(let i=0;i<t;++i)o.values[e+i]-=d[i]}}}return t.blendMode=rt,t}});class kl{constructor(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let i=this._cachedIndex,n=e[i],s=e[i-1];t:{e:{let r;i:{n:if(!(t<n)){for(let r=i+2;;){if(void 0===n){if(t<s)break n;return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===r)break;if(s=n,n=e[++i],t<n)break e}r=e.length;break i}if(t>=s)break t;{const o=e[1];t<o&&(i=2,s=o);for(let r=i-2;;){if(void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(i===r)break;if(n=s,s=e[--i-1],t>=s)break e}r=i,i=0}}for(;i<r;){const n=i+r>>>1;t<e[n]?r=n:i=n+1}if(n=e[i],s=e[i-1],void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=t*n;for(let t=0;t!==n;++t)e[t]=i[s+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Gl extends kl{constructor(t,e,i,n){super(t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:it,endingEnd:it}}intervalChanged_(t,e,i){const n=this.parameterPositions;let s=t-2,r=t+1,o=n[s],a=n[r];if(void 0===o)switch(this.getSettings_().endingStart){case nt:s=t,o=2*e-i;break;case st:s=n.length-2,o=e+n[s]-n[s+1];break;default:s=t,o=i}if(void 0===a)switch(this.getSettings_().endingEnd){case nt:r=t,a=2*i-e;break;case st:r=1,a=i+n[1]-n[0];break;default:r=t-1,a=e}const l=.5*(i-e),c=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(a-i),this._offsetPrev=s*c,this._offsetNext=r*c}interpolate_(t,e,i,n){const s=this.resultBuffer,r=this.sampleValues,o=this.valueSize,a=t*o,l=a-o,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-e)/(n-e),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,y=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,v=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let t=0;t!==o;++t)s[t]=g*r[c+t]+y*r[l+t]+v*r[a+t]+x*r[h+t];return s}}class Wl extends kl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const s=this.resultBuffer,r=this.sampleValues,o=this.valueSize,a=t*o,l=a-o,c=(i-e)/(n-e),h=1-c;for(let t=0;t!==o;++t)s[t]=r[l+t]*h+r[a+t]*c;return s}}class ql extends kl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t){return this.copySampleValue_(t-1)}}class jl{constructor(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Fl(e,this.TimeBufferType),this.values=Fl(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:Fl(t.times,Array),values:Fl(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(i.interpolation=e)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new ql(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Wl(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Gl(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case $:e=this.InterpolantFactoryMethodDiscrete;break;case tt:e=this.InterpolantFactoryMethodLinear;break;case et:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return $;case this.InterpolantFactoryMethodLinear:return tt;case this.InterpolantFactoryMethodSmooth:return et}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const i=this.times,n=i.length;let s=0,r=n-1;for(;s!==n&&i[s]<t;)++s;for(;-1!==r&&i[r]>e;)--r;if(++r,0!==s||r!==n){s>=r&&(r=Math.max(r,1),s=r-1);const t=this.getValueSize();this.times=Bl(i,s,r),this.values=Bl(this.values,s*t,r*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,n=this.values,s=i.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let e=0;e!==s;e++){const n=i[e];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(null!==r&&r>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,r),t=!1;break}r=n}if(void 0!==n&&Ol(n))for(let e=0,i=n.length;e!==i;++e){const i=n[e];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,i),t=!1;break}}return t}optimize(){const t=Bl(this.times),e=Bl(this.values),i=this.getValueSize(),n=this.getInterpolation()===et,s=t.length-1;let r=1;for(let o=1;o<s;++o){let s=!1;const a=t[o];if(a!==t[o+1]&&(1!==o||a!==t[0]))if(n)s=!0;else{const t=o*i,n=t-i,r=t+i;for(let o=0;o!==i;++o){const i=e[t+o];if(i!==e[n+o]||i!==e[r+o]){s=!0;break}}}if(s){if(o!==r){t[r]=t[o];const n=o*i,s=r*i;for(let t=0;t!==i;++t)e[s+t]=e[n+t]}++r}}if(s>0){t[r]=t[s];for(let t=s*i,n=r*i,o=0;o!==i;++o)e[n+o]=e[t+o];++r}return r!==t.length?(this.times=Bl(t,0,r),this.values=Bl(e,0,r*i)):(this.times=t,this.values=e),this}clone(){const t=Bl(this.times,0),e=Bl(this.values,0),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}jl.prototype.TimeBufferType=Float32Array,jl.prototype.ValueBufferType=Float32Array,jl.prototype.DefaultInterpolation=tt;class Xl extends jl{}Xl.prototype.ValueTypeName="bool",Xl.prototype.ValueBufferType=Array,Xl.prototype.DefaultInterpolation=$,Xl.prototype.InterpolantFactoryMethodLinear=void 0,Xl.prototype.InterpolantFactoryMethodSmooth=void 0;class Yl extends jl{}Yl.prototype.ValueTypeName="color";class Zl extends jl{}Zl.prototype.ValueTypeName="number";class Jl extends kl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const s=this.resultBuffer,r=this.sampleValues,o=this.valueSize,a=(i-e)/(n-e);let l=t*o;for(let t=l+o;l!==t;l+=4)ie.slerpFlat(s,0,r,l-o,r,l,a);return s}}class Kl extends jl{InterpolantFactoryMethodLinear(t){return new Jl(this.times,this.values,this.getValueSize(),t)}}Kl.prototype.ValueTypeName="quaternion",Kl.prototype.DefaultInterpolation=tt,Kl.prototype.InterpolantFactoryMethodSmooth=void 0;class Ql extends jl{}Ql.prototype.ValueTypeName="string",Ql.prototype.ValueBufferType=Array,Ql.prototype.DefaultInterpolation=$,Ql.prototype.InterpolantFactoryMethodLinear=void 0,Ql.prototype.InterpolantFactoryMethodSmooth=void 0;class $l extends jl{}$l.prototype.ValueTypeName="vector";class tc{constructor(t,e=-1,i,n=2500){this.name=t,this.tracks=i,this.duration=e,this.blendMode=n,this.uuid=xt(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],i=t.tracks,n=1/(t.fps||1);for(let t=0,s=i.length;t!==s;++t)e.push(ec(i[t]).scale(n));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,n=i.length;t!==n;++t)e.push(jl.toJSON(i[t]));return n}static CreateFromMorphTargetSequence(t,e,i,n){const s=e.length,r=[];for(let t=0;t<s;t++){let o=[],a=[];o.push((t+s-1)%s,t,(t+1)%s),a.push(0,1,0);const l=zl(o);o=Ul(o,1,l),a=Ul(a,1,l),n||0!==o[0]||(o.push(s),a.push(a[0])),r.push(new Zl(".morphTargetInfluences["+e[t].name+"]",o,a).scale(1/i))}return new this(t,-1,r)}static findByName(t,e){let i=t;if(!Array.isArray(t)){const e=t;i=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<i.length;t++)if(i[t].name===e)return i[t];return null}static CreateClipsFromMorphTargetSequences(t,e,i){const n={},s=/^([\w-]*?)([\d]+)$/;for(let e=0,i=t.length;e<i;e++){const i=t[e],r=i.name.match(s);if(r&&r.length>1){const t=r[1];let e=n[t];e||(n[t]=e=[]),e.push(i)}}const r=[];for(const t in n)r.push(this.CreateFromMorphTargetSequence(t,n[t],e,i));return r}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(t,e,i,n,s){if(0!==i.length){const r=[],o=[];Hl(i,r,o,n),0!==r.length&&s.push(new t(e,r,o))}},n=[],s=t.name||"default",r=t.fps||30,o=t.blendMode;let a=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const s=l[t].keys;if(s&&0!==s.length)if(s[0].morphTargets){const t={};let e;for(e=0;e<s.length;e++)if(s[e].morphTargets)for(let i=0;i<s[e].morphTargets.length;i++)t[s[e].morphTargets[i]]=-1;for(const i in t){const t=[],r=[];for(let n=0;n!==s[e].morphTargets.length;++n){const n=s[e];t.push(n.time),r.push(n.morphTarget===i?1:0)}n.push(new Zl(".morphTargetInfluence["+i+"]",t,r))}a=t.length*r}else{const r=".bones["+e[t].name+"]";i($l,r+".position",s,"pos",n),i(Kl,r+".quaternion",s,"rot",n),i($l,r+".scale",s,"scl",n)}}return 0===n.length?null:new this(s,a,n,o)}resetDuration(){let t=0;for(let e=0,i=this.tracks.length;e!==i;++e){const i=this.tracks[e];t=Math.max(t,i.times[i.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function ec(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Zl;case"vector":case"vector2":case"vector3":case"vector4":return $l;case"color":return Yl;case"quaternion":return Kl;case"bool":case"boolean":return Xl;case"string":return Ql}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],i=[];Hl(t.keys,e,i,"value"),t.times=e,t.values=i}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const ic={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class nc{constructor(t,e,i){const n=this;let s,r=!1,o=0,a=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){a++,!1===r&&void 0!==n.onStart&&n.onStart(t,o,a),r=!0},this.itemEnd=function(t){o++,void 0!==n.onProgress&&n.onProgress(t,o,a),o===a&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,i=l.length;e<i;e+=2){const i=l[e],n=l[e+1];if(i.global&&(i.lastIndex=0),i.test(t))return n}return null}}}const sc=new nc;class rc{constructor(t){this.manager=void 0!==t?t:sc,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise((function(n,s){i.load(t,n,e,s)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const oc={};class ac extends Error{constructor(t,e){super(t),this.response=e}}class lc extends rc{constructor(t){super(t)}load(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=ic.get(t);if(void 0!==s)return this.manager.itemStart(t),setTimeout((()=>{e&&e(s),this.manager.itemEnd(t)}),0),s;if(void 0!==oc[t])return void oc[t].push({onLoad:e,onProgress:i,onError:n});oc[t]=[],oc[t].push({onLoad:e,onProgress:i,onError:n});const r=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,a=this.responseType;fetch(r).then((e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const i=oc[t],n=e.body.getReader(),s=e.headers.get("Content-Length"),r=s?parseInt(s):0,o=0!==r;let a=0;const l=new ReadableStream({start(t){!function e(){n.read().then((({done:n,value:s})=>{if(n)t.close();else{a+=s.byteLength;const n=new ProgressEvent("progress",{lengthComputable:o,loaded:a,total:r});for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onProgress&&e.onProgress(n)}t.enqueue(s),e()}}))}()}});return new Response(l)}throw new ac(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)})).then((t=>{switch(a){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>(new DOMParser).parseFromString(t,o)));case"json":return t.json();default:if(void 0===o)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(o),i=e&&e[1]?e[1].toLowerCase():void 0,n=new TextDecoder(i);return t.arrayBuffer().then((t=>n.decode(t)))}}})).then((e=>{ic.add(t,e);const i=oc[t];delete oc[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onLoad&&n.onLoad(e)}})).catch((e=>{const i=oc[t];if(void 0===i)throw this.manager.itemError(t),e;delete oc[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class cc extends rc{constructor(t){super(t)}load(t,e,i,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=ic.get(t);if(void 0!==r)return s.manager.itemStart(t),setTimeout((function(){e&&e(r),s.manager.itemEnd(t)}),0),r;const o=Nt("img");function a(){c(),ic.add(t,this),e&&e(this),s.manager.itemEnd(t)}function l(e){c(),n&&n(e),s.manager.itemError(t),s.manager.itemEnd(t)}function c(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(t),o.src=t,o}}class hc extends ri{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new qt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}class uc extends hc{constructor(t,e,i){super(t,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ri.DefaultUp),this.updateMatrix(),this.groundColor=new qt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const dc=new Ne,pc=new ne,mc=new ne;class fc{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Rt(512,512),this.map=null,this.mapPass=null,this.matrix=new Ne,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new yn,this._frameExtents=new Rt(1,1),this._viewportCount=1,this._viewports=[new Qt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;pc.setFromMatrixPosition(t.matrixWorld),e.position.copy(pc),mc.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(mc),e.updateMatrixWorld(),dc.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(dc),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(dc)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class gc extends fc{constructor(){super(new on(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,i=2*vt*t.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;i===e.fov&&n===e.aspect&&s===e.far||(e.fov=i,e.aspect=n,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class yc extends hc{constructor(t,e,i=0,n=Math.PI/3,s=0,r=1){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(ri.DefaultUp),this.updateMatrix(),this.target=new ri,this.distance=i,this.angle=n,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new gc}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const vc=new Ne,xc=new ne,_c=new ne;class bc extends fc{constructor(){super(new on(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Rt(4,2),this._viewportCount=6,this._viewports=[new Qt(2,1,1,1),new Qt(0,1,1,1),new Qt(3,1,1,1),new Qt(1,1,1,1),new Qt(3,0,1,1),new Qt(1,0,1,1)],this._cubeDirections=[new ne(1,0,0),new ne(-1,0,0),new ne(0,0,1),new ne(0,0,-1),new ne(0,1,0),new ne(0,-1,0)],this._cubeUps=[new ne(0,1,0),new ne(0,1,0),new ne(0,1,0),new ne(0,1,0),new ne(0,0,1),new ne(0,0,-1)]}updateMatrices(t,e=0){const i=this.camera,n=this.matrix,s=t.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),xc.setFromMatrixPosition(t.matrixWorld),i.position.copy(xc),_c.copy(i.position),_c.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(_c),i.updateMatrixWorld(),n.makeTranslation(-xc.x,-xc.y,-xc.z),vc.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vc)}}class wc extends hc{constructor(t,e,i=0,n=1){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new bc}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Mc extends fc{constructor(){super(new Ln(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Sc extends hc{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ri.DefaultUp),this.updateMatrix(),this.target=new ri,this.shadow=new Mc}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Ec extends hc{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Tc extends hc{constructor(t,e,i=10,n=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Ac{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new ne)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const i=t.x,n=t.y,s=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.282095),e.addScaledVector(r[1],.488603*n),e.addScaledVector(r[2],.488603*s),e.addScaledVector(r[3],.488603*i),e.addScaledVector(r[4],i*n*1.092548),e.addScaledVector(r[5],n*s*1.092548),e.addScaledVector(r[6],.315392*(3*s*s-1)),e.addScaledVector(r[7],i*s*1.092548),e.addScaledVector(r[8],.546274*(i*i-n*n)),e}getIrradianceAt(t,e){const i=t.x,n=t.y,s=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.886227),e.addScaledVector(r[1],1.023328*n),e.addScaledVector(r[2],1.023328*s),e.addScaledVector(r[3],1.023328*i),e.addScaledVector(r[4],.858086*i*n),e.addScaledVector(r[5],.858086*n*s),e.addScaledVector(r[6],.743125*s*s-.247708),e.addScaledVector(r[7],.858086*i*s),e.addScaledVector(r[8],.429043*(i*i-n*n)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(t,e+3*n);return this}toArray(t=[],e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(t,e+3*n);return t}static getBasisAt(t,e){const i=t.x,n=t.y,s=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*s,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*i*s,e[8]=.546274*(i*i-n*n)}}class Cc extends hc{constructor(t=new Ac,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Rc extends rc{constructor(t){super(t),this.textures={}}load(t,e,i,n){const s=this,r=new lc(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,(function(i){try{e(s.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),s.manager.itemError(t)}}),i,n)}parse(t){const e=this.textures;function i(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const n=Rc.createMaterialFromType(t.type);if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&void 0!==n.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.sheen&&(n.sheen=t.sheen),void 0!==t.sheenColor&&(n.sheenColor=(new qt).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(n.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==n.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==n.specular&&n.specular.setHex(t.specular),void 0!==t.specularIntensity&&(n.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==n.specularColor&&n.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearcoat&&(n.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(n.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.iridescence&&(n.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(n.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(n.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(n.transmission=t.transmission),void 0!==t.thickness&&(n.thickness=t.thickness),void 0!==t.attenuationDistance&&(n.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==n.attenuationColor&&n.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.combine&&(n.combine=t.combine),void 0!==t.side&&(n.side=t.side),void 0!==t.shadowSide&&(n.shadowSide=t.shadowSide),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(n.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(n.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(n.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(n.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(n.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(n.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(n.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(n.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.polygonOffset&&(n.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(n.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(n.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.alphaToCoverage&&(n.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(n.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.toneMapped&&(n.toneMapped=t.toneMapped),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?n.vertexColors=t.vertexColors>0:n.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const s=t.uniforms[e];switch(n.uniforms[e]={},s.type){case"t":n.uniforms[e].value=i(s.value);break;case"c":n.uniforms[e].value=(new qt).setHex(s.value);break;case"v2":n.uniforms[e].value=(new Rt).fromArray(s.value);break;case"v3":n.uniforms[e].value=(new ne).fromArray(s.value);break;case"v4":n.uniforms[e].value=(new Qt).fromArray(s.value);break;case"m3":n.uniforms[e].value=(new Lt).fromArray(s.value);break;case"m4":n.uniforms[e].value=(new Ne).fromArray(s.value);break;default:n.uniforms[e].value=s.value}}if(void 0!==t.defines&&(n.defines=t.defines),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.glslVersion&&(n.glslVersion=t.glslVersion),void 0!==t.extensions)for(const e in t.extensions)n.extensions[e]=t.extensions[e];if(void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=i(t.map)),void 0!==t.matcap&&(n.matcap=i(t.matcap)),void 0!==t.alphaMap&&(n.alphaMap=i(t.alphaMap)),void 0!==t.bumpMap&&(n.bumpMap=i(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=i(t.normalMap)),void 0!==t.normalMapType&&(n.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),n.normalScale=(new Rt).fromArray(e)}return void 0!==t.displacementMap&&(n.displacementMap=i(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=i(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=i(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=i(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=i(t.specularMap)),void 0!==t.specularIntensityMap&&(n.specularIntensityMap=i(t.specularIntensityMap)),void 0!==t.specularColorMap&&(n.specularColorMap=i(t.specularColorMap)),void 0!==t.envMap&&(n.envMap=i(t.envMap)),void 0!==t.envMapIntensity&&(n.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(n.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(n.lightMap=i(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=i(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=i(t.gradientMap)),void 0!==t.clearcoatMap&&(n.clearcoatMap=i(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(n.clearcoatNormalMap=i(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Rt).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(n.iridescenceMap=i(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(n.iridescenceThicknessMap=i(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(n.transmissionMap=i(t.transmissionMap)),void 0!==t.thicknessMap&&(n.thicknessMap=i(t.thicknessMap)),void 0!==t.sheenColorMap&&(n.sheenColorMap=i(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(n.sheenRoughnessMap=i(t.sheenRoughnessMap)),n}setTextures(t){return this.textures=t,this}static createMaterialFromType(t){return new{ShadowMaterial:El,SpriteMaterial:eo,RawShaderMaterial:Tl,ShaderMaterial:sn,PointsMaterial:Zo,MeshPhysicalMaterial:Cl,MeshStandardMaterial:Al,MeshPhongMaterial:Rl,MeshToonMaterial:Ll,MeshNormalMaterial:Pl,MeshLambertMaterial:Il,MeshDepthMaterial:Dr,MeshDistanceMaterial:Nr,MeshBasicMaterial:xi,MeshMatcapMaterial:Dl,LineDashedMaterial:Nl,LineBasicMaterial:zo,Material:vi}[t]}}class Lc{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let i=0,n=t.length;i<n;i++)e+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Pc extends Di{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class Ic extends rc{constructor(t){super(t)}load(t,e,i,n){const s=this,r=new lc(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,(function(i){try{e(s.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),s.manager.itemError(t)}}),i,n)}parse(t){const e={},i={};function n(t,n){if(void 0!==e[n])return e[n];const s=t.interleavedBuffers[n],r=function(t,e){if(void 0!==i[e])return i[e];const n=t.arrayBuffers[e],s=new Uint32Array(n).buffer;return i[e]=s,s}(t,s.buffer),o=Dt(s.type,r),a=new Qr(o,s.stride);return a.uuid=s.uuid,e[n]=a,a}const s=t.isInstancedBufferGeometry?new Pc:new Di,r=t.data.index;if(void 0!==r){const t=Dt(r.type,r.array);s.setIndex(new wi(t,1))}const o=t.data.attributes;for(const e in o){const i=o[e];let r;if(i.isInterleavedBufferAttribute){const e=n(t.data,i.data);r=new to(e,i.itemSize,i.offset,i.normalized)}else{const t=Dt(i.type,i.array);r=new(i.isInstancedBufferAttribute?Io:wi)(t,i.itemSize,i.normalized)}void 0!==i.name&&(r.name=i.name),void 0!==i.usage&&r.setUsage(i.usage),void 0!==i.updateRange&&(r.updateRange.offset=i.updateRange.offset,r.updateRange.count=i.updateRange.count),s.setAttribute(e,r)}const a=t.data.morphAttributes;if(a)for(const e in a){const i=a[e],r=[];for(let e=0,s=i.length;e<s;e++){const s=i[e];let o;if(s.isInterleavedBufferAttribute){const e=n(t.data,s.data);o=new to(e,s.itemSize,s.offset,s.normalized)}else{const t=Dt(s.type,s.array);o=new wi(t,s.itemSize,s.normalized)}void 0!==s.name&&(o.name=s.name),r.push(o)}s.morphAttributes[e]=r}t.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];s.addGroup(e.start,e.count,e.materialIndex)}const c=t.data.boundingSphere;if(void 0!==c){const t=new ne;void 0!==c.center&&t.fromArray(c.center),s.boundingSphere=new Ee(t,c.radius)}return t.name&&(s.name=t.name),t.userData&&(s.userData=t.userData),s}}const Dc={UVMapping:s,CubeReflectionMapping:r,CubeRefractionMapping:o,EquirectangularReflectionMapping:a,EquirectangularRefractionMapping:l,CubeUVReflectionMapping:c},Nc={RepeatWrapping:h,ClampToEdgeWrapping:u,MirroredRepeatWrapping:d},Bc={NearestFilter:p,NearestMipmapNearestFilter:m,NearestMipmapLinearFilter:f,LinearFilter:g,LinearMipmapNearestFilter:y,LinearMipmapLinearFilter:v};let Fc;const Oc={getContext:function(){return void 0===Fc&&(Fc=new(window.AudioContext||window.webkitAudioContext)),Fc},setContext:function(t){Fc=t}},zc=new Ne,Uc=new Ne,Hc=new Ne;class Vc{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=kc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=kc();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function kc(){return("undefined"==typeof performance?Date:performance).now()}const Gc=new ne,Wc=new ie,qc=new ne,jc=new ne;class Xc extends ri{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const Yc=new ne,Zc=new ie,Jc=new ne,Kc=new ne;class Qc{constructor(t,e,i){let n,s,r;switch(this.binding=t,this.valueSize=i,e){case"quaternion":n=this._slerp,s=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,s=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,s=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=s,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const i=this.buffer,n=this.valueSize,s=t*n+n;let r=this.cumulativeWeight;if(0===r){for(let t=0;t!==n;++t)i[s+t]=i[t];r=e}else{r+=e;const t=e/r;this._mixBufferRegion(i,s,0,t,n)}this.cumulativeWeight=r}accumulateAdditive(t){const e=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,n,0,t,i),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,i=this.buffer,n=t*e+e,s=this.cumulativeWeight,r=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const t=e*this._origIndex;this._mixBufferRegion(i,n,t,1-s,e)}r>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*e,1,e);for(let t=e,s=e+e;t!==s;++t)if(i[t]!==i[t+e]){o.setValue(i,n);break}}saveOriginalState(){const t=this.binding,e=this.buffer,i=this.valueSize,n=i*this._origIndex;t.getValue(e,n);for(let t=i,s=n;t!==s;++t)e[t]=e[n+t%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]}_select(t,e,i,n,s){if(n>=.5)for(let n=0;n!==s;++n)t[e+n]=t[i+n]}_slerp(t,e,i,n){ie.slerpFlat(t,e,t,e,t,i,n)}_slerpAdditive(t,e,i,n,s){const r=this._workIndex*s;ie.multiplyQuaternionsFlat(t,r,t,e,t,i),ie.slerpFlat(t,e,t,e,t,r,n)}_lerp(t,e,i,n,s){const r=1-n;for(let o=0;o!==s;++o){const s=e+o;t[s]=t[s]*r+t[i+o]*n}}_lerpAdditive(t,e,i,n,s){for(let r=0;r!==s;++r){const s=e+r;t[s]=t[s]+t[i+r]*n}}}const $c="\\[\\]\\.:\\/",th=new RegExp("["+$c+"]","g"),eh="[^"+$c+"]",ih="[^"+$c.replace("\\.","")+"]",nh=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",eh)+/(WCOD+)?/.source.replace("WCOD",ih)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",eh)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",eh)+"$"),sh=["material","materials","bones","map"];class rh{constructor(t,e,i){this.path=e,this.parsedPath=i||rh.parseTrackName(e),this.node=rh.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new rh.Composite(t,e,i):new rh(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(th,"")}static parseTrackName(t){const e=nh.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const t=i.nodeName.substring(n+1);-1!==sh.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){const i=function(t){for(let n=0;n<t.length;n++){const s=t[n];if(s.name===e||s.uuid===e)return s;const r=i(s.children);if(r)return r}return null},n=i(t.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)t[e++]=i[n]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,i=e.objectName,n=e.propertyName;let s=e.propertyIndex;if(t||(t=rh.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let n=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===n){n=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==n){if(void 0===t[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[n]}}const r=t[n];if(void 0===r){const i=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",t)}let o=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[s]&&(s=t.morphTargetDictionary[s])}a=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else void 0!==r.fromArray&&void 0!==r.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(a=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=n;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}rh.Composite=class{constructor(t,e,i){const n=i||rh.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}getValue(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)}setValue(t,e){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,s=i.length;n!==s;++n)i[n].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},rh.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},rh.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},rh.prototype.GetterByBindingType=[rh.prototype._getValue_direct,rh.prototype._getValue_array,rh.prototype._getValue_arrayElement,rh.prototype._getValue_toArray],rh.prototype.SetterByBindingTypeAndVersioning=[[rh.prototype._setValue_direct,rh.prototype._setValue_direct_setNeedsUpdate,rh.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[rh.prototype._setValue_array,rh.prototype._setValue_array_setNeedsUpdate,rh.prototype._setValue_array_setMatrixWorldNeedsUpdate],[rh.prototype._setValue_arrayElement,rh.prototype._setValue_arrayElement_setNeedsUpdate,rh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[rh.prototype._setValue_fromArray,rh.prototype._setValue_fromArray_setNeedsUpdate,rh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class oh{constructor(t,e,i=null,n=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=i,this.blendMode=n;const s=e.tracks,r=s.length,o=new Array(r),a={endingStart:it,endingEnd:it};for(let t=0;t!==r;++t){const e=s[t].createInterpolant(null);o[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){const i=this._clip.duration,n=t._clip.duration,s=n/i,r=i/n;t.warp(1,s,e),this.warp(r,1,e)}return this}crossFadeTo(t,e,i){return t.crossFadeFrom(this,e,i)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,i){const n=this._mixer,s=n.time,r=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,a[1]=s+i,l[0]=t/r,l[1]=e/r,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,i,n){if(!this.enabled)return void this._updateWeight(t);const s=this._startTime;if(null!==s){const n=(t-s)*i;n<0||0===i?e=0:(this._startTime=null,e=i*n)}e*=this._updateTimeScale(t);const r=this._updateTime(e),o=this._updateWeight(t);if(o>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===rt)for(let i=0,n=t.length;i!==n;++i)t[i].evaluate(r),e[i].accumulateAdditive(o);else for(let i=0,s=t.length;i!==s;++i)t[i].evaluate(r),e[i].accumulate(n,o)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const i=this._weightInterpolant;if(null!==i){const n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const i=this._timeScaleInterpolant;null!==i&&(e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,i=this.loop;let n=this.time+t,s=this._loopCount;const r=2202===i;if(0===t)return-1===s?n:r&&1==(1&s)?e-n:n;if(2200===i){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(n>=e)n=e;else{if(!(n<0)){this.time=n;break t}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===s&&(t>=0?(s=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),n>=e||n<0){const i=Math.floor(n/e);n-=e*i,s+=Math.abs(i);const o=this.repetitions-s;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=t>0?e:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===o){const e=t<0;this._setEndings(e,!e,r)}else this._setEndings(!1,!1,r);this._loopCount=s,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(r&&1==(1&s))return e-n}return n}_setEndings(t,e,i){const n=this._interpolantSettings;i?(n.endingStart=nt,n.endingEnd=nt):(n.endingStart=t?this.zeroSlopeAtStart?nt:it:st,n.endingEnd=e?this.zeroSlopeAtEnd?nt:it:st)}_scheduleFading(t,e,i){const n=this._mixer,s=n.time;let r=this._weightInterpolant;null===r&&(r=n._lendControlInterpolant(),this._weightInterpolant=r);const o=r.parameterPositions,a=r.sampleValues;return o[0]=s,a[0]=e,o[1]=s+t,a[1]=i,this}}const ah=new Float32Array(1);class lh{constructor(t){this.value=t}clone(){return new lh(void 0===this.value.clone?this.value:this.value.clone())}}let ch=0;function hh(t,e){return t.distance-e.distance}function uh(t,e,i,n){if(t.layers.test(e.layers)&&t.raycast(e,i),!0===n){const n=t.children;for(let t=0,s=n.length;t<s;t++)uh(n[t],e,i,!0)}}const dh=new Rt,ph=new ne,mh=new ne,fh=new ne,gh=new ne,yh=new Ne,vh=new Ne;function xh(t){const e=[];!0===t.isBone&&e.push(t);for(let i=0;i<t.children.length;i++)e.push.apply(e,xh(t.children[i]));return e}const _h=new ne,bh=new qt,wh=new qt,Mh=new ne,Sh=new ne,Eh=new ne,Th=new ne,Ah=new rn;function Ch(t,e,i,n,s,r,o){Th.set(s,r,o).unproject(n);const a=e[t];if(void 0!==a){const t=i.getAttribute("position");for(let e=0,i=a.length;e<i;e++)t.setXYZ(a[e],Th.x,Th.y,Th.z)}}const Rh=new oe,Lh=new ne;let Ph,Ih;const Dh=Nh();function Nh(){const t=new ArrayBuffer(4),e=new Float32Array(t),i=new Uint32Array(t),n=new Uint32Array(512),s=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(n[t]=0,n[256|t]=32768,s[t]=24,s[256|t]=24):e<-14?(n[t]=1024>>-e-14,n[256|t]=1024>>-e-14|32768,s[t]=-e-1,s[256|t]=-e-1):e<=15?(n[t]=e+15<<10,n[256|t]=e+15<<10|32768,s[t]=13,s[256|t]=13):e<128?(n[t]=31744,n[256|t]=64512,s[t]=24,s[256|t]=24):(n[t]=31744,n[256|t]=64512,s[t]=13,s[256|t]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,i=0;for(;0==(8388608&e);)e<<=1,i-=8388608;e&=-8388609,i+=947912704,r[t]=e|i}for(let t=1024;t<2048;++t)r[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)o[t]=t<<23;o[31]=1199570944,o[32]=2147483648;for(let t=33;t<63;++t)o[t]=2147483648+(t-32<<23);o[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(a[t]=1024);return{floatView:e,uint32View:i,baseTable:n,shiftTable:s,mantissaTable:r,exponentTable:o,offsetTable:a}}var Bh=Object.freeze({__proto__:null,toHalfFloat:function(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=_t(t,-65504,65504),Dh.floatView[0]=t;const e=Dh.uint32View[0],i=e>>23&511;return Dh.baseTable[i]+((8388607&e)>>Dh.shiftTable[i])},fromHalfFloat:function(t){const e=t>>10;return Dh.uint32View[0]=Dh.mantissaTable[Dh.offsetTable[e]+(1023&t)]+Dh.exponentTable[e],Dh.floatView[0]}});"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:i}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=i),e.ACESFilmicToneMapping=4,e.AddEquation=n,e.AddOperation=2,e.AdditiveAnimationBlendMode=rt,e.AdditiveBlending=2,e.AlphaFormat=1021,e.AlwaysDepth=1,e.AlwaysStencilFunc=519,e.AmbientLight=Ec,e.AmbientLightProbe=class extends Cc{constructor(t,e=1){super(void 0,e),this.isAmbientLightProbe=!0;const i=(new qt).set(t);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}},e.AnimationClip=tc,e.AnimationLoader=class extends rc{constructor(t){super(t)}load(t,e,i,n){const s=this,r=new lc(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(i){try{e(s.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),s.manager.itemError(t)}}),i,n)}parse(t){const e=[];for(let i=0;i<t.length;i++){const n=tc.parse(t[i]);e.push(n)}return e}},e.AnimationMixer=class extends mt{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const i=t._localRoot||this._root,n=t._clip.tracks,s=n.length,r=t._propertyBindings,o=t._interpolants,a=i.uuid,l=this._bindingsByRootAndName;let c=l[a];void 0===c&&(c={},l[a]=c);for(let t=0;t!==s;++t){const s=n[t],l=s.name;let h=c[l];if(void 0!==h)++h.referenceCount,r[t]=h;else{if(h=r[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,a,l));continue}const n=e&&e._propertyBindings[t].binding.parsedPath;h=new Qc(rh.create(i,l,n),s.ValueTypeName,s.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,a,l),r[t]=h}o[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,i){const n=this._actions,s=this._actionsByClip;let r=s[e];if(void 0===r)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=r;else{const e=r.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=n.length,n.push(t),r.actionByRoot[i]=t}_removeInactiveAction(t){const e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,r=this._actionsByClip,o=r[s],a=o.knownActions,l=a[a.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),t._byClipCacheIndex=null,delete o.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete r[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(t){const e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,s=e[n];t._cacheIndex=n,e[n]=t,s._cacheIndex=i,e[i]=s}_takeBackAction(t){const e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,s=e[n];t._cacheIndex=n,e[n]=t,s._cacheIndex=i,e[i]=s}_addInactiveBinding(t,e,i){const n=this._bindingsByRootAndName,s=this._bindings;let r=n[e];void 0===r&&(r={},n[e]=r),r[i]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,i=t.binding,n=i.rootNode.uuid,s=i.path,r=this._bindingsByRootAndName,o=r[n],a=e[e.length-1],l=t._cacheIndex;a._cacheIndex=l,e[l]=a,e.pop(),delete o[s],0===Object.keys(o).length&&delete r[n]}_lendBinding(t){const e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,s=e[n];t._cacheIndex=n,e[n]=t,s._cacheIndex=i,e[i]=s}_takeBackBinding(t){const e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,s=e[n];t._cacheIndex=n,e[n]=t,s._cacheIndex=i,e[i]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let i=t[e];return void 0===i&&(i=new Wl(new Float32Array(2),new Float32Array(2),1,ah),i.__cacheIndex=e,t[e]=i),i}_takeBackControlInterpolant(t){const e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,s=e[n];t.__cacheIndex=n,e[n]=t,s.__cacheIndex=i,e[i]=s}clipAction(t,e,i){const n=e||this._root,s=n.uuid;let r="string"==typeof t?tc.findByName(n,t):t;const o=null!==r?r.uuid:t,a=this._actionsByClip[o];let l=null;if(void 0===i&&(i=null!==r?r.blendMode:2500),void 0!==a){const t=a.actionByRoot[s];if(void 0!==t&&t.blendMode===i)return t;l=a.knownActions[0],null===r&&(r=l._clip)}if(null===r)return null;const c=new oh(this,r,e,i);return this._bindAction(c,l),this._addInactiveAction(c,o,s),c}existingAction(t,e){const i=e||this._root,n=i.uuid,s="string"==typeof t?tc.findByName(i,t):t,r=s?s.uuid:t,o=this._actionsByClip[r];return void 0!==o&&o.actionByRoot[n]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,i=this._nActiveActions,n=this.time+=t,s=Math.sign(t),r=this._accuIndex^=1;for(let o=0;o!==i;++o)e[o]._update(n,t,s,r);const o=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)o[t].apply(r);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,i=t.uuid,n=this._actionsByClip,s=n[i];if(void 0!==s){const t=s.knownActions;for(let i=0,n=t.length;i!==n;++i){const n=t[i];this._deactivateAction(n);const s=n._cacheIndex,r=e[e.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,r._cacheIndex=s,e[s]=r,e.pop(),this._removeInactiveBindingsForAction(n)}delete n[i]}}uncacheRoot(t){const e=t.uuid,i=this._actionsByClip;for(const t in i){const n=i[t].actionByRoot[e];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[e];if(void 0!==n)for(const t in n){const e=n[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}},e.AnimationObjectGroup=class{constructor(){this.isAnimationObjectGroup=!0,this.uuid=xt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,i=arguments.length;e!==i;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,i=this._paths,n=this._parsedPaths,s=this._bindings,r=s.length;let o,a=t.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const h=arguments[c],u=h.uuid;let d=e[u];if(void 0===d){d=a++,e[u]=d,t.push(h);for(let t=0,e=r;t!==e;++t)s[t].push(new rh(h,i[t],n[t]))}else if(d<l){o=t[d];const a=--l,c=t[a];e[c.uuid]=d,t[d]=c,e[u]=a,t[a]=h;for(let t=0,e=r;t!==e;++t){const e=s[t],r=e[a];let o=e[d];e[d]=r,void 0===o&&(o=new rh(h,i[t],n[t])),e[a]=o}}else t[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_;for(let r=0,o=arguments.length;r!==o;++r){const o=arguments[r],a=o.uuid,l=e[a];if(void 0!==l&&l>=s){const r=s++,c=t[r];e[c.uuid]=l,t[l]=c,e[a]=r,t[r]=o;for(let t=0,e=n;t!==e;++t){const e=i[t],n=e[r],s=e[l];e[l]=n,e[r]=s}}}this.nCachedObjects_=s}uncache(){const t=this._objects,e=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_,r=t.length;for(let o=0,a=arguments.length;o!==a;++o){const a=arguments[o].uuid,l=e[a];if(void 0!==l)if(delete e[a],l<s){const o=--s,a=t[o],c=--r,h=t[c];e[a.uuid]=l,t[l]=a,e[h.uuid]=o,t[o]=h,t.pop();for(let t=0,e=n;t!==e;++t){const e=i[t],n=e[o],s=e[c];e[l]=n,e[o]=s,e.pop()}}else{const s=--r,o=t[s];s>0&&(e[o.uuid]=l),t[l]=o,t.pop();for(let t=0,e=n;t!==e;++t){const e=i[t];e[l]=e[s],e.pop()}}}this.nCachedObjects_=s}subscribe_(t,e){const i=this._bindingsIndicesByPath;let n=i[t];const s=this._bindings;if(void 0!==n)return s[n];const r=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,h=new Array(l);n=s.length,i[t]=n,r.push(t),o.push(e),s.push(h);for(let i=c,n=a.length;i!==n;++i){const n=a[i];h[i]=new rh(n,t,e)}return h}unsubscribe_(t){const e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){const n=this._paths,s=this._parsedPaths,r=this._bindings,o=r.length-1,a=r[o];e[t[o]]=i,r[i]=a,r.pop(),s[i]=s[o],s.pop(),n[i]=n[o],n.pop()}}},e.AnimationUtils=Vl,e.ArcCurve=ra,e.ArrayCamera=Ur,e.ArrowHelper=class extends ri{constructor(t=new ne(0,0,1),e=new ne(0,0,0),i=1,n=16776960,s=.2*i,r=.2*s){super(),this.type="ArrowHelper",void 0===Ph&&(Ph=new Di,Ph.setAttribute("position",new Ei([0,0,0,0,1,0],3)),Ih=new Ca(0,.5,1,5,1),Ih.translate(0,-.5,0)),this.position.copy(e),this.line=new Wo(Ph,new zo({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ki(Ih,new xi({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,s,r)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Lh.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Lh,e)}}setLength(t,e=.2*t,i=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}},e.Audio=Xc,e.AudioAnalyser=class{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let i=0;i<e.length;i++)t+=e[i];return t/e.length}},e.AudioContext=Oc,e.AudioListener=class extends ri{constructor(){super(),this.type="AudioListener",this.context=Oc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Vc}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Gc,Wc,qc),jc.set(0,0,-1).applyQuaternion(Wc),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Gc.x,t),e.positionY.linearRampToValueAtTime(Gc.y,t),e.positionZ.linearRampToValueAtTime(Gc.z,t),e.forwardX.linearRampToValueAtTime(jc.x,t),e.forwardY.linearRampToValueAtTime(jc.y,t),e.forwardZ.linearRampToValueAtTime(jc.z,t),e.upX.linearRampToValueAtTime(i.x,t),e.upY.linearRampToValueAtTime(i.y,t),e.upZ.linearRampToValueAtTime(i.z,t)}else e.setPosition(Gc.x,Gc.y,Gc.z),e.setOrientation(jc.x,jc.y,jc.z,i.x,i.y,i.z)}},e.AudioLoader=class extends rc{constructor(t){super(t)}load(t,e,i,n){const s=this,r=new lc(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(i){try{const t=i.slice(0);Oc.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){n?n(e):console.error(e),s.manager.itemError(t)}}),i,n)}},e.AxesHelper=class extends Xo{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new Di;i.setAttribute("position",new Ei(e,3)),i.setAttribute("color",new Ei([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(i,new zo({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,i){const n=new qt,s=this.geometry.attributes.color.array;return n.set(t),n.toArray(s,0),n.toArray(s,3),n.set(e),n.toArray(s,6),n.toArray(s,9),n.set(i),n.toArray(s,12),n.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}},e.BackSide=1,e.BasicDepthPacking=3200,e.BasicShadowMap=0,e.Bone=Ao,e.BooleanKeyframeTrack=Xl,e.Box2=class{constructor(t=new Rt(1/0,1/0),e=new Rt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=dh.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return dh.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}},e.Box3=oe,e.Box3Helper=class extends Xo{constructor(t,e=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Di;n.setIndex(new wi(i,1)),n.setAttribute("position",new Ei([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new zo({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}},e.BoxBufferGeometry=class extends $i{constructor(t,e,i,n,s,r){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(t,e,i,n,s,r)}},e.BoxGeometry=$i,e.BoxHelper=class extends Xo{constructor(t,e=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),s=new Di;s.setIndex(new wi(i,1)),s.setAttribute("position",new wi(n,3)),super(s,new zo({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Rh.setFromObject(this.object),Rh.isEmpty())return;const e=Rh.min,i=Rh.max,n=this.geometry.attributes.position,s=n.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=e.x,s[4]=i.y,s[5]=i.z,s[6]=e.x,s[7]=e.y,s[8]=i.z,s[9]=i.x,s[10]=e.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=e.z,s[15]=e.x,s[16]=i.y,s[17]=e.z,s[18]=e.x,s[19]=e.y,s[20]=e.z,s[21]=i.x,s[22]=e.y,s[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}},e.BufferAttribute=wi,e.BufferGeometry=Di,e.BufferGeometryLoader=Ic,e.ByteType=1010,e.Cache=ic,e.Camera=rn,e.CameraHelper=class extends Xo{constructor(t){const e=new Di,i=new zo({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],s=[],r={};function o(t,e){a(t),a(e)}function a(t){n.push(0,0,0),s.push(0,0,0),void 0===r[t]&&(r[t]=[]),r[t].push(n.length/3-1)}o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4"),e.setAttribute("position",new Ei(n,3)),e.setAttribute("color",new Ei(s,3)),super(e,i),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update();const l=new qt(16755200),c=new qt(16711680),h=new qt(43775),u=new qt(16777215),d=new qt(3355443);this.setColors(l,c,h,u,d)}setColors(t,e,i,n,s){const r=this.geometry.getAttribute("color");r.setXYZ(0,t.r,t.g,t.b),r.setXYZ(1,t.r,t.g,t.b),r.setXYZ(2,t.r,t.g,t.b),r.setXYZ(3,t.r,t.g,t.b),r.setXYZ(4,t.r,t.g,t.b),r.setXYZ(5,t.r,t.g,t.b),r.setXYZ(6,t.r,t.g,t.b),r.setXYZ(7,t.r,t.g,t.b),r.setXYZ(8,t.r,t.g,t.b),r.setXYZ(9,t.r,t.g,t.b),r.setXYZ(10,t.r,t.g,t.b),r.setXYZ(11,t.r,t.g,t.b),r.setXYZ(12,t.r,t.g,t.b),r.setXYZ(13,t.r,t.g,t.b),r.setXYZ(14,t.r,t.g,t.b),r.setXYZ(15,t.r,t.g,t.b),r.setXYZ(16,t.r,t.g,t.b),r.setXYZ(17,t.r,t.g,t.b),r.setXYZ(18,t.r,t.g,t.b),r.setXYZ(19,t.r,t.g,t.b),r.setXYZ(20,t.r,t.g,t.b),r.setXYZ(21,t.r,t.g,t.b),r.setXYZ(22,t.r,t.g,t.b),r.setXYZ(23,t.r,t.g,t.b),r.setXYZ(24,e.r,e.g,e.b),r.setXYZ(25,e.r,e.g,e.b),r.setXYZ(26,e.r,e.g,e.b),r.setXYZ(27,e.r,e.g,e.b),r.setXYZ(28,e.r,e.g,e.b),r.setXYZ(29,e.r,e.g,e.b),r.setXYZ(30,e.r,e.g,e.b),r.setXYZ(31,e.r,e.g,e.b),r.setXYZ(32,i.r,i.g,i.b),r.setXYZ(33,i.r,i.g,i.b),r.setXYZ(34,i.r,i.g,i.b),r.setXYZ(35,i.r,i.g,i.b),r.setXYZ(36,i.r,i.g,i.b),r.setXYZ(37,i.r,i.g,i.b),r.setXYZ(38,n.r,n.g,n.b),r.setXYZ(39,n.r,n.g,n.b),r.setXYZ(40,s.r,s.g,s.b),r.setXYZ(41,s.r,s.g,s.b),r.setXYZ(42,s.r,s.g,s.b),r.setXYZ(43,s.r,s.g,s.b),r.setXYZ(44,s.r,s.g,s.b),r.setXYZ(45,s.r,s.g,s.b),r.setXYZ(46,s.r,s.g,s.b),r.setXYZ(47,s.r,s.g,s.b),r.setXYZ(48,s.r,s.g,s.b),r.setXYZ(49,s.r,s.g,s.b),r.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap;Ah.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Ch("c",e,t,Ah,0,0,-1),Ch("t",e,t,Ah,0,0,1),Ch("n1",e,t,Ah,-1,-1,-1),Ch("n2",e,t,Ah,1,-1,-1),Ch("n3",e,t,Ah,-1,1,-1),Ch("n4",e,t,Ah,1,1,-1),Ch("f1",e,t,Ah,-1,-1,1),Ch("f2",e,t,Ah,1,-1,1),Ch("f3",e,t,Ah,-1,1,1),Ch("f4",e,t,Ah,1,1,1),Ch("u1",e,t,Ah,.7,1.1,-1),Ch("u2",e,t,Ah,-.7,1.1,-1),Ch("u3",e,t,Ah,0,2,-1),Ch("cf1",e,t,Ah,-1,0,1),Ch("cf2",e,t,Ah,1,0,1),Ch("cf3",e,t,Ah,0,-1,1),Ch("cf4",e,t,Ah,0,1,1),Ch("cn1",e,t,Ah,-1,0,-1),Ch("cn2",e,t,Ah,1,0,-1),Ch("cn3",e,t,Ah,0,-1,-1),Ch("cn4",e,t,Ah,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},e.CanvasTexture=class extends Kt{constructor(t,e,i,n,s,r,o,a,l){super(t,e,i,n,s,r,o,a,l),this.isCanvasTexture=!0,this.needsUpdate=!0}},e.CapsuleBufferGeometry=class extends Ta{constructor(t,e,i,n){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(t,e,i,n)}},e.CapsuleGeometry=Ta,e.CatmullRomCurve3=ua,e.CineonToneMapping=3,e.CircleBufferGeometry=class extends Aa{constructor(t,e,i,n){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(t,e,i,n)}},e.CircleGeometry=Aa,e.ClampToEdgeWrapping=u,e.Clock=Vc,e.Color=qt,e.ColorKeyframeTrack=Yl,e.ColorManagement=zt,e.CompressedTexture=ia,e.CompressedTextureLoader=class extends rc{constructor(t){super(t)}load(t,e,i,n){const s=this,r=[],o=new ia,a=new lc(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(s.withCredentials);let l=0;function c(c){a.load(t[c],(function(t){const i=s.parse(t,!0);r[c]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},l+=1,6===l&&(1===i.mipmapCount&&(o.minFilter=g),o.image=r,o.format=i.format,o.needsUpdate=!0,e&&e(o))}),i,n)}if(Array.isArray(t))for(let e=0,i=t.length;e<i;++e)c(e);else a.load(t,(function(t){const i=s.parse(t,!0);if(i.isCubemap){const t=i.mipmaps.length/i.mipmapCount;for(let e=0;e<t;e++){r[e]={mipmaps:[]};for(let t=0;t<i.mipmapCount;t++)r[e].mipmaps.push(i.mipmaps[e*i.mipmapCount+t]),r[e].format=i.format,r[e].width=i.width,r[e].height=i.height}o.image=r}else o.image.width=i.width,o.image.height=i.height,o.mipmaps=i.mipmaps;1===i.mipmapCount&&(o.minFilter=g),o.format=i.format,o.needsUpdate=!0,e&&e(o)}),i,n);return o}},e.ConeBufferGeometry=class extends Ra{constructor(t,e,i,n,s,r,o){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(t,e,i,n,s,r,o)}},e.ConeGeometry=Ra,e.CubeCamera=ln,e.CubeReflectionMapping=r,e.CubeRefractionMapping=o,e.CubeTexture=cn,e.CubeTextureLoader=class extends rc{constructor(t){super(t)}load(t,e,i,n){const s=new cn,r=new cc(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let o=0;function a(i){r.load(t[i],(function(t){s.images[i]=t,o++,6===o&&(s.needsUpdate=!0,e&&e(s))}),void 0,n)}for(let e=0;e<t.length;++e)a(e);return s}},e.CubeUVReflectionMapping=c,e.CubicBezierCurve=fa,e.CubicBezierCurve3=ga,e.CubicInterpolant=Gl,e.CullFaceBack=1,e.CullFaceFront=2,e.CullFaceFrontBack=3,e.CullFaceNone=0,e.Curve=na,e.CurvePath=Ma,e.CustomBlending=5,e.CustomToneMapping=5,e.CylinderBufferGeometry=class extends Ca{constructor(t,e,i,n,s,r,o,a){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(t,e,i,n,s,r,o,a)}},e.CylinderGeometry=Ca,e.Cylindrical=class{constructor(t=1,e=0,i=0){return this.radius=t,this.theta=e,this.y=i,this}set(t,e,i){return this.radius=t,this.theta=e,this.y=i,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+i*i),this.theta=Math.atan2(t,i),this.y=e,this}clone(){return(new this.constructor).copy(this)}},e.Data3DTexture=ee,e.DataArrayTexture=te,e.DataTexture=Co,e.DataTexture2DArray=class extends te{constructor(t,e,i,n){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(t,e,i,n)}},e.DataTexture3D=class extends ee{constructor(t,e,i,n){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(t,e,i,n)}},e.DataTextureLoader=class extends rc{constructor(t){super(t)}load(t,e,i,n){const s=this,r=new Co,o=new lc(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(s.withCredentials),o.load(t,(function(t){const i=s.parse(t);i&&(void 0!==i.image?r.image=i.image:void 0!==i.data&&(r.image.width=i.width,r.image.height=i.height,r.image.data=i.data),r.wrapS=void 0!==i.wrapS?i.wrapS:u,r.wrapT=void 0!==i.wrapT?i.wrapT:u,r.magFilter=void 0!==i.magFilter?i.magFilter:g,r.minFilter=void 0!==i.minFilter?i.minFilter:g,r.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.encoding&&(r.encoding=i.encoding),void 0!==i.flipY&&(r.flipY=i.flipY),void 0!==i.format&&(r.format=i.format),void 0!==i.type&&(r.type=i.type),void 0!==i.mipmaps&&(r.mipmaps=i.mipmaps,r.minFilter=v),1===i.mipmapCount&&(r.minFilter=g),void 0!==i.generateMipmaps&&(r.generateMipmaps=i.generateMipmaps),r.needsUpdate=!0,e&&e(r,i))}),i,n),r}},e.DataUtils=Bh,e.DecrementStencilOp=7683,e.DecrementWrapStencilOp=34056,e.DefaultLoadingManager=sc,e.DepthFormat=T,e.DepthStencilFormat=A,e.DepthTexture=Gr,e.DirectionalLight=Sc,e.DirectionalLightHelper=class extends ri{constructor(t,e,i){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);let n=new Di;n.setAttribute("position",new Ei([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const s=new zo({fog:!1,toneMapped:!1});this.lightPlane=new Wo(n,s),this.add(this.lightPlane),n=new Di,n.setAttribute("position",new Ei([0,0,0,0,0,1],3)),this.targetLine=new Wo(n,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Mh.setFromMatrixPosition(this.light.matrixWorld),Sh.setFromMatrixPosition(this.light.target.matrixWorld),Eh.subVectors(Sh,Mh),this.lightPlane.lookAt(Sh),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Sh),this.targetLine.scale.z=Eh.length()}},e.DiscreteInterpolant=ql,e.DodecahedronBufferGeometry=class extends Pa{constructor(t,e){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(t,e)}},e.DodecahedronGeometry=Pa,e.DoubleSide=2,e.DstAlphaFactor=206,e.DstColorFactor=208,e.DynamicCopyUsage=35050,e.DynamicDrawUsage=35048,e.DynamicReadUsage=35049,e.EdgesGeometry=Fa,e.EllipseCurve=sa,e.EqualDepth=4,e.EqualStencilFunc=514,e.EquirectangularReflectionMapping=a,e.EquirectangularRefractionMapping=l,e.Euler=We,e.EventDispatcher=mt,e.ExtrudeBufferGeometry=class extends ul{constructor(t,e){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(t,e)}},e.ExtrudeGeometry=ul,e.FileLoader=lc,e.Float16BufferAttribute=class extends wi{constructor(t,e,i){super(new Uint16Array(t),e,i),this.isFloat16BufferAttribute=!0}},e.Float32BufferAttribute=Ei,e.Float64BufferAttribute=class extends wi{constructor(t,e,i){super(new Float64Array(t),e,i)}},e.FloatType=w,e.Fog=Jr,e.FogExp2=Zr,e.FramebufferTexture=class extends Kt{constructor(t,e,i){super({width:t,height:e}),this.isFramebufferTexture=!0,this.format=i,this.magFilter=p,this.minFilter=p,this.generateMipmaps=!1,this.needsUpdate=!0}},e.FrontSide=0,e.Frustum=yn,e.GLBufferAttribute=class{constructor(t,e,i,n,s){this.isGLBufferAttribute=!0,this.buffer=t,this.type=e,this.itemSize=i,this.elementSize=n,this.count=s,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}},e.GLSL1="100",e.GLSL3=dt,e.GreaterDepth=6,e.GreaterEqualDepth=5,e.GreaterEqualStencilFunc=518,e.GreaterStencilFunc=516,e.GridHelper=class extends Xo{constructor(t=10,e=10,i=4473924,n=8947848){i=new qt(i),n=new qt(n);const s=e/2,r=t/e,o=t/2,a=[],l=[];for(let t=0,c=0,h=-o;t<=e;t++,h+=r){a.push(-o,0,h,o,0,h),a.push(h,0,-o,h,0,o);const e=t===s?i:n;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new Di;c.setAttribute("position",new Ei(a,3)),c.setAttribute("color",new Ei(l,3)),super(c,new zo({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},e.Group=Hr,e.HalfFloatType=M,e.HemisphereLight=uc,e.HemisphereLightHelper=class extends ri{constructor(t,e,i){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const n=new ml(e);n.rotateY(.5*Math.PI),this.material=new xi({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const s=n.getAttribute("position"),r=new Float32Array(3*s.count);n.setAttribute("color",new wi(r,3)),this.add(new Ki(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");bh.copy(this.light.color),wh.copy(this.light.groundColor);for(let t=0,i=e.count;t<i;t++){const n=t<i/2?bh:wh;e.setXYZ(t,n.r,n.g,n.b)}e.needsUpdate=!0}t.lookAt(_h.setFromMatrixPosition(this.light.matrixWorld).negate())}},e.HemisphereLightProbe=class extends Cc{constructor(t,e,i=1){super(void 0,i),this.isHemisphereLightProbe=!0;const n=(new qt).set(t),s=(new qt).set(e),r=new ne(n.r,n.g,n.b),o=new ne(s.r,s.g,s.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(r).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(r).sub(o).multiplyScalar(l)}},e.IcosahedronBufferGeometry=class extends pl{constructor(t,e){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(t,e)}},e.IcosahedronGeometry=pl,e.ImageBitmapLoader=class extends rc{constructor(t){super(t),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=ic.get(t);if(void 0!==r)return s.manager.itemStart(t),setTimeout((function(){e&&e(r),s.manager.itemEnd(t)}),0),r;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(t,o).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(s.options,{colorSpaceConversion:"none"}))})).then((function(i){ic.add(t,i),e&&e(i),s.manager.itemEnd(t)})).catch((function(e){n&&n(e),s.manager.itemError(t),s.manager.itemEnd(t)})),s.manager.itemStart(t)}},e.ImageLoader=cc,e.ImageUtils=Xt,e.ImmediateRenderObject=function(){console.error("THREE.ImmediateRenderObject has been removed.")},e.IncrementStencilOp=7682,e.IncrementWrapStencilOp=34055,e.InstancedBufferAttribute=Io,e.InstancedBufferGeometry=Pc,e.InstancedInterleavedBuffer=class extends Qr{constructor(t,e,i=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}},e.InstancedMesh=Oo,e.Int16BufferAttribute=class extends wi{constructor(t,e,i){super(new Int16Array(t),e,i)}},e.Int32BufferAttribute=class extends wi{constructor(t,e,i){super(new Int32Array(t),e,i)}},e.Int8BufferAttribute=class extends wi{constructor(t,e,i){super(new Int8Array(t),e,i)}},e.IntType=1013,e.InterleavedBuffer=Qr,e.InterleavedBufferAttribute=to,e.Interpolant=kl,e.InterpolateDiscrete=$,e.InterpolateLinear=tt,e.InterpolateSmooth=et,e.InvertStencilOp=5386,e.KeepStencilOp=ht,e.KeyframeTrack=jl,e.LOD=_o,e.LatheBufferGeometry=class extends Ea{constructor(t,e,i,n){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(t,e,i,n)}},e.LatheGeometry=Ea,e.Layers=qe,e.LessDepth=2,e.LessEqualDepth=3,e.LessEqualStencilFunc=515,e.LessStencilFunc=513,e.Light=hc,e.LightProbe=Cc,e.Line=Wo,e.Line3=class{constructor(t=new ne,e=new ne){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){ph.subVectors(t,this.start),mh.subVectors(this.end,this.start);const i=mh.dot(mh);let n=mh.dot(ph)/i;return e&&(n=_t(n,0,1)),n}closestPointToPoint(t,e,i){const n=this.closestPointToPointParameter(t,e);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}},e.LineBasicMaterial=zo,e.LineCurve=ya,e.LineCurve3=va,e.LineDashedMaterial=Nl,e.LineLoop=Yo,e.LineSegments=Xo,e.LinearEncoding=ot,e.LinearFilter=g,e.LinearInterpolant=Wl,e.LinearMipMapLinearFilter=1008,e.LinearMipMapNearestFilter=1007,e.LinearMipmapLinearFilter=v,e.LinearMipmapNearestFilter=y,e.LinearSRGBColorSpace=ct,e.LinearToneMapping=1,e.Loader=rc,e.LoaderUtils=Lc,e.LoadingManager=nc,e.LoopOnce=2200,e.LoopPingPong=2202,e.LoopRepeat=2201,e.LuminanceAlphaFormat=1025,e.LuminanceFormat=1024,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e.Material=vi,e.MaterialLoader=Rc,e.MathUtils=Ct,e.Matrix3=Lt,e.Matrix4=Ne,e.MaxEquation=104,e.Mesh=Ki,e.MeshBasicMaterial=xi,e.MeshDepthMaterial=Dr,e.MeshDistanceMaterial=Nr,e.MeshLambertMaterial=Il,e.MeshMatcapMaterial=Dl,e.MeshNormalMaterial=Pl,e.MeshPhongMaterial=Rl,e.MeshPhysicalMaterial=Cl,e.MeshStandardMaterial=Al,e.MeshToonMaterial=Ll,e.MinEquation=103,e.MirroredRepeatWrapping=d,e.MixOperation=1,e.MultiplyBlending=4,e.MultiplyOperation=0,e.NearestFilter=p,e.NearestMipMapLinearFilter=1005,e.NearestMipMapNearestFilter=1004,e.NearestMipmapLinearFilter=f,e.NearestMipmapNearestFilter=m,e.NeverDepth=0,e.NeverStencilFunc=512,e.NoBlending=0,e.NoColorSpace="",e.NoToneMapping=0,e.NormalAnimationBlendMode=2500,e.NormalBlending=1,e.NotEqualDepth=7,e.NotEqualStencilFunc=517,e.NumberKeyframeTrack=Zl,e.Object3D=ri,e.ObjectLoader=class extends rc{constructor(t){super(t)}load(t,e,i,n){const s=this,r=""===this.path?Lc.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||r;const o=new lc(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(i){let r=null;try{r=JSON.parse(i)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const o=r.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?s.parse(r,e):console.error("THREE.ObjectLoader: Can't load "+t)}),i,n)}async loadAsync(t,e){const i=""===this.path?Lc.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const n=new lc(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials);const s=await n.loadAsync(t,e),r=JSON.parse(s),o=r.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(r)}parse(t,e){const i=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,n),r=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),o=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,o),l=this.parseObject(t.object,s,a,o,i),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),void 0!==e){let t=!1;for(const e in r)if(r[e].data instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),n=this.parseGeometries(t.geometries,i),s=await this.parseImagesAsync(t.images),r=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,r),a=this.parseObject(t.object,n,o,r,e),l=this.parseSkeletons(t.skeletons,a);return this.bindSkeletons(a,l),a}parseShapes(t){const e={};if(void 0!==t)for(let i=0,n=t.length;i<n;i++){const n=(new Oa).fromJSON(t[i]);e[n.uuid]=n}return e}parseSkeletons(t,e){const i={},n={};if(e.traverse((function(t){t.isBone&&(n[t.uuid]=t)})),void 0!==t)for(let e=0,s=t.length;e<s;e++){const s=(new Po).fromJSON(t[e],n);i[s.uuid]=s}return i}parseGeometries(t,e){const i={};if(void 0!==t){const n=new Ic;for(let s=0,r=t.length;s<r;s++){let r;const o=t[s];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":r=n.parse(o);break;default:o.type in Sl?r=Sl[o.type].fromJSON(o,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}r.uuid=o.uuid,void 0!==o.name&&(r.name=o.name),!0===r.isBufferGeometry&&void 0!==o.userData&&(r.userData=o.userData),i[o.uuid]=r}}return i}parseMaterials(t,e){const i={},n={};if(void 0!==t){const s=new Rc;s.setTextures(e);for(let e=0,r=t.length;e<r;e++){const r=t[e];void 0===i[r.uuid]&&(i[r.uuid]=s.parse(r)),n[r.uuid]=i[r.uuid]}}return n}parseAnimations(t){const e={};if(void 0!==t)for(let i=0;i<t.length;i++){const n=t[i],s=tc.parse(n);e[s.uuid]=s}return e}parseImages(t,e){const i=this,n={};let s;function r(t){if("string"==typeof t){const e=t;return function(t){return i.manager.itemStart(t),s.load(t,(function(){i.manager.itemEnd(t)}),void 0,(function(){i.manager.itemError(t),i.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:i.resourcePath+e)}return t.data?{data:Dt(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const i=new nc(e);s=new cc(i),s.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],s=i.url;if(Array.isArray(s)){const t=[];for(let e=0,i=s.length;e<i;e++){const i=r(s[e]);null!==i&&(i instanceof HTMLImageElement?t.push(i):t.push(new Co(i.data,i.width,i.height)))}n[i.uuid]=new Yt(t)}else{const t=r(i.url);n[i.uuid]=new Yt(t)}}}return n}async parseImagesAsync(t){const e=this,i={};let n;async function s(t){if("string"==typeof t){const i=t,s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i)?i:e.resourcePath+i;return await n.loadAsync(s)}return t.data?{data:Dt(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){n=new cc(this.manager),n.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],r=n.url;if(Array.isArray(r)){const t=[];for(let e=0,i=r.length;e<i;e++){const i=r[e],n=await s(i);null!==n&&(n instanceof HTMLImageElement?t.push(n):t.push(new Co(n.data,n.width,n.height)))}i[n.uuid]=new Yt(t)}else{const t=await s(n.url);i[n.uuid]=new Yt(t)}}}return i}parseTextures(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const n={};if(void 0!==t)for(let s=0,r=t.length;s<r;s++){const r=t[s];void 0===r.image&&console.warn('THREE.ObjectLoader: No "image" specified for',r.uuid),void 0===e[r.image]&&console.warn("THREE.ObjectLoader: Undefined image",r.image);const o=e[r.image],a=o.data;let l;Array.isArray(a)?(l=new cn,6===a.length&&(l.needsUpdate=!0)):(l=a&&a.data?new Co:new Kt,a&&(l.needsUpdate=!0)),l.source=o,l.uuid=r.uuid,void 0!==r.name&&(l.name=r.name),void 0!==r.mapping&&(l.mapping=i(r.mapping,Dc)),void 0!==r.offset&&l.offset.fromArray(r.offset),void 0!==r.repeat&&l.repeat.fromArray(r.repeat),void 0!==r.center&&l.center.fromArray(r.center),void 0!==r.rotation&&(l.rotation=r.rotation),void 0!==r.wrap&&(l.wrapS=i(r.wrap[0],Nc),l.wrapT=i(r.wrap[1],Nc)),void 0!==r.format&&(l.format=r.format),void 0!==r.type&&(l.type=r.type),void 0!==r.encoding&&(l.encoding=r.encoding),void 0!==r.minFilter&&(l.minFilter=i(r.minFilter,Bc)),void 0!==r.magFilter&&(l.magFilter=i(r.magFilter,Bc)),void 0!==r.anisotropy&&(l.anisotropy=r.anisotropy),void 0!==r.flipY&&(l.flipY=r.flipY),void 0!==r.premultiplyAlpha&&(l.premultiplyAlpha=r.premultiplyAlpha),void 0!==r.unpackAlignment&&(l.unpackAlignment=r.unpackAlignment),void 0!==r.userData&&(l.userData=r.userData),n[r.uuid]=l}return n}parseObject(t,e,i,n,s){let r,o,a;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let n=0,s=t.length;n<s;n++){const s=t[n];void 0===i[s]&&console.warn("THREE.ObjectLoader: Undefined material",s),e.push(i[s])}return e}return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),i[t]}}function h(t){return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),n[t]}switch(t.type){case"Scene":r=new Kr,void 0!==t.background&&(Number.isInteger(t.background)?r.background=new qt(t.background):r.background=h(t.background)),void 0!==t.environment&&(r.environment=h(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?r.fog=new Jr(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(r.fog=new Zr(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":r=new on(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(r.focus=t.focus),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.filmGauge&&(r.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(r.filmOffset=t.filmOffset),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"OrthographicCamera":r=new Ln(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"AmbientLight":r=new Ec(t.color,t.intensity);break;case"DirectionalLight":r=new Sc(t.color,t.intensity);break;case"PointLight":r=new wc(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":r=new Tc(t.color,t.intensity,t.width,t.height);break;case"SpotLight":r=new yc(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":r=new uc(t.color,t.groundColor,t.intensity);break;case"LightProbe":r=(new Cc).fromJSON(t);break;case"SkinnedMesh":o=l(t.geometry),a=c(t.material),r=new To(o,a),void 0!==t.bindMode&&(r.bindMode=t.bindMode),void 0!==t.bindMatrix&&r.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(r.skeleton=t.skeleton);break;case"Mesh":o=l(t.geometry),a=c(t.material),r=new Ki(o,a);break;case"InstancedMesh":o=l(t.geometry),a=c(t.material);const e=t.count,i=t.instanceMatrix,n=t.instanceColor;r=new Oo(o,a,e),r.instanceMatrix=new Io(new Float32Array(i.array),16),void 0!==n&&(r.instanceColor=new Io(new Float32Array(n.array),n.itemSize));break;case"LOD":r=new _o;break;case"Line":r=new Wo(l(t.geometry),c(t.material));break;case"LineLoop":r=new Yo(l(t.geometry),c(t.material));break;case"LineSegments":r=new Xo(l(t.geometry),c(t.material));break;case"PointCloud":case"Points":r=new ta(l(t.geometry),c(t.material));break;case"Sprite":r=new go(c(t.material));break;case"Group":r=new Hr;break;case"Bone":r=new Ao;break;default:r=new ri}if(r.uuid=t.uuid,void 0!==t.name&&(r.name=t.name),void 0!==t.matrix?(r.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(r.matrixAutoUpdate=t.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==t.position&&r.position.fromArray(t.position),void 0!==t.rotation&&r.rotation.fromArray(t.rotation),void 0!==t.quaternion&&r.quaternion.fromArray(t.quaternion),void 0!==t.scale&&r.scale.fromArray(t.scale)),void 0!==t.castShadow&&(r.castShadow=t.castShadow),void 0!==t.receiveShadow&&(r.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(r.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(r.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(r.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&r.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(r.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.frustumCulled&&(r.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(r.renderOrder=t.renderOrder),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.layers&&(r.layers.mask=t.layers),void 0!==t.children){const o=t.children;for(let t=0;t<o.length;t++)r.add(this.parseObject(o[t],e,i,n,s))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const i=e[t];r.animations.push(s[i])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(r.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const i=e[t],n=r.getObjectByProperty("uuid",i.object);void 0!==n&&r.addLevel(n,i.distance)}}return r}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const i=e[t.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(i,t.bindMatrix)}}))}},e.ObjectSpaceNormalMap=1,e.OctahedronBufferGeometry=class extends ml{constructor(t,e){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(t,e)}},e.OctahedronGeometry=ml,e.OneFactor=201,e.OneMinusDstAlphaFactor=207,e.OneMinusDstColorFactor=209,e.OneMinusSrcAlphaFactor=205,e.OneMinusSrcColorFactor=203,e.OrthographicCamera=Ln,e.PCFShadowMap=1,e.PCFSoftShadowMap=2,e.PMREMGenerator=zn,e.Path=Sa,e.PerspectiveCamera=on,e.Plane=mn,e.PlaneBufferGeometry=class extends _n{constructor(t,e,i,n){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(t,e,i,n)}},e.PlaneGeometry=_n,e.PlaneHelper=class extends Wo{constructor(t,e=1,i=16776960){const n=i,s=new Di;s.setAttribute("position",new Ei([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),s.computeBoundingSphere(),super(s,new zo({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const r=new Di;r.setAttribute("position",new Ei([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),r.computeBoundingSphere(),this.add(new Ki(r,new xi({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}},e.PointLight=wc,e.PointLightHelper=class extends Ki{constructor(t,e,i){super(new yl(e,4,2),new xi({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},e.Points=ta,e.PointsMaterial=Zo,e.PolarGridHelper=class extends Xo{constructor(t=10,e=16,i=8,n=64,s=4473924,r=8947848){s=new qt(s),r=new qt(r);const o=[],a=[];if(e>1)for(let i=0;i<e;i++){const n=i/e*(2*Math.PI),l=Math.sin(n)*t,c=Math.cos(n)*t;o.push(0,0,0),o.push(l,0,c);const h=1&i?s:r;a.push(h.r,h.g,h.b),a.push(h.r,h.g,h.b)}for(let e=0;e<i;e++){const l=1&e?s:r,c=t-t/i*e;for(let t=0;t<n;t++){let e=t/n*(2*Math.PI),i=Math.sin(e)*c,s=Math.cos(e)*c;o.push(i,0,s),a.push(l.r,l.g,l.b),e=(t+1)/n*(2*Math.PI),i=Math.sin(e)*c,s=Math.cos(e)*c,o.push(i,0,s),a.push(l.r,l.g,l.b)}}const l=new Di;l.setAttribute("position",new Ei(o,3)),l.setAttribute("color",new Ei(a,3)),super(l,new zo({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},e.PolyhedronBufferGeometry=class extends La{constructor(t,e,i,n){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(t,e,i,n)}},e.PolyhedronGeometry=La,e.PositionalAudio=class extends Xc{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,i){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=i,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Yc,Zc,Jc),Kc.set(0,0,1).applyQuaternion(Zc);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Yc.x,t),e.positionY.linearRampToValueAtTime(Yc.y,t),e.positionZ.linearRampToValueAtTime(Yc.z,t),e.orientationX.linearRampToValueAtTime(Kc.x,t),e.orientationY.linearRampToValueAtTime(Kc.y,t),e.orientationZ.linearRampToValueAtTime(Kc.z,t)}else e.setPosition(Yc.x,Yc.y,Yc.z),e.setOrientation(Kc.x,Kc.y,Kc.z)}},e.PropertyBinding=rh,e.PropertyMixer=Qc,e.QuadraticBezierCurve=xa,e.QuadraticBezierCurve3=_a,e.Quaternion=ie,e.QuaternionKeyframeTrack=Kl,e.QuaternionLinearInterpolant=Jl,e.REVISION=i,e.RGBADepthPacking=3201,e.RGBAFormat=E,e.RGBAIntegerFormat=1033,e.RGBA_ASTC_10x10_Format=Z,e.RGBA_ASTC_10x5_Format=j,e.RGBA_ASTC_10x6_Format=X,e.RGBA_ASTC_10x8_Format=Y,e.RGBA_ASTC_12x10_Format=J,e.RGBA_ASTC_12x12_Format=K,e.RGBA_ASTC_4x4_Format=z,e.RGBA_ASTC_5x4_Format=U,e.RGBA_ASTC_5x5_Format=H,e.RGBA_ASTC_6x5_Format=V,e.RGBA_ASTC_6x6_Format=k,e.RGBA_ASTC_8x5_Format=G,e.RGBA_ASTC_8x6_Format=W,e.RGBA_ASTC_8x8_Format=q,e.RGBA_BPTC_Format=Q,e.RGBA_ETC2_EAC_Format=O,e.RGBA_PVRTC_2BPPV1_Format=B,e.RGBA_PVRTC_4BPPV1_Format=N,e.RGBA_S3TC_DXT1_Format=R,e.RGBA_S3TC_DXT3_Format=L,e.RGBA_S3TC_DXT5_Format=P,e.RGBFormat=1022,e.RGB_ETC1_Format=36196,e.RGB_ETC2_Format=F,e.RGB_PVRTC_2BPPV1_Format=D,e.RGB_PVRTC_4BPPV1_Format=I,e.RGB_S3TC_DXT1_Format=C,e.RGFormat=1030,e.RGIntegerFormat=1031,e.RawShaderMaterial=Tl,e.Ray=De,e.Raycaster=class{constructor(t,e,i=0,n=1/0){this.ray=new De(t,e),this.near=i,this.far=n,this.camera=null,this.layers=new qe,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,i=[]){return uh(t,this,i,e),i.sort(hh),i}intersectObjects(t,e=!0,i=[]){for(let n=0,s=t.length;n<s;n++)uh(t[n],this,i,e);return i.sort(hh),i}},e.RectAreaLight=Tc,e.RedFormat=1028,e.RedIntegerFormat=1029,e.ReinhardToneMapping=2,e.RepeatWrapping=h,e.ReplaceStencilOp=7681,e.ReverseSubtractEquation=102,e.RingBufferGeometry=class extends fl{constructor(t,e,i,n,s,r){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(t,e,i,n,s,r)}},e.RingGeometry=fl,e.SRGBColorSpace=lt,e.Scene=Kr,e.ShaderChunk=bn,e.ShaderLib=Mn,e.ShaderMaterial=sn,e.ShadowMaterial=El,e.Shape=Oa,e.ShapeBufferGeometry=class extends gl{constructor(t,e){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(t,e)}},e.ShapeGeometry=gl,e.ShapePath=class{constructor(){this.type="ShapePath",this.color=new qt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Sa,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,i,n){return this.currentPath.quadraticCurveTo(t,e,i,n),this}bezierCurveTo(t,e,i,n,s,r){return this.currentPath.bezierCurveTo(t,e,i,n,s,r),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t,e){const i=e.length;let n=!1;for(let s=i-1,r=0;r<i;s=r++){let i=e[s],o=e[r],a=o.x-i.x,l=o.y-i.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(i=e[r],a=-a,o=e[s],l=-l),t.y<i.y||t.y>o.y)continue;if(t.y===i.y){if(t.x===i.x)return!0}else{const e=l*(t.x-i.x)-a*(t.y-i.y);if(0===e)return!0;if(e<0)continue;n=!n}}else{if(t.y!==i.y)continue;if(o.x<=t.x&&t.x<=i.x||i.x<=t.x&&t.x<=o.x)return!0}}return n}const i=ll.isClockWise,n=this.subPaths;if(0===n.length)return[];let s,r,o;const a=[];if(1===n.length)return r=n[0],o=new Oa,o.curves=r.curves,a.push(o),a;let l=!i(n[0].getPoints());l=t?!l:l;const c=[],h=[];let u,d,p=[],m=0;h[m]=void 0,p[m]=[];for(let e=0,o=n.length;e<o;e++)r=n[e],u=r.getPoints(),s=i(u),s=t?!s:s,s?(!l&&h[m]&&m++,h[m]={s:new Oa,p:u},h[m].s.curves=r.curves,l&&m++,p[m]=[]):p[m].push({h:r,p:u[0]});if(!h[0])return function(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i],s=new Oa;s.curves=n.curves,e.push(s)}return e}(n);if(h.length>1){let t=!1,i=0;for(let t=0,e=h.length;t<e;t++)c[t]=[];for(let n=0,s=h.length;n<s;n++){const s=p[n];for(let r=0;r<s.length;r++){const o=s[r];let a=!0;for(let s=0;s<h.length;s++)e(o.p,h[s].p)&&(n!==s&&i++,a?(a=!1,c[s].push(o)):t=!0);a&&c[n].push(o)}}i>0&&!1===t&&(p=c)}for(let t=0,e=h.length;t<e;t++){o=h[t].s,a.push(o),d=p[t];for(let t=0,e=d.length;t<e;t++)o.holes.push(d[t].h)}return a}},e.ShapeUtils=ll,e.ShortType=1011,e.Skeleton=Po,e.SkeletonHelper=class extends Xo{constructor(t){const e=xh(t),i=new Di,n=[],s=[],r=new qt(0,0,1),o=new qt(0,1,0);for(let t=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),s.push(r.r,r.g,r.b),s.push(o.r,o.g,o.b))}i.setAttribute("position",new Ei(n,3)),i.setAttribute("color",new Ei(s,3)),super(i,new zo({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,i=this.geometry,n=i.getAttribute("position");vh.copy(this.root.matrixWorld).invert();for(let t=0,i=0;t<e.length;t++){const s=e[t];s.parent&&s.parent.isBone&&(yh.multiplyMatrices(vh,s.matrixWorld),gh.setFromMatrixPosition(yh),n.setXYZ(i,gh.x,gh.y,gh.z),yh.multiplyMatrices(vh,s.parent.matrixWorld),gh.setFromMatrixPosition(yh),n.setXYZ(i+1,gh.x,gh.y,gh.z),i+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}},e.SkinnedMesh=To,e.Source=Yt,e.Sphere=Ee,e.SphereBufferGeometry=class extends yl{constructor(t,e,i,n,s,r,o){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(t,e,i,n,s,r,o)}},e.SphereGeometry=yl,e.Spherical=class{constructor(t=1,e=0,i=0){return this.radius=t,this.phi=e,this.theta=i,this}set(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(_t(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},e.SphericalHarmonics3=Ac,e.SplineCurve=ba,e.SpotLight=yc,e.SpotLightHelper=class extends ri{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const i=new Di,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,i=32;t<i;t++,e++){const s=t/i*Math.PI*2,r=e/i*Math.PI*2;n.push(Math.cos(s),Math.sin(s),1,Math.cos(r),Math.sin(r),1)}i.setAttribute("position",new Ei(n,3));const s=new zo({fog:!1,toneMapped:!1});this.cone=new Xo(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),fh.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(fh),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},e.Sprite=go,e.SpriteMaterial=eo,e.SrcAlphaFactor=204,e.SrcAlphaSaturateFactor=210,e.SrcColorFactor=202,e.StaticCopyUsage=35046,e.StaticDrawUsage=ut,e.StaticReadUsage=35045,e.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new on,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new on,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Hc.copy(t.projectionMatrix);const i=e.eyeSep/2,n=i*e.near/e.focus,s=e.near*Math.tan(yt*e.fov*.5)/e.zoom;let r,o;Uc.elements[12]=-i,zc.elements[12]=i,r=-s*e.aspect+n,o=s*e.aspect+n,Hc.elements[0]=2*e.near/(o-r),Hc.elements[8]=(o+r)/(o-r),this.cameraL.projectionMatrix.copy(Hc),r=-s*e.aspect-n,o=s*e.aspect-n,Hc.elements[0]=2*e.near/(o-r),Hc.elements[8]=(o+r)/(o-r),this.cameraR.projectionMatrix.copy(Hc)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Uc),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(zc)}},e.StreamCopyUsage=35042,e.StreamDrawUsage=35040,e.StreamReadUsage=35041,e.StringKeyframeTrack=Ql,e.SubtractEquation=101,e.SubtractiveBlending=3,e.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e.TangentSpaceNormalMap=0,e.TetrahedronBufferGeometry=class extends vl{constructor(t,e){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(t,e)}},e.TetrahedronGeometry=vl,e.Texture=Kt,e.TextureLoader=class extends rc{constructor(t){super(t)}load(t,e,i,n){const s=new Kt,r=new cc(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,(function(t){s.image=t,s.needsUpdate=!0,void 0!==e&&e(s)}),i,n),s}},e.TorusBufferGeometry=class extends xl{constructor(t,e,i,n,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(t,e,i,n,s)}},e.TorusGeometry=xl,e.TorusKnotBufferGeometry=class extends _l{constructor(t,e,i,n,s,r){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(t,e,i,n,s,r)}},e.TorusKnotGeometry=_l,e.Triangle=gi,e.TriangleFanDrawMode=2,e.TriangleStripDrawMode=1,e.TrianglesDrawMode=0,e.TubeBufferGeometry=class extends bl{constructor(t,e,i,n,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(t,e,i,n,s)}},e.TubeGeometry=bl,e.UVMapping=s,e.Uint16BufferAttribute=Mi,e.Uint32BufferAttribute=Si,e.Uint8BufferAttribute=class extends wi{constructor(t,e,i){super(new Uint8Array(t),e,i)}},e.Uint8ClampedBufferAttribute=class extends wi{constructor(t,e,i){super(new Uint8ClampedArray(t),e,i)}},e.Uniform=lh,e.UniformsGroup=class extends mt{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:ch++}),this.name="",this.usage=ut,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let t=0,i=e.length;t<i;t++)this.uniforms.push(e[t].clone());return this}clone(){return(new this.constructor).copy(this)}},e.UniformsLib=wn,e.UniformsUtils=nn,e.UnsignedByteType=x,e.UnsignedInt248Type=S,e.UnsignedIntType=b,e.UnsignedShort4444Type=1017,e.UnsignedShort5551Type=1018,e.UnsignedShortType=_,e.VSMShadowMap=3,e.Vector2=Rt,e.Vector3=ne,e.Vector4=Qt,e.VectorKeyframeTrack=$l,e.VideoTexture=class extends Kt{constructor(t,e,i,n,s,r,o,a,l){super(t,e,i,n,s,r,o,a,l),this.isVideoTexture=!0,this.minFilter=void 0!==r?r:g,this.magFilter=void 0!==s?s:g,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}},e.WebGL1Renderer=Yr,e.WebGL3DRenderTarget=class extends $t{constructor(t,e,i){super(t,e),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new ee(null,t,e,i),this.texture.isRenderTargetTexture=!0}},e.WebGLArrayRenderTarget=class extends $t{constructor(t,e,i){super(t,e),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new te(null,t,e,i),this.texture.isRenderTargetTexture=!0}},e.WebGLCubeRenderTarget=hn,e.WebGLMultipleRenderTargets=class extends $t{constructor(t,e,i,n={}){super(t,e,n),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let t=0;t<i;t++)this.texture[t]=s.clone(),this.texture[t].isRenderTargetTexture=!0}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let n=0,s=this.texture.length;n<s;n++)this.texture[n].image.width=t,this.texture[n].image.height=e,this.texture[n].image.depth=i;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.texture.length=0;for(let e=0,i=t.texture.length;e<i;e++)this.texture[e]=t.texture[e].clone(),this.texture[e].isRenderTargetTexture=!0;return this}},e.WebGLMultisampleRenderTarget=class extends $t{constructor(t,e,i){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(t,e,i),this.samples=4}},e.WebGLRenderTarget=$t,e.WebGLRenderer=Xr,e.WebGLUtils=zr,e.WireframeGeometry=wl,e.WrapAroundEnding=st,e.ZeroCurvatureEnding=it,e.ZeroFactor=200,e.ZeroSlopeEnding=nt,e.ZeroStencilOp=0,e._SRGBAFormat=pt,e.sRGBEncoding=at}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,n),r.exports}n.m=t,n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n(10)})();